Emulab network testbed source release
Version 4.9.0
June 30, 2008
University of Utah, Flux Research Group

This is a preliminary release of the current source code for the
software that runs the Emulab network testbed at the University of Utah,
as well as over 20 testbeds at other sites:

   http://www.emulab.net/

This is a snapshot of a rapidly-evolving system.  It contains all Emulab
source required to build a running testbed, but interaction with Emulab
admins at Utah and elsewhere may be required to get things up and running.

Emulab is being actively developed, so there may be features in deployed
Emulabs (in particular, Utah's) that are not included in this release.
It is our intention to make new snapshots frequently, in the future.


HOW TO SETUP AN EMULAB
The Emulab installation documentation is located on the main Emulab Wiki.
See http://users.emulab.net/trac/emulab/wiki/InstallDocs


This source currently only builds on FreeBSD, and requires several packages;
the dependencies can be found in the Makefile for our 'meta-port's:
install/ports/emulab-boss and install/ports/emulab-ops.


HOW TO UPDATE AN EMULAB
The upcoming 5.0 release (intention to be in July 2008) will have better
support for people upgrading existing Emulabs.  We recommend you wait
for that; do not expect us to help much if you use this release.

If you insist, start by looking at doc/update-testbed.txt.


MAILING LISTS
If you are bringing up an Emulab, be sure to join the mailing list:
    testbed-admins@flux.utah.edu
    http://www.flux.utah.edu/mailman/listinfo/testbed-admins
which has open archives.


HELP/CONTACT INFORMATION
For help and to report bugs and problems, mail
   testbed-admins@flux.utah.edu   (preferable)
      or
   testbed-ops@flux.utah.edu      (if you insist on privacy)

Don't be shy!  We may be able to get the phone with you, too,
for "big picture" issues and problems.


LICENSE
See the file AGPL-COPYING for licensing conditions.  In summary, the
Emulab software is distributed under a free and open source license, the
GNU Affero General Public License version 3 (AGPLv3).  The AGPLv3
consists of the GNU General Public License version 3 (GPLv3) with a
single short added Section 13, which requires that the source be freely
available to all users who interact with the software through a network.


DOCUMENTATION
We are in the process of moving our documentation to the Emulab wiki at
https://users.emulab.net/trac/emulab/wiki/.
This should be considered the primary source of information.

doc/* contains documentation for developers.
www/*.html and www/doc/*.html contain end-user documentation.

Other good places to start would include:
  - The search box at www.emulab.net for the absolute latest FAQs and info
  - The doc/papers directory, which contains papers published about Emulab
  - The user tutorial (www/tutorial/tutorial.html)
  - The user FAQ (www/faq.html)
  - The user authorization document (www/auth.html)
  - Software architecture preliminary diagram (doc/arch-diagram.ps)
  - Notes on the source tree and architecture (doc/arch.txt)
  - Overview of some major systems (doc/overview.txt)
  - Diagrams and brief explanations of the state machines used in the 
    system (www/doc/states.html and www/doc/*.gif)
  - Mail we have exchanged with others about hardware recommendations
    (doc/hardware-mail.mbox)


QUICK TOUR
 - The Database maintains most testbed state.
   * LibDB (db/libdb.pm.in) and the assorted modules (db/*.pm.in) are the
     main DB interface for testbed software.
   * sql/database-create.sql contains the DB schema.
   
 - The Web Interface (www/*) is the primary means of managing and
   interfacing with the system.

 - The tbsetup directory contains the bulk of the server-side experiment
   setup and management code.
   * startexp (tbsetup/startexp.in) is the backend for experiment creation;
     Important scripts it calls include tbprerun (tbsetup/tbprerun.in) 
     and tbswap (tbsetup/tbswap.in).
   * ns2ir (tbsetup/ns2ir/*) converts NS files to DB state (via TCL and XML).
   * snmpit (tbsetup/snmpit.in) configures VLANs on switch hardware.

 - assign (assign/*) maps experiments to available hardware.

 - The frisbee subsystem (os/frisbee.redux, os/imagezip) is used for creation
   and rapid deployment of disk images.

 - tmcd (tmcd/*) is contacted by nodes as they boot up, to get configuration.

 - capture and console (capture/*, tip/*) provide serial line access to nodes.

 - The majority of the client-side (i.e., on each experiment node) boot-time
   setup code is in the tmcd/common and tmcd/<os-name> directories.  These
   are mostly perl and sh scripts for adding accounts, configuring interfaces,
   installing software, etc.


SOURCE TREE ORGANIZATION
account   -  Account creation and management
apache    -  Apache HTTPD configuration
assign    -  Resource allocation software
bugdb     -  Optional per-project bug database
capture   -  Node serial line server software
cdrom     -  Software related to CD-booting local and remote machines
collab    -  Optional per-project "collaboration" tools: CVS, jabber, mailman
db        -  Variety of interfaces to testbed state 
delay     -  RHL9 patches for supporting "end-node" traffic shaping
dhcpd     -  DHCPD configuration
doc       -  Documentation (mainly internal)
event     -  Event System
firewall  -  Code and notes for per-experiment control net firewalls
hyperviewer - 3D experiment visualization tool (not used)
image-test - Test framework for auto-testing of new OS images
install   -  Site installation scripts
ipod      -  "Ping of Death" software/patches
lib       -  C/C++ interface libraries
mote      -  Initial testbed support for Berkeley/Crossbow motes
named     -  BIND configuration files
os        -  Client-side software (disk loading, route calculation, etc.)
patches   -  Patches needed to compile standard software packages
pelab     -  Preliminary support for "Flexlab", an Emulab/PlanetLab hybrid
               (see http://www.cs.utah.edu/flux/flexlab/)
pxe       -  Software related to PXE-booting machines
rc.d      -  Server-side startup scripts
robots    -  Support for mobile wireless (Garcia robots)
security  -  Tools for secure boss node access
sensors   -  Node monitoring daemons
sql       -  Database schema and initialization
ssl       -  SSL Certificate configurations
sysadmin  -  Apache Log Roller
tbsetup   -  Experiment creation and manipulation
testsuite -  Automated testing suite
tip       -  Node serial line client software
tmcd      -  Testbed master control daemon and client (for node configuration)
tools     -  Miscellaneous infrastructure tools
utils     -  Testbed configuration and maintenance tools
vis       -  Experiment visualization
wiki      -  Support for per-project WIKIs
www       -  Web Interface / User Documentation
xmlrpc    -  Programatic XML-RPC interface to testbed


Good luck!
Jay Lepreau, lepreau@cs.utah.edu, and the Utah testbed crew.
June 30, 2008
