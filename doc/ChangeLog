stoller     2003/07/15 15:25:03 MDT

  Modified files:
    db                   libdb.pm.in 
    tbsetup              assign_wrapper.in os_setup.in tbswap.in 
                         vnode_setup.in 
  Log:
  A set of changes to make swapmod work on jailed nodes (note, swapmod
  does not yet work with remove virtual nodes; that will take even more
  work).
  
  Added a new allocstate called RES_TEARDOWN. assign_wrapper no longer
  deallocates unused nodes, but rather moves them into the new state for
  the wrapper (tbswap) to deal with. Thats cause deleted vnodes need to
  be torn down, since its possible that the node on which they were
  living will not be deallocated (say, if there are other vnodes on
  it). We do not want to be doing that from assign_wrapper, so tbswap
  looks for those nodes.
  
  Made vnode_setup allocstate aware in the same way that os_setup is;
  do not reboot vnodes or try to set up vnodes when they are already in
  the RES_READY state, as they will be when doing a swapmod. In
  addition, if os_setup is going to reboot the underlying physnode, move
  the vnodes on that node into RES_READY too, since there they will
  setup automatically. Might need an interim state here, for correctness.
  
ricci       2003/07/14 18:27:27 MDT
  Modified files:
    utils                newnode.in
    www                  newnodecheckin.php
  Added files:
    www                  newnode-defs.php3 newnode_edit.php3
                         newnodes_list.php3
  Log:
  Web interface for autoconfiguring nodes. This consisits of two pages,
  one that lists and allows operations on a number of nodes at once, and
  another that allows editing of an individual node.

  Split much of the functionality of newnodecheckin.php into a new
  library, so it can get re-called from newnodes_list.php3 later.

  Move where we look for MACs on the switches - instead of doing in in
  newnode, call it from newnodecheckin.php - this provides the admins
  more feedback as to what's going on, and allows them to call it again
  later or put the information in by hand.

stoller     2003/07/08 17:34:42 MDT

  Modified files:
    tbsetup              GNUmakefile.in 
  Log:
  Turn off mainbed exclusion of ns2ir build/install, now that parser
  has been working on minibed okay for a while. In other words, the new
  parser really is going to be installed on mainbed, any moment!
  
ricci       2003/07/01 10:14:42 MDT

  Modified files:
    assign               anneal.cc anneal.h assign.cc 
                         assign_todo.txt pclass.cc pclass.h 
                         physical.h score.cc 
  Log:
  Give assign the ability to make dynamic pclasses. Here's how it works:
  After building the set of pclasses normally, we make another pass
  through the vnodes. The goal to create a pclass for each individual
  node. We disable the node's 'own' pclass to begin with. Then, the
  _first_ time it gets a vnode mapped to it, we remove it from the
  'regular' pclass it belongs to, and enable it's own pclass. Then, if
  it goes empty, we put it back in its regular pclass and disable it's
  own.
  
  The point of this is to replace -p for use with multiplexed nodes.
  Instead of disabling pclasses altogheter, which has serious
  performance implications, we can instead be smart about which pnodes
  remain equivalent (because nothing's been mapped to them), and which
  are now different. The result is that on my test topoloy, the time to
  get a good mapping has gone from over 3 minutes to about 6 seconds.
  
  This feature is enabled with the -d option, and the -P option is
  pretty much mandatory when using it, since it greatly exacerbates the
  problem of cruft in the ptop file.
  
  This satisfies #14 from the todo file:
  14.  do dynamic pclasses
  
  Also bumped up the minimum neighborhood size from 500 to 1000. In some
  tests I was doing, this resulted in better solutions.
  
ricci       2003/06/26 13:13:16 MDT

  Modified files:
    assign               anneal.cc anneal.h assign.cc 
                         assign_internals.txt parse_ptop.cc 
                         pclass.cc physical.h score.cc solution.cc 
    tbsetup              assign_wrapper.in ptopgen.in 
  Log:
  Major changes to the way assign handles LAN nodes.
  
  LAN nodes are no longer treated specially. Instead, I've introduced
  the idea of 'static' types (old-style types retroactively become
  'dynamic' types). While a pnode can only satisfy one dynamic type at a
  time, it can always satisfy its static types (assuming it has enough
  capacity left.) Static types are flagged by prepending them with a '*'
  in the ptop file. So, for example, you may give switches the
  '*lan:10000' type so that they can satisfy virtual LAN nodes. Of
  course, other pnodes can have this type too, so that we can get
  'trivial LANs'.
  
  Actually, removing special treatment for LANs cleans up a lot of code.
  However, it may have some negative impacts on solutions, since we're
  not as smart about where to place LAN nodes as we used to be (they get
  annealed along with everything else, and not migrated.) I haven't seen
  any evidence of this yet, however.
  
  This leaves us with a single type of special pnode, a switch.
  
  Also added a new bit of syntax in ptop files - when '*' is given as a
  the maxiumum load for a type, the node is allowed to take on an
  infinite (well, actually, just a really big number of) vnodes of that
  type.
  
  ptopgen was modified to always report switches as being capable of
  hosting LANs, and assign_wrapper now understands direct links to LANs,
  which is what we get when the LAN is hosted directly on a switch.
  
  Fixed a bug in scoring direct links, in which the penatly was being
  added once when a direct link was mapped, but subtracted only once
  when it was freed.
  
  Added a '-T' option for doing simple self-testing. When adding a node
  to the solution, assign records the score, adds the node, removes it
  again, and checks to make sure that the resulting score is the same as
  the original score. The usefulness of this feature in debugging
  scoring problems cannot be understated...


stoller     2003/06/30 11:33:58 MDT

  Modified files:
    .                    GNUmakefile.in configure configure.in 
    db                   xmlconvert.in 
    tbsetup              GNUmakefile.in batchexp.in nscheck.in 
    tbsetup/ns2ir        GNUmakefile.in lanlink.tcl node.tcl 
                         parse-ns.in parse.tcl.in program.tcl 
                         sim.tcl.in tb_compat.tcl.in traffic.tcl 
                         vtype.tcl 
    testsuite/tests/db1  test 
  Added files:
    tbsetup/ns2ir        parse.proxy.in 
  Log:
  Make the new parser live on mini. New parser ssh'es over to ops to
  do the actual parse, as the user. The parser now spits out XML instead of
  DB queries, and the wrapper on boss converts that to DB insertions after
  verification, using the new xmlconvert script. There are some makefile
  changes as well to install the new parser on ops via NFS, since
  otherwise the parser could intolerably out of date on ops!


stoller     2003/06/26 15:30:02 MDT

  Modified files:
    db                   GNUmakefile.in 
  Added files:
    db                   xmlconvert.in 
  Log:
  New script. Convert experiment to "well formed" XML, and back again.
  The conversion from XML to an experiment representation updates the
  DB, although the experiment has to exist, and only certain fields can
  be updated. For the rest of the virtual toplogy, the old toplogy is
  deleted, and the new one installed. Use with caution. This is intended
  to be hooked to the parser, and later to the vis tool so that it does
  not need to have to do its own NS parsing, but can simply interpret the
  XML. 
  

stoller     2003/06/23 13:55:30 MDT

  Modified files:
    cdrom/waboot         netbed-setup.pl register.pl waipconfig.pl 
  Log:
  Add support for DHCP to the NetBed CDROM.
  
  Revision  Changes    Path
  1.5       +19 -8     testbed/cdrom/waboot/netbed-setup.pl
  1.11      +17 -0     testbed/cdrom/waboot/register.pl
  1.8       +77 -4     testbed/cdrom/waboot/waipconfig.pl

stoller     2003/05/22 15:35:51 MDT

  Modified files:
    db                   libdb.pm.in 
    tbsetup              batch_daemon.in batchexp.in endexp.in 
                         swapexp.in 
    www                  beginexp.php3 swapexp.php3 
  Log:
  Reorg the batch system slightly as per Eric's request that batch mode
  experiments look more like regular experiments. Batch mode experiments
  can now be preloaded and swapped. When preloaded, they go into a
  "Pause" state. Swapping a batch mode experiment in puts them into the
  "posted" state so the batch daemon will see them. Swapping out a
  batchmode experiment does the expected; it puts them back into the
  Pause state. Terminating a batch mode experiment does the expected;
  its gone. When a batch mode experiment finishes normally, it goes back
  into the pause state, which allows batches to be reinjected as many
  times as Eric likes.
	
stoller     2003/05/1 09:09:12 MDT
	
  Modified files:
    event/sched          event-sched.c event-sched.h 
    lib/libtb            tbdefs.c tbdefs.h 
    sql                  database-fill.sql 
    tbsetup              eventsys_control.in 
    tbsetup/ns2ir        sim.tcl.in 
  Log:
  Add the long desired halt/swap event directives. You can now put this
  in your NS file:
  
  	$ns at 2000.0 "$ns halt" (or terminate)
  or
  	$ns at 2000.0 "$ns swapout"
  
  The first causes the experiment to terminate, the later causes it to
  swap out. The units are seconds, as are all "at" statements.

  NOTE: You can use halt (terminate) to cancel a batch experiment, but you
	cannot schedule a swapout.

stoller     2003/04/16 11:41:12 MDT

  Modified files:
    .                    configure configure.in 
    tbsetup              GNUmakefile.in swapexp.in 
    www                  showexp.php3 swapexp.php3 
  Added files:
    tbsetup              idleswap.in webidleswap.in 
  Log:
  Add support for idleswapping an experiment as the creator of the
  experiment, rather than as an administrator, which presents group
  permission problems when the experiment is in a subgroup (requires two
  additional group, whereas suexec adds only one group). That aside, the
  correct approach is to run the swap as the creator. To do that, must
  flip to the user (from the admin person) in the backend using the new
  idleswap script, and then run the normal swapexp. Add new option to
  swapexp (-i) which changes the email slightly to make it clear that
  the experiment was idleswapped, and so that the From: is tbops not the
  user (again, to make it more clear).
  
newbold     2003/04/09 16:07:12 MDT

  Modified files:
    .                    configure configure.in defs-barb-emulab 
                         defs-barb-mini defs-calfeld-emulab 
                         defs-default defs-example 
                         defs-kwebb-emulab defs-mini 
                         defs-newbold-emulab defs-newbold-macdb 
                         defs-newbold-mini defs-rchriste-emulab 
                         defs-ricci-emulab defs-ricci-mini 
                         defs-shash-emulab defs-shash-mini 
                         defs-stoller-emulab defs-stoller-home 
                         defs-stoller-mini defs-uky defs-wide 
  Added files:
    account              quotamail.in 
  Log:
  Add new script to notify users when they are over their quota. Runs from
  cron daily, on the fs node (ops) as root. Uses lots of configure variables
  so that it does the right thing in any installation, without any
  customization.
  
  One possible caveat regarding quotas: If FS_NODE != USERNODE, they don't
  have a login on the fs machine. So checking their quota won't work unless
  the rpc.rquotad(8) daemon is running on FS_NODE, which we currently don't
  do.
  
  In order to do this right, I had to add a new configure var,
  FS_WITH_QUOTAS, that has a space separated list of file systems that have
  quotas enabled. (Ie the default is 'FS_WITH_QUOTAS="/q /users"'.) It
  doesn't have any default, since I couldn't come up with a reasonable one.
  All the defs files have been updated appropriately to define this new
  variable.


mike        2003/04/09 15:18:00 MDT
	
  Semi-major frisbee overhaul:

  Implement PREQUEST message which passes a bit map of desired blocks.
  We still use the REQUEST message (start block + number of blocks) for
  full chunk requests as that is more efficient.

  Allow dynamic number of variable-sized write buffers.  Total memory
  not to exceed the writebufmem limit.

  Eliminate a complete copy of the uncompressed data in the client.

  Fix a bug in the client where we would not keep our request-ahead window full.

  Fix a bug in the server where we would not merge incoming requests with
  the request currently being serviced.
	
  The above changes/bugfixes gave us about a 5% improvement in run time locally.

  Add some client/server convenience options.  For the server, -W allows 
  specification of a target bandwidth.  For the client, -C, -W and -M
  give various ways of specifying how much memory to use for net/disk
  buffering.

  Security: -S option tells client to only accept packets from a specific
  IP address.
	
stoller     2003/04/08 03:03:01 MDT

  Update Linux image to Redhat 7.3. The old image is still available to
  users by using the OSID RHL71-STD in their NS files. 
	    
newbold     2003/04/08 12:32:01 MDT

  Modified files:
    .                    configure configure.in 
    db                   GNUmakefile.in 
  Added files:
    db                   idlemail.in idletimes.in webidlemail.in 
  Removed files:
    db                   idlecheck.in 
  Log:
  Remove idlecheck. Add idletimes and idlemail (and webidlemail).
  (webidlecheck was removed in a separate commit.)
  
  idletimes is the new commandline tool for checking idleness. It shows a
  table like this:
  
 PID          EID          Nodes  HrsIdle     Last Activity     Act. type
 ------------------------------------------------------------------------
 AVQ          Tunnel           4   15.18   2003-04-07 21:18:20  tty
 pces         toy              1    3.92   2003-04-08 08:34:02  tty
 Spinglass    fawaz            1   13.76   2003-04-07 22:43:48  tty
 TempleSCTP   FTP-REAL         1   26.40   2003-04-07 10:05:18  tty,net
 testbed      bvclass          4   24.58   2003-04-07 11:54:13  net
 testbed      ltest            1   14.37   2003-04-07 22:07:02  tty
 testbed      ron-image        1  501.88   2003-03-18 13:36:28  cpu,ext,tty,net
 testbed      Tone             1  501.88   2003-03-18 13:36:30  cpu,ext,tty,net
  
  By default it only shows things that are over an idleness threshold. It
  also has a mode to show all expts. Also can show idleness/activity by node
  instead of by expt, which has a slightly different table. (s/Nodes/NodeID/)
  
  idlemail isn't finished yet, but I don't want it to hold up idletimes and
  the other changes any longer. It doesn't get used by anything yet, of
  course.

stoller     2003/04/04 10:20:31 MST

  Modified files:
    sql                  database-migrate.txt 
    www                  approveproject_list.php3 
                         approveuser_form.php3 joinproject.php3 
                         moduserinfo.php3 newproject.php3 
                         showstuff.php3 verifyusr.php3 
                         widearea_register.php 
  Log:
  Add "Address Line 2", City, State, and Zip as independent entities,
  finally! These have been in the DB for a long time, but never used.
  As Eric pointed out, its easier to get realistic address info from
  people if we provide the right forms. The downside is that all current
  users will have to adjust their info the next time they edit their
  info. Thats okay. I thought about forcing all users to do it the next
  time they log in, but I figured people would scream.

newbold     2003/04/02 15:24:48 MST

  Modified files:
    .                    configure configure.in defs-barb-emulab 
                         defs-barb-mini defs-calfeld-emulab 
                         defs-default defs-example 
                         defs-kwebb-emulab defs-mini 
                         defs-newbold-emulab defs-newbold-macdb 
                         defs-newbold-mini defs-rchriste-emulab 
                         defs-ricci-emulab defs-ricci-mini 
                         defs-shash-emulab defs-shash-mini 
                         defs-stoller-emulab defs-stoller-home 
                         defs-stoller-mini defs-wide 
    www                  defs.php3.in 
  Removed files:
    www                  barb-emulab-defs.php3 barb-mini-defs.php3 
                         default-defs.php3 example-defs.php3 
                         kwebb-emulab-defs.php3 mini-defs.php3 
                         newbold-emulab-defs.php3 
                         newbold-mini-defs.php3 
                         ricci-emulab-defs.php3 
                         ricci-mini-defs.php3 
                         shash-emulab-defs.php3 
                         shash-mini-defs.php3 
                         stoller-emulab-defs.php3 
                         stoller-home-defs.php3 
                         stoller-mini-defs.php3 wide-defs.php3 
  Log:
  Massive reworking of our structure for defs files.
  
  Before:
  The main defs file (ie for configure) had an entry for WWWDEFS that
  pointed to a <@WWWDEFS@>-defs.php3 file in the www/ directory. The www
  defs file loaded some values about web pages, URLs, and some web
  configuration parameters.
  
  Problem:
  Anything that was only in the www defs file was not accessible in the rest
  of the universe (ie perl, C, and any other non-web-page scripts). For
  instance, you couldn't have a perl script send an email to a user with a
  link to the web site.
  
  Solution:
  Nuke all the www-defs files, move any important values into the main
  configure, and change the web defs infrastructure to respect that. This
  also meant adding about 3 lines each to all of the configure defs files.
  (There really are about 10 new values you can change in your defs file,
  but in almost all cases, the default values are the right thing.)
  
  Upgrading:
  External sites will need to move a few variables from their www-defs file
  into their configure defs file. The example file should make it pretty
  obvious. They may also want to customize some of the other vars that are
  mentioned in configure.in and www/defs.php3.in .

stoller     2003/03/29 10:23:30 MST

  Modified files:
    www                  approveproject.php3 joinproject.php3 
                         login.php3 newgroup.php3 newproject.php3 
                         reqaccount.php3 
  Log:
  Add target_pid,target_gid arguments to joinproject page so that
  we can send links that cause those fields to be filled in for people.
  Add those links to email generated by newproject and newgroup pages
  so that they can be saved by the leaders.
  
  Add a bit of referrer magic to login page. When clicked from the join
  or new project pages, tell login page to pass along the referrer page
  so that when login is complete, user is zapped back to the original
  page. This is especially nice when combined with the above change to
  joinproject, whereby we send along the target pid/gid, but the user
  has not yet logged in and remembers to do so via the link at the top
  of the page.

stoller     2003/03/27 17:01:52 MST

  Modified files:
    db                   libdb.pm.in 
    www                  dbdefs.php3.in 
  Log:
  Changes to permission checks for nodes, experiments, and images.
  In addition to the usual checks, project_root and group_root (in the
  project) get the same permission as if they were in the subgroups with
  group_root permission. This means they can swap/terminate/reboot etc
  in subgroups even though they are not members of the subgroups.
  There is still some copy problems with files, but leaving that till
  later to deal with.
  

