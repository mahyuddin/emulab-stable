#!/usr/bin/perl
use lib 'lib';
use SemiModern::Perl;

if (-f glob("~/lib/perl5/Test/Harness.pm")) {
  my $glob = glob('~/lib/perl5');
  my $p5l = $ENV{PERL5LIB};
  unless ( (defined $p5l) && ($p5l =~ /$glob/)) {
    if (defined $p5l) {
      $ENV{PERL5LIB} .= ":$glob";
    }
    else {
      $ENV{PERL5LIB} = "$glob";
    }
  }
}

$ENV{PERL5LIB} .= ":tests";

use Data::Dumper;

{
  use Getopt::Long;
  my $pjobs   = 1;
  my $logging = 0;
  my $timing;
  my $verbose;
  my $debug;
  my $project;
  my $group;
  my $defines;
  my $xmlrpcurl;
  my $result = GetOptions (
#      "D=s%"        => \$defines,
      "jobs=i"      => \$pjobs,
      "logging=i"   => \$logging,
      "timing"      => \$timing,
      "verbose"     => \$verbose,
      "project=s"   => \$project,
      "xmlrpcurl=s" => \$xmlrpcurl,
      "group=s"     => \$group,
      "debug"       => \$debug);

  if ($debug)     { $ENV { 'TBTS_DEBUG'      } = 1; }
  if ($group)     { $ENV { 'TBTS_GROUP'      } = $group;  }
  if ($pjobs > 1) { $ENV { 'HARNESS_OPTIONS' } = "j$pjobs"; }
  if ($project)   { $ENV { 'TBTS_PROJECT'    } = $project; }
  if ($timing)    { $ENV { 'HARNESS_TIMER'   } = 1; }
  if ($verbose)   { $ENV { 'HARNESS_VERBOSE' } = 1; $ENV { 'HARNESS_COLOR' } = 1; }
  if ($xmlrpcurl) { $ENV { 'TBTS_XMLRPC_URL'  } = $xmlrpcurl; }
}
my $THARNESS = 'perl t/harness';

sub usage {
  our $ts;
  our $tpms;
  sub wanted_t {
    if (-f && /\.t$/) {
      $ts .= "        " . $File::Find::name . "\n";
    }
  }
  sub wanted_tests {
    if (-f && /\.pm$/) {
      $tpms .= "        " . $File::Find::name . "\n";
    }
  }
  use File::Find;
  find(\&wanted_t, 't');
  find(\&wanted_tests, 'tests');

  print <<"USAGE";
TestBed TestSwap
./tbts OPTIONS TESTSUITE|TESTFILE
        -d --debug
        -g --group=GROUPNAME
        -j --jobs=i    parallel jobs
        -p --project=PROJECTNAME
        -t --timing
        -v --verbose
        -x --xmlrpcurl=XMLRPCURL

    TESTSUITES:
        test     - all topology tests
        sanity   - all framework utility and xmlrpc client modules test
        lib      - all framework utility tests
        xmlrpc   - all xmlrpc client modules tests
        
        critic   - runs perl critic on framework code
        coding   - 

    TESTFILES:
USAGE
  print $ts;
  print $tpms;
}

my @basic_exper_tests = qw( 
    t/topologies/single_node.t 
    t/topologies/two_node_lan.t 
    t/topologies/simple_two_node_linktest.t 
    t/topologies/link_up_link_down.t
);
#sayd(@basic_exper_tests);


if (@ARGV) {
  my $cmd = $ARGV[0];
  $_   = $cmd;
  chomp $_;
  if (/.*\.t$/ || /.*\.pm/) { exec "$THARNESS $cmd"; }
  elsif ($_ eq 'podc')      { system 'for x in `find lib -iname "*.pm"`; do podchecker $x 2>&1 |grep contain; done; '; }
  elsif ($_ eq 'pode')      { system 'for x in `find lib -iname "*.pm"`; do podchecker $x 2>&1 |grep ERROR; done;'; }
  elsif (/critic/)          { exec 'perlcritic lib t'; }
  elsif (/codingtests/)     { }
  elsif (/sanity/)          { exec "$THARNESS t/lib/*.t t/lib/*/*.t t/xmlrpc/*.t "; }
  elsif (/lib/)             { exec "$THARNESS t/lib/*.t t/lib/*/*.t"; }
  elsif (/xmlrpc/)          { exec "$THARNESS t/xmlrpc/*.t"; }
  elsif (/test/)            { exec "$THARNESS t/topologies/*.t"; }
  elsif (/test/)            { exec "$THARNESS t/topologies/*.t"; }
}
else {
  print usage();
}

