#!/usr/bin/perl
use lib 'lib';
use SemiModern::Perl;

if (-f glob("~/lib/perl5/Net/SSH/Perl.pm")) {
  my $glob = glob('~/lib/perl5');
  my $p5l = $ENV{PERL5LIB};
  unless ( (defined $p5l) && ($p5l =~ /$glob/)) {
    if (defined $p5l) {
      $ENV{PERL5LIB} .= ":$glob";
    }
    else {
      $ENV{PERL5LIB} = "$glob";
    }
  }
}

use Data::Dumper;

{
  use Getopt::Long;
  my $pjobs   = 1;
  my $logging = 0;
  my $timing;
  my $verbose;
  my $result = GetOptions (
      "jobs=i"     => \$pjobs,
      "logging=i"  => \$logging,
      "timing"     => \$timing,
      "verbose"    => \$verbose);

  if ($pjobs > 1) {
    $ENV{'HARNESS_OPTIONS'} = "j$pjobs";
  }
  if ($timing) {
    $ENV{'HARNESS_TIMER'} = 1;
  }
  if ($verbose) {
    $ENV{'HARNESS_VERBOSE'} = 1;
    $ENV{HARNESS_COLOR} = 1;
  }
}
my $THARNESS = 'perl t/harness';

sub usage {
  our $ts;
  sub wanted {
    if (-f && /\.t$/) {
      $ts .= "        " . $File::Find::name . "\n";
    }
  }
  use File::Find;
  find(\&wanted, 't');

  print <<"USAGE";
./tbts 
        test     - all topology tests
        sanity   - all framework utility and xmlrpc client modules test
        lib      - all framework utility tests
        xmlrpc   - all xmlrpc client modules tests
        
        critic   - runs perl critic on framework code
        coding   - 

USAGE
  print $ts;
}

if (@ARGV) {
  my $cmd = $ARGV[0];
  $_   = $cmd;
  chomp $_;
  if (/.*\.t$/) { exec "$THARNESS $cmd"; }
  elsif ($_ eq 'podc')    { system 'for x in `find lib -iname "*.pm"`; do podchecker $x 2>&1 |grep contain; done; '; }
  elsif ($_ eq 'pode')    { system 'for x in `find lib -iname "*.pm"`; do podchecker $x 2>&1 |grep ERROR; done;'; }
  elsif (/critic/)    { exec 'perlcritic lib t'; }
  elsif (/codingtests/) {  }
  elsif (/sanity/) { exec "$THARNESS t/lib/*.t t/lib/*/*.t t/xmlrpc/*.t "; }
  elsif (/lib/)    { exec "$THARNESS t/lib/*.t t/lib/*/*.t"; }
  elsif (/xmlrpc/) { exec "$THARNESS t/xmlrpc/*.t"; }
  elsif (/test/)   { exec "$THARNESS t/topologies/*.t"; }
}
else {
  print usage();
}

