#!/usr/bin/perl
use Modern::Perl;

package TestBed::XMLRPC::Client::Experiment;
use Mouse;
use Data::Dumper;

extends 'TestBed::XMLRPC::Client';

has 'pid' => ( isa => 'Str', is => 'rw');
has 'eid' => ( isa => 'Str', is => 'rw');

#autoloaded/autogenerated/method_missings/etc batchexp swapexp endexp waitforactive getlist expinfo

sub args {
  my $self = shift;
  { 'pid' => $self->pid, 'eid' => $self->eid, @_ };
}

sub echo           { shift->augment_output( 'str' => shift ); }
sub getlist_brief  { shift->augment( 'format' => 'brief'); }
sub getlist_full   { shift->augment( 'format' => 'full' ); }
sub batchexp_ns    { shift->augment( 'nsfilestr' => shift, @_ ); }
sub swapin         { shift->augment_func( 'swapexp', 'direction' => 'in' ); }
sub swapout        { shift->augment_func( 'swapexp', 'direction' => 'out' ); }
sub swapinw        { shift->augment_func( 'swapexp', 'direction' => 'in',  'wait' => 1 ); }
sub swapoutw       { shift->augment_func( 'swapexp', 'direction' => 'out', 'wait' => 1 ); }
sub end            { shift->augment_func( 'endexp' ); }
sub waitforswapped { shift->augment_func( 'statewait', 'state' => 'swapped' ); }

sub gen_expinfo_funcs {
  my ($package) = caller();
  for my $funcname (qw( nodeinfo mapping linkinfo shaping) ) {
    my $sub = sub {
      shift->augment_func('expinfo', 'show' => $funcname );
    };
    no strict 'refs';
    *{ $package . '::' . $funcname } = $sub;
  }
}
gen_expinfo_funcs();

1;
