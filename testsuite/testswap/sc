#!/usr/bin/perl
use lib 'lib';
use SemiModern::Perl;
use TestBed::TestSuite::Experiment::Macros;
use Data::Dumper;
use Tools::TBSSH;
use TestBed::Wrap::tevc;

my $ns = <<'NSEND';
source tb_compat.tcl

set ns [new Simulator]

set node1 [$ns node]
set node2 [$ns node]

set lan1 [$ns make-lan "$node1 $node2" 100Mb 0ms]
set link1 [$ns duplex-link $node1 $node2 100Mb 50ms DropTail]
$ns run
NSEND

sub usage {
say <<"END"
./sc
     start eid
     end   eid
     ping  eid
     ni    eid  // nodeinfo
     li    eid  // linkinfo
END
}

my $pid = 'tbres';

if (@ARGV) {
  $_ = $ARGV[0];
  my $eid = $ARGV[1];
  my $e = e($pid, $eid);
  if (/--help/) { usage; } 
  elsif (/end/) { $e->end(); }
  elsif ( /ping/ ) {
    my $nodes = $e->nodeinfo();
    for (@$nodes) {
     say; 
     use Tools::PingTest;
     ping($_);
    }
  }
  elsif (/start/) { $e->startexp_ns_wait($ns); }
  elsif (/ni/) { say Dumper($e->nodeinfo) ;}
  elsif (/li/) { say Dumper($e->linkinfo) ;}
  elsif (/tevc/) { tevc("-e $pid/$eid now link1 down"); }
}
else {
  usage;
  plistexps;
}

# vim: ft=perl:
