-- MySQL dump 8.23
--
-- Host: localhost    Database: tbdb
---------------------------------------------------------
-- Server version	3.23.59-nightly-20050301-log

--
-- Dumping data for table `knowledge_base_entries`
--


REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (3,'stoller','2005-08-16 10:06:07','Getting Started','Who is Eligible to use Emulab.Net?','In principle, almost any research or educational use\r\nby those that have a need for it is appropriate and encouraged.\r\nThis includes use by universities, industrial research labs, and both\r\nUS and non-US institutions.   With some provisos, use for development\r\nand evaluation is also acceptable, even by companies.\r\nSee our <a href =\"docwrapper.php3?docname=policies.html\">posted policies</a>\r\nfor more detail.  If you are unsure about your eligibility to use\r\nNetbed/Emulab, please just send us an email inquiry.\r\n',NULL,1,'2005-08-16 12:10:16','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (5,'stoller','2005-08-16 10:50:44','Getting Started','How do I start a project?','<p>\r\nIf you are new to the Testbed, simply click on the \"Start Project\"\r\nlink on the Emulab <a href=\"http://www.emulab.net\">Home\r\nPage</a>. You will need to fill in the forms with your personal\r\ninformation and information about the project. Then click on the\r\n\"Submit\" button. Within a few days you will be contacted via email\r\nwith an approval message. More information about starting projects\r\ncan be found in <a href=\"docwrapper.php3?docname=auth.html\">\r\nAuthorization Page</a>.\r\n</p>\r\n<p>\r\nIf you already have an Emulab account, and wish to start a second\r\nproject, first log into the Web Interface. Then select the \"Start\r\nProject\" link; all of the personal information will already be\r\nfilled in. You will need to complete just the project information\r\nsection. \r\n</p>\r\n','start-project',1,'2005-08-16 12:10:32','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (6,'stoller','2005-08-16 11:00:05','Getting Started','I\'m a project leader and someone applied to join my project, but they are not on the list to be approved','<p>\r\nJoining a project has 3 stages. The first two are done by\r\nthe person trying to join, and they both must be completed\r\nbefore you can approve their application. The first two are\r\noutlined <a href=\"kb-show?xref_tag=join-project\">here</a>, where the\r\nuser fills out the \"Join Project\" form, and performs account\r\nverification. After these two steps are both complete, the\r\nproject leader and any group leaders in the group \r\n(<a href=\"#GS-6\">More info here</a>) will get an email saying\r\nthe account is ready to be approved, and it will appear on the\r\nlist of new users waiting to be approved.\r\n<p>\r\nIf someone says they\'ve applied, but you haven\'t received an\r\nemail from Emulab about it, and they don\'t show up on your\r\nlist, the most likely cause is that they haven\'t finished the\r\nverification step.\r\n</p>\r\n',NULL,1,'2005-08-16 12:12:12','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (7,'stoller','2005-08-16 12:14:39','Getting Started','How do I join a project?','<p>\r\nIf you are new to the Testbed, simply click on the \"Join Project\"\r\nlink on the Emulab <a href=\"http://www.emulab.net\">Home\r\nPage</a>. You will need to fill in the form with your personal\r\ninformation, and provide the name of the project you are trying to\r\njoin (typically, the <i>Project Leader</i> will have told you the\r\nname of the project). Then click on the \"Submit\" button, and wait\r\nfor an email with your new user key. When that email arrives, use\r\nthe link in it (or the key itself), and use it with your password \r\nto log into the web site and verify your account. Then just wait\r\nfor the project leader to approve you.  When approved you will\r\nreceive an email message saying so, and you can then log into the\r\nTestbed.\r\n</p>\r\n','join-project',1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (8,'stoller','2005-08-16 12:15:51','Getting Started','Will Emulab send me email messages?','    <p>\r\n      Yes! Emulab uses email notifications to you in several different\r\n      ways. Often it will send you a copy of information regarding\r\n      experiments you set up, applications to projects, and other\r\n      things you do at Emulab. Sometimes (like with account\r\n      verification) the email is a critical part of being able to use\r\n      Emulab.\r\n    <p>\r\n      For those reasons it is <b>critical</b> that any spam filtering\r\n      software you have accept email from Emulab itself (anything\r\n      coming from the emulab.net domain) and from Emulab staff (from\r\n      the cs.utah.edu or flux.utah.edu domains). In many cases, it may\r\n      also say that is from a specific machine in those domains. Our\r\n      messages usually do not get flagged as spam by most filters, but\r\n      in certain cases it can be a problem. It is also important that\r\n      it not require manual intervention or confirmation to get emails\r\n      through to you, so programs like SpamKiller can cause problems.\r\n    <p>\r\n      It is also important to read your email often while you are\r\n      using Emulab, especially while you have machines reserved in \r\n      an experiment. A few emails may be the only notification you\'ll\r\n      get before we swap out an experiment that appears to be idle,\r\n      and if you don\'t respond, you may lose important work. Email is\r\n      also our method for informing you about problems we may be\r\n      experiencing, downtimes, or other important announcements. Your\r\n      experience with Emulab (and ours with you) will be much more\r\n      pleasant if everyone is responsive to email.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (9,'stoller','2005-08-16 13:15:09','Getting Started','I have an Emulab account. Now what?','    <p>\r\n    Once you have been approved to start (or join) your first project,\r\n    you will be able to log into Emulab\'s user machine,\r\n    <b>users.emulab.net</b>. We require that all Emulab users use ssh. For\r\n    example, if your Emulab account name is \"joe\", then you would do:\r\n    <pre>\r\n	ssh users.emulab.net -l joe		</pre>\r\n    </p>\r\n    <p>\r\n    Your password is the same as the password you supplied to the\r\n    Start (or Join) Project web page.\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (10,'stoller','2005-08-16 13:17:35','Getting Started','Can I be in more than one project?','    <p>\r\n    Yes. You may join (and/or start) as many projects as you like,\r\n    subject to Emulab <a href=\"docwrapper.php3?docname=policies.html\">\r\n    administrative policies</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (11,'stoller','2005-08-16 13:18:51','Getting Started','Can I change my Emulab password?','    <p>\r\n    Yes. You can change your Emulab Web password and your Emulab login\r\n    password (the password you use to log into <b>users.emulab.net</b>, as\r\n    well as nodes in your experiments). To change your password,\r\n    simply click on the \"Update User Information\" in the menu to your\r\n    left, and then enter your new password in the location provided.\r\n    Your new password will be installed on <b>users.emulab.net</b>\r\n    immediately. Your experimental nodes will get the new password\r\n    when they reboot.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (12,'stoller','2005-08-16 13:19:34','Getting Started','I\'m a project leader. Can I designate TAs?','    Yes. To designate a TA, you must first create a project\r\n    <em>group</em>. A project group is a lot like a unix group, and\r\n    in fact unix groups is the mechanism used to protect members of\r\n    one group from members of another group. When you create a group,\r\n    you designate a <em>group leader</em> who is responsible for\r\n    approving users who apply to join the group. Group leaders may\r\n    also terminate experiments that have been created by members of\r\n    the group. As Project Leader, you may also shift members of your\r\n    project in and out of your project\'s groups as you like, and you\r\n    are automatically a member of all groups within your project. As a\r\n    convenience, all new projects are created with one new group,\r\n    termed the <em>default group</em>. As its name implies, whenever\r\n    the group is left unspecified in a form, it defaults to the\r\n    project group (this allows you to create a project without any sub\r\n    groups at all; new members join the default group, new experiments\r\n    are created in the default group, etc.).\r\n    </p>\r\n\r\n    <p>\r\n    Project groups are created via the Project Information link at\r\n    your left. Simply go to the project page in which you want to\r\n    create a group, and look for the \"Create New Group\" link. More\r\n    information on project groups is available via the <a\r\n    href=\"doc.php3\">Emulab Documentation</a> page in the\r\n    <a href=\"docwrapper.php3?docname=groups.html\">Groups Tutorial</a>.\r\n    </p>\r\n',NULL,1,'2005-08-16 13:19:46','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (13,'stoller','2005-08-16 13:21:17','Getting Started','How do I report a specific problem?','    <p>\r\n    Don\'t hesitate to send us <a href=\"emailus.php3\">email</a>!\r\n    <p>\r\n    Ok, hesitate just a little and read the rest of this entry first.\r\n    Before sending email, be sure to check out the\r\n    <a href=\"kb-show.php3?xref_tag=troubleshooting\">Troubleshooting</a>\r\n    entry which describes several common problems and possible causes.\r\n    If you do send email, there are several pieces of information you\r\n    should include to make our job easier.\r\n    <ul>\r\n    <li> The affected <b>project and experiment name</b> is pretty obvious,\r\n    but some people forget.\r\n    <li> The particular <b>nodes, OSes, and programs</b>\r\n    involved will help us zero in on the problem more quickly.\r\n    <li> The <b>time</b> at which the problem occurred.\r\n    We need this to correlate with our various log files.\r\n    <li> Any <b>relevant observations and actions</b> you have attempted.\r\n    Did the problem only happen once?  Is it reproducible?  Did restarting\r\n    a program or rebooting a node help?\r\n    </ul>\r\n    After sending email,\r\n    <em>please do not swap or terminate the experiment</em>, if possible.\r\n    It can be a lot harder to track down a problem after the experiment\r\n    is gone.  Sometime you may need to terminate it, for example it is\r\n    in the middle of the night our time and you really need the nodes\r\n    that are tied up in the experiment.  But at least give us 15 minutes\r\n    to respond to your message before acting, and then let us know that\r\n    you did swap/terminate it.\r\n    </p>\r\n','problem-reporting',1,'2005-08-16 13:26:07','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (14,'stoller','2005-08-16 13:30:54','Troubleshooting','My experiment setup failed, what did I do wrong?','    <p>\r\n    Experiments can fail in many, many ways, but before you send the above\r\n    vague question off to us, consider a couple of things.\r\n    First, look carefully at the \"experiment failed\"\r\n    e-mail that you received.  It includes a log of the setup process which,\r\n    while not a model of clarity, often contains an obvious indication of what\r\n    happened.\r\n    <p>\r\n    One potential point of failure is the mapping phase where Emulab\r\n    attempts to map your topology to the available resources.  Look\r\n    in the log for where it runs <code>assign</code>.  Common errors\r\n    here include:\r\n    <ul>\r\n    <li> Your topology that requires more physical nodes than\r\n    are currently available.  There should be a message of the form:\r\n    <pre>\r\n    *** NN nodes of type XX requested, but only MM found\r\n    </pre>\r\n    in the log.  You should always check the free node count on the left\r\n    menu before trying an experiment swapin.  Keep in mind that shaped\r\n    links might require additional traffic-shaping nodes above and beyond\r\n    nodes that are explicit in your topology.\r\n    <p>\r\n    <li> Your topology requires too many links on one node.\r\n    Currently you can have no more than four links per node unless\r\n    you use\r\n    <a href=/doc/docwrapper.php3?docname=linkdelays.html#EMULINKS>\r\n    multiplexed links</a>.\r\n    </ul>\r\n    <p>\r\n    If the setup log shows <code>assign</code> failing repeatedly and\r\n    eventually giving up, \r\n    <a href=\"kb-show.php3?xref_tag=problem-reporting\">contact us</a>.\r\n    <p>\r\n    The next potential failure point is the setup of the physical\r\n    nodes.  If you are explicitly setting the OS image to use with\r\n    <code>tb-set-node-os</code>, then make sure you have specified\r\n    a valid image (e.g., did you spell the OS identifier correctly?)\r\n    Again, the log output should include an error if the OSID was\r\n    invalid.\r\n    <p>\r\n    Click <a href=\"https://www.emulab.net/showosid_list.php3\">List ImageIDs and\r\n    OSIDs</a> in the Emulab web interface \"Interaction\" pane to see the\r\n    current list of Emulab-supplied OSs.\r\n    <p>\r\n    If the OSID is correct, but the log contains messages of the form:\r\n    <pre>\r\n    *** Giving up on pcXXX - it\'s been NN minute(s).\r\n    *** WARNING: pcXXX may be down.\r\n    This has been reported to testbed-ops.\r\n    </pre>\r\n    then a node failed to reach the point where it would report a successful\r\n    setup to Emulab.\r\n    <p>\r\n    Near the end of the experiment setup, Emulab\'s event system can fail to\r\n    startup with a message like this:\r\n    <pre>\r\n      Starting the event system.\r\n      *** ~/.ssh/identity is not a passphrase-less key\r\n          You will need to regenerate the key manually\r\n      *** /usr/testbed/devel/stack/sbin/eventsys.proxy:\r\n          Failed to start event system for foo/bar\r\n    </pre>\r\n    Or, like this:\r\n    <pre>\r\n      Starting the event system.\r\n      Permission denied, please try again.\r\n      Permission denied, please try again.\r\n      Permission denied.\r\n      *** /usr/testbed/devel/stack/sbin/eventsys.proxy:\r\n          Failed to start event system for foo/bar </pre>\r\n    This failure occurs because you have manually changed your default SSH\r\n    identity (~/.ssh/identity) or edited your authorized_keys file in your\r\n    Emulab home directory without going through the \"Edit SSH Keys\" web form on\r\n    your user page.  The easiest way to fix this is to make sure the passphrase\r\n    is empty using ssh-keygen(1) on the user\'s machine:\r\n    <pre>\r\n      users$ ssh-keygen -p -P \"<old-passphrase>\" -N \"\" -f ~/.ssh/identity\r\n    </pre>\r\n    Then, make sure the corresponding public key in your Emulab home directory\r\n    (\"~/.ssh/identity.pub\") is listed in the \"Edit SSH Keys\" form.\r\n    <p>\r\n    Such failures can be caused by many things.  Sometimes\r\n    a transient load on an Emulab server can push a node over its\r\n    timeout, though this is happening less and less as we\r\n    improve our infrastructure.  Most often, these failures are caused\r\n    by the use of custom images which either do not boot or do not\r\n    self-configure properly.  These are harder to dianose because you\r\n    often need access to the console logs to see what happened,\r\n    and these logs aren\'t available after an experiment fails.\r\n    However, it is possible to interactively monitor\r\n    the console while the experiment is setting up since console access\r\n    is granted early in setup process.  You can either use the\r\n    <code>console</code> command on users, use the\r\n    <a href=\"#UTT-TUNNEL\">tiptunnel</a> client application,\r\n    or just run \"tail -f\" on the <code>/var/log/tiplogs/pcXXX.run</code>\r\n    file.\r\n    </p>\r\n','troubleshooting',1,'2005-08-16 13:46:10','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (15,'stoller','2005-08-16 13:47:30','Getting Started','Where do I get more help?','    <p>\r\n    If you cannot find an answer to your question in the\r\n    <a href=\"doc.php3\">Emulab Documentation</a>, then you can\r\n    send us an <a href=\"emailus.php3\">email message</a>. We will try\r\n    to answer your question as quickly as we can.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (16,'stoller','2005-08-16 13:48:22','Using the Testbed','Is there a tutorial?','    <p>\r\n    Yes, we have an extensive <a href=\"tutorial/tutorial.php3\">tutorial</a>\r\n    on using the Testbed.\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (17,'stoller','2005-08-16 13:49:09','Using the Testbed','Do you have a GUI to help me create experiments?','    <p>\r\n    Yes, we provide a GUI that gives you an easy to use drawing\r\n    palette on which you can place nodes, lans, and links. Testbed\r\n    specific attributes such as operating system, hardware type, and\r\n    link/lan characteristics, may be attached to each object. With a\r\n    single click, you can instantiate your new topology on the Testbed\r\n    as an experiment in one of your projects. Alternatively, you can\r\n    save the auto-generated NS file on your machine, edit as required,\r\n    and then submit it later when creating an experiment.\r\n    </p>\r\n    \r\n    <p>\r\n    To access the GUI, please log in and go to the Begin Experiment page.\r\n    <em>Note: you need a Java compliant browser.</em>\r\n    </p>\r\n','netbuild',1,'2005-08-17 13:57:50','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (18,'stoller','2005-08-16 13:49:48','Using the Testbed','Are there any constraints on my topology?','   <p>\r\n    Yes, but only those imposed by the physical hardware that is\r\n    currently available in our testbed. The constraints that people\r\n    most commonly run into are the maximum speed of our links\r\n    (100Mbps) and the maximum number of network interface cards (NICs)\r\n    in our machines. You can\'t get any links faster than 100Mbps,\r\n    since we don\'t yet have gigabit links for experimenters to\r\n    use. Our nodes each have 4 experimental network interfaces, so\r\n    each node can be a member of up to 4 links or LANs. A good\r\n    strategy for making your topology fit within those limits is to\r\n    replace multiple links to a node with a LAN or with a router\r\n    node. \r\n    </p>\r\n    <p>\r\n    Another approach is to use\r\n    <a href=doc/docwrapper.php3?docname=linkdelays.html#EMULINKS>\r\n    <em>emulated</em> network links.</a> Emulated links are multiplexed\r\n    over the actual physical links, up to the physical bandwidth that\r\n    the physical link can support. In other words, five 20Mb links can\r\n    be multiplexed over a 100Mb physical link. More information on\r\n    emulated links can be found <a\r\n    href=doc/docwrapper.php3?docname=linkdelays.html>here.</a> Ask\r\n    Testbed Operations if you need further assistance.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (19,'stoller','2005-08-16 13:50:22','Using the Testbed','How many nodes can I ask for?','    <p>\r\n    You can ask for as many nodes as are currently available! You can\r\n    click on the \"Node Reservation Status\" link at your left to see\r\n    how many nodes are currently free. If you ask for more than are\r\n    currently available, your experiment will be rejected (you\r\n    will receive email notification shortly after you submit your NS\r\n    file to the web interface).\r\n    </p>\r\n\r\n    <p>\r\n    <em>We urge all new Emulab users to begin with a small 3-4 node\r\n    experiment so that you will become familiar with NS syntax and the\r\n    practical aspects of Emulab operation.</em>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (20,'stoller','2005-08-16 13:52:08','Using the Testbed','How long can I keep using my nodes?','    <p>\r\n    You can keep them as long as you need them, subject to our <a\r\n    href=\"docwrapper.php3?docname=swapping.html\">Node Usage\r\n    Policies</a>.  In general, you should do your work, and then\r\n    terminate your experiment as soon as you\'re done with it. If\r\n    you\'re not done with it, but are through for a while, you should\r\n    probably \"swap out\" your experiment (See the question <a\r\n    href=\"kb-show.php3?xref_tag=swapping\">What is Swapping</a> in this FAQ). It is\r\n    especially important to swap out your experiment if you\'re through\r\n    with it for the weekend. Emulab usually gets heavy use on the\r\n    weekends by users who need to make very large experiments, so it\r\n    is important to leave as many nodes available as possible.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (21,'stoller','2005-08-16 13:53:39','Using the Testbed','I only need a couple of nodes but none are free, should I just keep trying?','    <p>\r\n    It is better for you and us if you don\'t just keep hitting the\r\n    submit button every few minutes.  It wastes your time and floods\r\n    us with email (we get every failure message you do!)\r\n    Instead, you can now use the\r\n    <a href=\"tutorial/tutorial.php3#BatchMode\">Batch System</a>\r\n    to queue an interactive job.  By submitting your experiment as\r\n    a batch job, but without any\r\n    <a href=\"tutorial/tutorial.php3#Startupcmd\"><tt>tb-set-node-startcmd</tt></a>\r\n    directives in your NS file, the job will be queued until nodes are\r\n    available.  For most experiments, this means just using your regular\r\n    NS file, and checking the Batch Mode Experiment box when you create\r\n    the experiment.\r\n    </p><p>\r\n    When your queued job is swapped in, you will be sent email to\r\n    inform you, and you can start working!\r\n    <b>Please note</b> that the\r\n    experiment will be idle when it is swapped in, and will be\r\n    <a href=\"swapping.html#idleswap\">idle swapped</a> if you do not\r\n    get things running on the nodes in a short period of time.  If your\r\n    experiment does get swapped out before you can get to it, you can\r\n    always visit the experiment\'s information page and try again by\r\n    using the Queue Batch Experiment menu item.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (22,'stoller','2005-08-16 13:54:19','Using the Testbed','What if I need more nodes than are free?','    <p>\r\n    For example, say you need 50 nodes but there are only 40 free. In\r\n    general, getting this many nodes is going to require intervention\r\n    from Testbed Operations, if only so we can ask other experimenters\r\n    to free up nodes, if possible. Please send us email if you are not\r\n    able to able to get the number of nodes you need for your experiment.\r\n    </p>\r\n\r\n    <p>\r\n    Another alternative is to use the\r\n    <a href=\"tutorial/tutorial.php3#BatchMode\">Batch System.</a> \r\n    If your experiment is amenable to being batched (does not require\r\n    human intervention to start and stop), then you can submit a batch\r\n    request, which will be serviced when enough nodes become\r\n    available.  Typically, you would start out with a few nodes,\r\n    getting used to the batch system and creating whatever scripts are\r\n    needed to make the experiment batchable. Then scale up to larger\r\n    numbers of nodes. Thats the easiest way of getting a lot of nodes!\r\n    </p>    \r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (23,'stoller','2005-08-16 13:56:33','Using the Testbed','Do I get root access on my nodes?','    <p>\r\n    Yes. Project leaders get root access to all of the nodes in all of\r\n    the experiments that are running in their project. Project members\r\n    get root if their project leader grants them root access, when the\r\n    leader approves the group <a href=\"kb-show.php3?xref_tag=start-project\">membership request</a>.\r\n    Root privileges are granted via the <code>sudo</code> command. The\r\n    <a href=\"tutorial/tutorial.php3#RootAccess\">tutorial</a> describes\r\n    this in more detail.\r\n    </p>\r\n','root-access',1,'2005-08-16 14:45:45','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (24,'stoller','2005-08-16 13:58:57','Using the Testbed','Do my nodes have consoles I can look at?','    <p>\r\n    Yes. Each of the PCs has its own serial console line with which you can\r\n    interact, either directly from your desktop \r\n    (see <a href=\"kb-show.php3?xref_tag=tiptunnel\">tiptunnel</a> entry),\r\n    or by hopping through the \"users\" machine,\r\n    using our <tt>console</tt> program located in \'/usr/testbed/bin\'.\r\n    To connect over serial line to\r\n    \"pc1\" in your experiment, ssh into <b>users.emulab.net</b>, and\r\n    then type <tt>console pc1</tt> at the Unix prompt. You may then\r\n    interact with the serial console (hit \"enter\" to elicit output from\r\n    the target machine).\r\n    </p>\r\n    <p>\r\n    To exit the console program, type <tt>Ctrl-]</tt>; its just a\r\n    telnet session. \r\n    </p>\r\n    <p>\r\n    In any case, all console output from each node is saved\r\n    so that you may look at it it later. For each node,\r\n    the console log is stored as <tt>/var/log/tiplogs/pcXXX.run</tt>.\r\n    This <em>run</em> file is created when nodes are first allocated\r\n    to an experiment, and the Unix permissions of the run files permit\r\n    only members of the project to view them. When the nodes are\r\n    deallocated, the run files are cleared, so if you want to save\r\n    them, you must do so before terminating the experiment. \r\n    </p>\r\n    <p>\r\n    In addition, you can view the console logs from the web interface,\r\n    on the Show Experiment page. Of course, you may not interact with\r\n    the console, but you can at least view the current log.\r\n    </p>\r\n    ','node-consoles',1,'2005-11-01 11:05:31','stack',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (25,'stoller','2005-08-16 14:00:05','Using the Testbed','How do I connect directly to node consoles, without going through <b>users</b>?','    <p>\r\n    Clicking \"Connect to Serial Line\"\r\n    in the Node Options page will send your browser a \"text/x-testbed-acl\"\r\n    \".tbacl\" file. \r\n    In windows, if you have installed <code>tiptunnel</code>, available\r\n    below, you can save this file in a folder and double-click it\r\n    to launch a tunneled connection to your node.\r\n    In FreeBSD or Linux, you can save the file and pass it as an argument\r\n    to <code>tiptunnel</code>, or associate it with\r\n    <code>tiptunnel</code> in your web browser.\r\n    Upon connection you typically first have to hit \"enter\" to\r\n    elicit output from the target machine.\r\n\r\n<!--\r\n    If you have downloaded <code>tiptunnel</code> and set it as the \r\n    handler for that MIME type, <code>tiptunnel</code> will launch a new \r\n    telnet running in a new xterm (this may take a few seconds.) \r\n    That telnet will be connected to a local port, \r\n    which is tunneled through SSL to your node\'s console. \r\n    Closing the xterm, exiting telnet, or killing <code>tiptunnel</code>\r\n    itself will end the connection. -->\r\n    \r\n    </p>\r\n    <ul>\r\n    <li>\r\n    You can download the <code>tiptunnel</code>\r\n    <a href=\"downloads/tiptunnel-win32.exe\">installer for Windows here</a>.\r\n    </li>\r\n    <li>\r\n    You can download the <code>tiptunnel</code> statically-linked x86\r\n    <a href=\"downloads/tiptunnel-freebsd.tar.gz\">binary for FreeBSD here</a>.\r\n    </li>\r\n    <li>\r\n    You can download the <code>tiptunnel</code> statically-linked x86\r\n    binary for Linux in two versions:\r\n    <a href=\"downloads/tiptunnel-fc4.tar.gz\">Fedora Core 4</a> or\r\n    <a href=\"downloads/tiptunnel-rhl90.tar.gz\">Redhat Linux 9.0</a>.\r\n    </li>\r\n    <li>\r\n    A source distribution will be available soon.\r\n    </li>\r\n    </ul>\r\n\r\n    <font size=\'+1\'><b>Instructions for Windows:</b></font>\r\n    <ul>\r\n      <li>Run the installer executable, and successfully complete the installation.</li>\r\n      <li>In the Web Interface Node view, \r\n          click on the \"Connect to serial line\" link.</li>\r\n      <li><b>Save</b> the resulting .tbacl file in an appropriate place.\r\n          (for instance a folder off the desktop.)</li>\r\n      <li>For the lifetime of your experiment, you can simply double-click\r\n          these .tbacl files to connect.</li>\r\n    </ul> \r\n\r\n    <font size=\'+1\'><b>Instructions for Linux/FreeBSD:</b></font>\r\n    <ul>\r\n    <li>Use <code>gunzip</code>, \r\n    then <code>tar xvf</code> on the downloaded file.</li>\r\n    <li>Move the resulting <code>tiptunnel</code> binary into \r\n    a directory of your choice (<code>/usr/local/bin</code>, \r\n    or <code>~/bin</code> are two good places.)</li>\r\n    <li>Set up your browser to handle MIME type \"text/x-testbed-acl\"\r\n    as outlined below.</li>\r\n    <li>In the Web Interface Node view, \r\n        click on the \"Connect to serial line\" link.</li>\r\n    <li>If your browser is properly configured to use <code>tiptunnel</code>,\r\n        a new xterm window with a telnet session open to your node\r\n        should emerge.</li>\r\n    <li>(Alternately, you can tell your browser to save \"text/x-testbed-acl\"\r\n        files in a directory and you can run them with \r\n	<code>tiptunnel</code> directly;\r\n        this may be more convenient than using the \r\n	web interface every time you wish\r\n        to connect to a node in your experiment.\r\n        Note that these files are valid for the \r\n	lifetime of your experiment.)</li>\r\n    </ul>\r\n\r\n    <font size=\'+1\'><b>Linux/FreeBSD and Netscape 4.7:</b></font>\r\n    <ul>\r\n    <li>Choose <code>preferences</code> from the <code>edit</code> menu.</li>\r\n    <li>Select <code>Navigator</code>, then <code>Applications</code> under\r\n        it.</li>\r\n    <li>Click the <code>New...</code> button.</li>\r\n    <li>In the <code>MIMEType</code> box, type <code>text/x-testbed-acl</code>\r\n    </li>\r\n    <li>In the <code>Suffixes</code> box, type <code>tbacl</code></li>\r\n    <li>Choose <code>Application</code> in the <code>Handled by</code>\r\n        box</li>\r\n    <li>Next to <code>Application</code>, either type the path to the\r\n        <code>tiptunnel</code> binary, or use <code>Choose...</code> to find\r\n        it.</li>\r\n    <li>Now, <b>be sure to</b> put a space, then <code>%s</code> after the\r\n        path to the application in the box. This tells netscape to actually\r\n        pass the aclfile into tiptunnel (Mozilla does not require this;\r\n        see below.)</li>\r\n    <li>Click <code>OK</code>, then <code>OK</code> again.</li>\r\n    <li>Clicking a \"connect to serial line\" link should now\r\n        bring up a connection in an xterm window.</li>\r\n    </ul> \r\n\r\n    <font size=\'+1\'><b>Linux/FreeBSD and Mozilla:</b></font>\r\n    <ul>\r\n    <li>Choose <code>preferences</code> from the <code>edit</code> menu.</li>\r\n    <li>Select <code>Navigator</code>, then <code>Helper Applications</code> \r\n        under it.</li>\r\n    <li>Click the <code>New Type...</code> button.</li>\r\n    <li>In the <code>MIMEType</code> box, \r\n    type <code>text/x-testbed-acl</code></li>\r\n    <li>In the <code>File extension</code> box, type <code>tbacl</code></li>\r\n    <li>For <code>Application to use</code>, either type the path to the\r\n        <code>tiptunnel</code> binary, or use <code>Choose...</code> to find\r\n	it.</li>\r\n    <li>In Mozilla do <b>not</b> add a <code>%s</code>.</li>\r\n    <li>Click <code>OK</code>, then <code>OK</code> again.</li>\r\n    <li>Clicking a \"connect to serial line\" link should now\r\n        bring up a connection in an xterm window.</li>\r\n    </ul> \r\n    </p>\r\n\r\n','tiptunnel',1,'2005-10-31 15:10:37','stack',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (26,'stoller','2005-08-16 14:01:24','Using the Testbed','Can I reboot (power cycle) my nodes?','    <p>\r\n    Yes. Each of the PCs is independently power controlled. If your\r\n    node hangs, or is otherwise unresponsive, you can use the\r\n    <tt>node_reboot</tt> command, as discussed in the\r\n    <a href=\"tutorial/tutorial.php3#Wedged\">Emulab Tutorial.</a>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (27,'stoller','2005-08-16 14:01:43','Using the Testbed','I\'ve clobbered my disk! Now what?','    <p>\r\n    If you manage to corrupt a disk (or slice), no worries. You can easily\r\n    repair the damage yourself by reloading a fresh copy of the default\r\n    disk image. You will of course lose anything you have stored on that\r\n    disk; it is a good idea to store only data that can be easily recreated, \r\n    or else store it in your project directory in <tt>/proj</tt>. Disk\r\n    reloading is covered in more detail in the\r\n    <a href=\"tutorial/tutorial.php3#Scrogged\">Emulab Tutorial</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (28,'stoller','2005-08-16 14:02:23','Using the Testbed','Where do I store files needed by my experiment?','    <p>\r\n    Each project has its own directory, rooted at <tt>/proj</tt>,\r\n    which is available via NFS to all of the nodes in experiments\r\n    running in that project. For example, when the \"RON\" project was\r\n    created, a directory called <tt>/proj/RON</tt> was also created. This\r\n    directory is owned by the project creator, and is in the unix\r\n    group \"RON.\" Its permission (mode) is 770; read/write/execute\r\n    permitted by the project creator and by all of the members of the\r\n    project RON, but protected against all access by people outside\r\n    the RON project.\r\n    </p>\r\n    <p>\r\n    Sub-groups within a project likewise have a directory in the\r\n    <tt>/groups</tt> tree. A group named \"group1\" in the RON project\r\n    would thus have a group directory in <tt>/groups/RON/group1</tt>.\r\n    </p>\r\n    <p>\r\n    Project members are encouraged to store any files needed by their\r\n    experiments in the corresponding /proj or /groups directory.\r\n  ','file-storage',1,'2005-08-17 13:18:37','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (29,'stoller','2005-08-16 14:03:01','Using the Testbed','Are my files on <b>users</b> backed up (filesaved)?','    <p>\r\n    Yes. All of the files in your home directory on /users, all of\r\n    the files in your project directory in /proj, and all of the files\r\n    in your groups directory in /groups are filesaved. While\r\n    we can restore lost files in an emergency, we encourage you to\r\n    back up critical data on your own to avoid (possibly long) delays\r\n    in conducting your experiments.\r\n    </p>\r\n ',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (30,'stoller','2005-08-16 14:03:54','Using the Testbed','Are the nodes in my experiment backed up (filesaved)?','    <p>\r\n    No! The nodes in your experiment are not filesaved. Any changes\r\n    you make to the local filesystems will be lost if the event of a\r\n    disk failure. We plan to provide a mechanism for experimenters to\r\n    create snapshots of their node state, but that is not done yet. In\r\n    the meantime, any files that must not be lost should be stored in\r\n    the project directory (/proj/<project_name>), which is available\r\n    via NFS to all of the nodes in your experiment. You may also store\r\n    files in your home directory (/users/<login>), also available via\r\n    NFS to all of your nodes, but that is not the preferred location\r\n    since quotas on /users are relatively small.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (31,'stoller','2005-08-16 14:05:41','Using the Testbed','What is Swapping?','    <p>\r\n    Swapping is when you (or we, or the Emulab system) temporarily swaps\r\n    out your experiment,\r\n    releasing all of the nodes in the experiment. Your experiment is\r\n    still resident in the Emulab database, and you can see its status\r\n    in the web interface, but no nodes are allocated. Once an\r\n    experiment is swapped out, you can swap it back in via the web\r\n    interface by going to the Experiment Information page for your\r\n    experiment, and clicking on the swapin option. \r\n    You can also <a href=\"kb-show.php3?xref_tag=swapmod\">modify it</a>.\r\n    </p>\r\n\r\n    <p>\r\n    The <tt>idle-swap</tt> checkbox in the Begin Experiment web page\r\n    is used to determine what experiments can be <em>automatically</em>\r\n    swapped by the testbed scheduling system. Note that all experiments are\r\n    capable of being swapped; even if you do not check the idle-swap box,\r\n    you are free to swap your own experiments as you like. The only\r\n    difference is that the testbed scheduling system will not consider your\r\n    experiment when looking for experiments to swap out. You will sometimes\r\n    notice that the Experiment Information page does not contain the swap\r\n    link. That is because experiments cannot be swapped when they are in\r\n    transition. For example, when the experiment is being swapped in (say,\r\n    after first being created) the link will disappear until the experiment\r\n    is fully swapped in, and it is capable of being swapped out. You will\r\n    need to occasionally reload the page so that the updated state is\r\n    recognized and the swap link appears. \r\n    </p>\r\n    \r\n    <p>\r\n    Be aware that we do not currently save any files that you may have\r\n    placed on your nodes. When your experiment is swapped back in, you\r\n    will likely get different nodes, with fresh copies of the disk\r\n    images. For that reason, you should not swap your experiment out\r\n    unless you make arrangements to save and restore any state you need.\r\n    </p>\r\n\r\n    <p>\r\n    <em>Please be sure to read our \r\n    <a href=\"docwrapper.php3?docname=swapping.html\"> Node Usage Policies</a></em>,\r\n    which contain detailed information on swapping.\r\n    </p>\r\n\r\n','swapping',1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (32,'stoller','2005-08-16 14:08:52','Using the Testbed','How can I get switch statistics (such as packet counts) for my experiment?','    <p>\r\n    We have a command called <code>portstats</code> that allows you access\r\n    to some of the port counters on our switches. To use it, you\'ll need\r\n    to ssh to <b>users.emulab.net</b>. \'<code>portstats &lt;proj&gt; \r\n    &lt;exp&gt;</code>\' will get you stats for all experimental interfaces in\r\n    your experiment. Run \'<code>portstats -h</code>\' to get a list of other\r\n    options, such as different sets of stats.\r\n    </p>\r\n\r\n    <p>\r\n    Note that the numbers returned by <code>portstats</code> do not get\r\n    reset between experiments.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (33,'stoller','2005-08-16 14:10:07','Using the Testbed','What names should I use to refer to the nodes in my experiment?','    <p>We set up names for your nodes in DNS, for use from outside,\r\n    and <code>/etc/hosts</code> files for use on the nodes in the experiment.\r\n    Since our nodes have multiple interfaces (the control network, and,\r\n    depending on the experiment, possibly several experimental interfaces,)\r\n    determining which name refers to which interface can be somewhat\r\n    confusing. The rules below should help you figure this out.\r\n    </p>\r\n\r\n    <ul>\r\n	<li><b>From the outside world</b> - \r\n	We set up names in the form\r\n	<code><i>node</i>.<i>expt</i>.<i>proj</i>.emulab.net</code> in DNS,\r\n	so that they visible anywhere on the Internet. This name always refers\r\n	to the node\'s control network interface, which is the only one\r\n	reachable from the outside world.\r\n	</li>\r\n\r\n	<li><b>On the nodes themselves</b> -\r\n	There are three basic ways to refer to the interfaces of a node. The\r\n	first is stored in DNS, and the second two are stored on the node in\r\n	the <code>/etc/hosts</code> file.\r\n	<ol>\r\n	    <li><i>Fully-qualified hostnames</i> - These names the same ones\r\n	    visible from the outside world, and referred to by attaching the\r\n	    full domain name: ie.\r\n	    <code><i>node</i>.<i>expt</i>.<i>proj</i>.emulab.net</code>. (note\r\n	    that, since we put <code>.emulab.net</code> in nodes\' domain\r\n	    search paths, you can use\r\n	    <code><i>node</i>.<i>expt</i>.<i>proj</i></code> as a shorthand.)\r\n	    This name always refers to the control network\r\n	    </li>\r\n\r\n	    <li><i><code>node-link</code> form</i> - You can refer to an\r\n	    individual experimental interface by suffixing it with the name of\r\n	    the link or LAN (as defined in your NS file) that it is a member\r\n	    of. For example, <code>nodeA-link0</code> or\r\n	    <code>server-serverLAN</code>. This is the preferred way to refer\r\n	    to experimental interfaces, since it uniquely and unambiguously\r\n	    identifies an interface.\r\n	    </li>\r\n\r\n	    <li><i>Short form</i> - If a node is directly connected to the\r\n	    node you\'re on, you can refer to that node simply with its name\r\n	    (eg. <code>nodeA</code>.) Note that this differs from the fully-\r\n	    qualified name in that no domain is given. We also create short\r\n	    names for nodes you are not directly connected to.\r\n	    However, if two nodes are\r\n	    connected with more than one interface, or there is more than\r\n	    one route between them, there is no guarantee that the short name\r\n	    has been associated with the one is on the \'best\' (ie. shortest or\r\n	    highest bandwidth) path - so, if there is ambiguity, we strongly\r\n	    suggest that you use the <code><i>node-link</i></code> form.\r\n	    </li>\r\n	</li>\r\n    </ul>\r\n','node-naming',1,'2005-08-16 14:10:22','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (34,'stoller','2005-08-16 14:11:29','Using the Testbed','Can I modify my experiment after creating it?','    <p>Yes. On the experiment view page, choose \"Modify this Experiment\".\r\n       This will allow you to modify an experiment, either swapped-out or in,\r\n       by editing its NS file.</p>\r\n    <p>If the experiment is swapped-out, \r\n       Experiment Modify will simply replace its topology with the\r\n       newly specified one;\r\n       this new topology will be mapped when the experiment is swapped in.</p>\r\n    <p>If the experiment is already swapped-in, Modify will change the topology\r\n       and map in the portions which have been changed. This allows dynamic\r\n       addition, subtraction, and replacement of an experiment\'s nodes and links.\r\n       However, when modifying swapped-in experiments, there are a couple\r\n       things to keep in mind:\r\n       <ul>\r\n         <li>Any node with the same name in the old and new topology will remain\r\n	 on the same physical machine, unaffected-- its disk will not be reloaded.\r\n	 If you want to, for example, change the hardware on a machine, you will\r\n	 have to call the machine something different in the new topology.\r\n	 </li>\r\n	 <br>\r\n	 <li>\r\n	 It is highly recommended that you leave the\r\n	 \"Reboot nodes in experiment\" box checked in the Experiment Modify form.\r\n	 This is especially important if changing your experiment topology \r\n         (adding or removing nodes, links, and LANs).\r\n	 If adding/removing a delay to/from an existing link, or replacing \r\n	 a lost node <i>without modifying the experiment topology</i>,\r\n	 this won\'t be necessary.\r\n	 </li>\r\n	 <li>\r\n	 The event system is not automatically restarted for your\r\n	 experiment, so you will not be able to modify the traffic\r\n	 shaping for new links. In addition, if you add program\r\n	 agents or traffic generators, these will not activate unless\r\n	 you restart the event system by hand. Unfortunately, all\r\n	 events will be replayed, so be careful: On\r\n	 <tt>users.emulab.net</tt>, you may do the following:\r\n	     <blockquote>\r\n	     	<code>\r\n	        eventsys_control [-f] replay proj expt\r\n		</code>\r\n	     </blockquote>\r\n	 </li>\r\n       </ul>\r\n    </p>\r\n\r\n','swapmod',1,'2005-08-16 14:11:49','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (35,'stoller','2005-08-16 14:12:55','Using the Testbed','Are there Linux and/or FreeBSD sources and packages available locally?','    <p>\r\n    Yes.  We provide sources and packages for a few versions of\r\n    FreeBSD and RedHat / Fedora Core Linux.  The place to look for available\r\n    software is under <b>/share</b> on either <b>users.emulab.net</b>\r\n    or your experimental nodes.  This path is readonly (and NFS\r\n    mounted on the nodes), so you\'ll need to make a copy of the\r\n    contents found there if you need to do more than reference them\r\n    for information or installation.\r\n    </p>\r\n\r\n    <ul>\r\n        <li><b>FreeBSD Paths:</b>\r\n        The FreeBSD kernel, and userland sources are available under\r\n        <b>/share/freebsd</b>.  Look there to see if the version you are\r\n        seeking is available.  You can also find Emulab additions and\r\n        modifications to FreeBSD here.  Emulab kernel configurations are\r\n        called TESTBED and located in <b>sys/i386/conf</b> relative to the\r\n        FreeBSD source trees.  The README file in this directory has more\r\n        information on the contents.\r\n        </li>\r\n\r\n        <br>\r\n        <li><b>Linux Paths:</b>\r\n        Linux kernel sources and RPMs for various versions of Redhat can\r\n        be found under <b>/share/redhat</b>.  Fedora core versions are\r\n        likewise located under <b>/share/fedora</b>. Look in these locations\r\n        to see if the\r\n        version you are seeking is available.  You can also find Emulab\r\n        additions and modifications to Linux here.  Emulab kernel\r\n        configurations are called <b>config-emulab</b> and exist in the\r\n        root of the kernel source trees.  There is a README file in each\r\n        of these directories that describes their contents in more\r\n        detail.\r\n        </li>\r\n        \r\n        <br>\r\n        <li><b>Other Software:</b>\r\n        We provide a few other generally useful software packages and\r\n        sources under <b>/share</b> as well.  Have a look around.\r\n        </li>\r\n\r\n        <br>\r\n        <li><b>Something Missing?</b> \r\n        If you think something should be added to <b>/share</b>, feel\r\n        free to send your suggestion(s) to us via \r\n        <a href=\"emailus.php3\">email</a>.  Note that we may retire some\r\n        offerings if we determine them to be of little value.\r\n        </li>\r\n    </ul>\r\n',NULL,1,'2006-01-26 23:21:59','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (36,'stoller','2005-08-16 14:14:52','Hardware Setup','What kind of computers are used for my nodes?','    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (37,'stoller','2005-08-16 14:15:21','Hardware Setup','How many nodes are there?','    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (38,'stoller','2005-08-16 14:15:53','Hardware Setup','How many ethernet cards are on each node?   ','    <p>\r\n    Please see the <a href=\"docwrapper.php3?docname=hardware.html\">\r\n    Hardware Overview</a> page for a description and count of the\r\n    computers that comprise the Testbed.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (39,'stoller','2005-08-16 14:16:54','Hardware Setup','How do I ask for specific hardware?','    If you would like to ask for a specific type of hardware, such as a\r\n    <code>pc850</code>, see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#HARD\">\r\n    <code>tb-set-hardware</code></a>\r\n    command in our <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">NS\r\n    extensions document</a>. You can also define classes of nodes which should\r\n    be given the same hardware using\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#VTYPE\">virtual\r\n    type commands</a>.\r\n    </p>\r\n','tb-set-hardware',1,'2005-11-08 07:44:27','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (40,'stoller','2005-08-16 14:17:25','Hardware Setup','How many nodes are currently available (free)?','    <p>\r\n    If you click on the \"Node Reservation Status\" link in the menu to\r\n    your left, you will see a summary of the number of nodes (by type)\r\n    that are currently available, followed by a listing of the\r\n    reservation status of each individual node.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (41,'stoller','2005-08-16 14:17:54','Hardware Setup','Can I do traffic shaping on my links?','    <p>\r\n    Yes! You can specify the delay, bandwidth, and packet loss rate\r\n    between any two nodes in your topology. Bandwidth and delay are\r\n    specified in the NS <tt>duplex-link</tt> statement, while packet\r\n    loss rate is specified with the Emulab <tt>tb-set-link-loss</tt>\r\n    extension to NS. You may also specify delay, bandwidth, and packet\r\n    loss rate between nodes in a regular LAN.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>\r\n\r\n',NULL,1,'2005-08-16 14:18:14','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (42,'stoller','2005-08-16 14:19:01','Hardware Setup','Can I modify the traffic shaping parameters on my links?','    <p>\r\n    Yes! If your NS file specified traffic shaping on a link, then you\r\n    can subsequently modify those parameters after the experiment has\r\n    been swapped in. Note that you cannot <em>convert</em> a non shaped\r\n    link into a shaped link; you can only modify the traffic shaping\r\n    parameters of a link that is already being shaped.  To modify the\r\n    parameters, go to the Experiment Information page of your\r\n    experiment, and click on the \"Modify Traffic Shaping\" menu\r\n    option. Follow the instructions at the top of the page.\r\n    </p>\r\n    <p>\r\n    An alternative method is to log into <b>users.emulab.net</b> and use the\r\n    <tt>delay_config</tt> program. This program requires that you know\r\n    the symbolic names of the individual links. This information is\r\n    available via the web interface on the Experiment Information\r\n    page. The command line syntax for <tt>delay_config</tt> will be\r\n    displayed when the <tt>-h</tt> option is given.\r\n    </p>\r\n\r\n','modify-traffic-shaping',1,'2006-01-24 11:09:25','stack',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (43,'stoller','2005-08-16 14:20:36','Hardware Setup','Are there other traffic shaping parameters besides latency,bandwidth, and packet loss rate? ','    <p>\r\n    Yes! Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=advanced.html\">\r\n    advanced tutorial</a>. Note though, that these other parameters\r\n    can be specified for duplex links only (not lans), and that they\r\n    are not configurable with <tt>delay_config</tt>, but with a\r\n    different testbed utility call <tt>tevc</tt> (also described in\r\n    the advanced tutorial).\r\n    </p>    \r\n\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (44,'stoller','2005-08-16 14:21:27','Hardware Setup','Do any Emulab nodes have wifi (802.11) interfaces?','    <p>\r\n    Yes!  We currently have several Pentium IV, 3GHz nodes scattered around \r\n    our building with two wifi interfaces each.  There are also a handful of\r\n    older Pentium III, 850MHz systems with wifi interfaces.  Please refer\r\n    to the <a href=\"tutorial/docwrapper.php3?docname=wireless.html\">\r\n    wireless tutorial</a> for more info.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (45,'stoller','2005-08-16 14:21:48','Hardware Setup','What kind of wifi cards are used in Emulab?','    <p>\r\n    We use Netgear WAG311 cards which contain the Atheros 5212\r\n    chipset. The Madwifi driver and its branches provide support in Linux or\r\n    FreeBSD.  The default RHL90-WIRELESS image utilizes the unstripped\r\n    madwifi driver (second link below) by default.\r\n    </p>\r\n    <a href=\"http://netgear.com/products/details/WAG311.php\">\r\n    WAG311 product info</a>\r\n    <br>\r\n    <a href=\"http://madwifi.sourceforge.net\">Madwifi Atheros driver</a>\r\n    <br>\r\n    <a href=\"http://pdos.csail.mit.edu/~jbicket/madwifi.stripped/\">\r\n    Stripped madwifi driver</a> - <i>Primarily for use with\r\n    <a href=\"http://pdos.csail.mit.edu/click/\">click</a></i>\r\n    \r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (46,'stoller','2005-08-16 14:36:58','Software Setup','What OS do the nodes run?','    <p>\r\n    Please see the <a href=\"docwrapper.php3?docname=software.html\">\r\n    Software Overview</a> page for a description of the Operating\r\n    Systems that can be run on each of the Testbed nodes.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (47,'stoller','2005-08-16 14:37:28','Software Setup','How do I select which OS to run on each node?','    <p>\r\n    When a choice of OS is available, you may specify which one you\r\n    prefer for each node in the NS file using the Emulab\r\n    <tt>tb-set-node-os</tt> extension to NS. When your experiment is\r\n    configured, the appropriate disk image will be loaded on your\r\n    nodes, and the selected operating system will boot up on each.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#OS\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3#OsChoices\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>    \r\n    \r\n','tb-set-node-os',1,'2005-08-17 13:29:11','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (48,'stoller','2005-08-16 14:37:58','Software Setup','Is Windows 2000 supported as well as Windows XP?','    <p>\r\n    We have no existing support for Win2k.  Given our experience in bringing\r\n    Windows XP into the Emulab fold, it could easily be an enormous\r\n    undertaking to get Win2k going.  We know that it won\'t even boot on the\r\n    pc850 nodes, due to their lack of VGA graphics console hardware.\r\n    </p>\r\n    <p>\r\n    We suggest switching to Windows XP if at all possible.\r\n    </p>\r\n    <p>\r\n    Please see the <a href=\"doc/docwrapper.php3?docname=windows.html\">\r\n    Windows XP</a> page for more information.\r\n    </p>\r\n    \r\n','SWS-WIN2K',1,'2005-10-04 15:27:18','fish',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (49,'stoller','2005-08-16 14:38:53','Software Setup','Can I load my own software (RPMs/Tarballs) on my nodes?','    <p>\r\n    Yes! If you have an RPM or Tarball (or more than one) that is appropriate for\r\n    loading on the OS you have selected, you can arrange to have them\r\n    loaded automatically when your experiment is configured. The\r\n    Emulab NS extension, <a href=\"tutorial/docwrapper.php3?docname=nscommands.html#tb-set-node-rpms\"><tt>tb-set-node-rpms</tt></a>, is used in the NS\r\n    file to specify a list of RPMS to install.\r\n    The <a\r\n    href=\"tutorial/docwrapper.php3?docname=nscommands.html#tb-set-node-tarfiles\"><tt>tb-set-node-tarfiles</tt></a>\r\n    command is used to specify a list of Tar\r\n    files to install, as well as the directories in which the tars\r\n    should be unpacked. You may specify a\r\n    different list for each node in the experiment. The RPMs/Tarballs\r\n    will be installed when the nodes first boot after the experiment is\r\n    swapped in or if the nodes detect a changed RPM/Tarball during a reboot.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3#RPMS\">Emulab Tutorial</a> for an\r\n    example. \r\n    </p>    \r\n    \r\n','load-software',1,'2006-02-27 13:18:13','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (50,'stoller','2005-08-16 14:40:10','Software Setup','Can I schedule programs to run automatically when a node boots?','    <p>\r\n    Yes! You can arrange to run a single program or script when your\r\n    node boots. The script is run as the UID of the experiment\r\n    creator, and is run after all other node configuration (including\r\n    RPM installation) has completed. The exit status of the script (or\r\n    program) is reported back and is made available for you to view in\r\n    Experiment Information link in the menu at your left. The Emulab\r\n    NS extension <tt>tb-set-node-startcmd</tt> is used in the NS file\r\n    to specify the path of the script (or program) to run. You may\r\n    specify a different program for each node in the experiment.\r\n    </p>\r\n    <p>\r\n    Please see the\r\n    <a href=\"tutorial/docwrapper.php3?docname=nscommands.html\">Extensions</a>\r\n    page for a summary of all Emulab NS extensions, and the\r\n    <a href = \"tutorial/tutorial.php3\">Emulab Tutorial</a> for an\r\n    example.\r\n    </p>    \r\n\r\n','tb-set-node-startcmd',1,'2006-04-10 17:24:19','fish',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (51,'stoller','2005-08-16 14:41:12','Software Setup','How can I turn on routing or set up routes automatically on my nodes?  ','    <p>\r\n    By default, we do not setup any static routes or run any routing daemon\r\n    on nodes in an experiment.  However, we do provide several options for\r\n    experimenters, which are described in the\r\n    <a href=\"tutorial/tutorial.php3#Routing\">\"Setting up IP routing\r\n    between nodes\"</a> section of the\r\n    <a href=\"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n    \r\n','routing',1,'2005-08-16 14:53:25','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (52,'stoller','2005-08-16 14:42:03','Software Setup','How does my software determine when other nodes in my  experiment are ready?','    <p>\r\n    If your application requires synchronization amongst your nodes,\r\n    you may use the Emulab provided synchronization server, which\r\n    provides a very simple form of barrier synchronization. Use of the\r\n    synchronization server is described in more detail in the <a href =\r\n    \"tutorial/tutorial.php3#SyncServer\">Emulab Tutorial</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (53,'stoller','2005-08-16 14:42:30','Software Setup','Can I run my own Operating System?','    <p>\r\n    Yes! You can run your own OS (or a customized version of an Emulab\r\n    supported OS) on any of the PCs. You can also run <a href =\r\n    \"http://www.cs.utah.edu/flux/oskit/\">OSKit</a> kernels on the\r\n    PCs. Each of the PCs is partitioned with two DOS partitions large\r\n    enough to hold the typical OS installation. The 1st and 2nd\r\n    partitions are each 3GB. The 3rd partition is 500MB, and is\r\n    labeled as Linux Swap. The 4th partition is the remainder of the\r\n    disk, and varies in size depending on the pc type. We recommend\r\n    that you use the 1st or 2nd partition; using the 4th partition\r\n    will restrict the number of machines that you can run your OS on\r\n    since it varies in size. Note that you must leave the MBR (Master\r\n    Boot Record) in sector 0 alone, and that your custom partition\r\n    must contain a proper DOS boot record in the first sector.\r\n    </p>\r\n\r\n    <p>\r\n    Please note that while users are free to customize their disks and\r\n    install their own operating systems, Emulab staff will not be able\r\n    to offer more than encouragement and advice! We cannot install the\r\n    OS for you, and we cannot load CDROMS, floppy disks, or tape drives!\r\n    We <em>do</em> provide an easy way for you to boot FreeBSD from a\r\n    memory based filesystem (MFS) so that you can more easily work\r\n    with the disk (in case it is not possible to install your OS on a\r\n    live disk). Beyond that, you are pretty much on your own!\r\n    </p>\r\n\r\n    <p>\r\n    Many users had great success with customizing an Emulab supported\r\n    OS (FreeBSD or Linux), and then creating a disk image that is\r\n    autoloaded when the experiment is swapped in. We strongly\r\n    encourage people to use this approach whenever possible! There is\r\n    more information available in the <a\r\n    href=\"tutorial/tutorial.php3#CustomOS\">Custom OS</a> section of\r\n    the <a href = \"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n\r\n\r\n','customos',1,'2006-05-09 09:09:51','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (54,'stoller','2005-08-16 14:43:45','Software Setup','Can I share a disk image between two projects?','    <p>\r\n    No. At this time you cannot share OS images between projects. We\r\n    are thinking of adding project collaboration support, but that is\r\n    a future project.\r\n    </p>\r\n    <p>\r\n    In the meantime, you will need to create an\r\n    <a href=\"https://www.emulab.net/newimageid_ez.php3\">image\r\n    descriptor</a> in the project that wants to use your image. Fill out\r\n    the form, but leave out the \"Node to Obtain Snapshot from\". Then\r\n    just copy the image over to the default path it picked for you in\r\n    the form. There is more information available in the <a\r\n    href=\"tutorial/tutorial.php3#CustomOS\">Custom OS</a> section of\r\n    the <a href = \"tutorial/tutorial.php3\">Emulab Tutorial.</a>\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (55,'stoller','2005-08-16 14:47:09','Software Setup','What if I need more disk space on my nodes?','    <p>\r\n    Each node has a partition at the end of the disk that you can use if\r\n    you wish. In Linux, the partition is <code>/dev/hda4</code> ; in FreeBSD,\r\n    it\'s </code>/dev/ad0s4</code> . There is no filesystem on this partition,\r\n    so you\'ll need to create it yourself.  Before going any further, there\r\n    is one very important point: <b>anything you put in this disk space will\r\n    be lost when your experiment swaps out!</b>  That is, unless you create\r\n    a <a href=\"tutorial/tutorial.php3#CustomOS\">Custom disk image</a>\r\n    before it gets swapped.\r\n    </p><p>\r\n    You can also use the\r\n    <a href=\"tutorial/docwrapper.php3?docname=loghole.html\">loghole</a>\r\n    utility to retrieve information from your nodes before swap-out.  Use the\r\n    <b><code>loghole sync -r <i>remotedir</i></code></b> option to specify the\r\n    directory you create on the experiment nodes, as described below.\r\n    Loghole uses rsync over ssh to collect files from your experiment nodes,\r\n    so you can run it multiple times as your experiment progresses and it will\r\n    do minimal work to update the results. Running as a post-process or during\r\n    idle times avoids mucking up your experiment timings with NFS overhead,\r\n    if that matters.  It puts results under\r\n    <code>/proj/<b><i>pid</i></b>/exp/<b><i>eid</i></b>/logs</code> in\r\n    per-node subdirectories, and has some support for archiving previous \r\n    states as zip files.\r\n    </p><p>\r\n    Recent versions of our standard FreeBSD and Linux images include a\r\n    script, <code>/usr/testbed/bin/mkextrafs</code> to make the partition\r\n    at the end of the disk available to you.\r\n    Just do the following <a href=\"kb-show.php3?xref_tag=root-access\">\r\n    as root</a>:\r\n    <blockquote>\r\n    <code>/usr/testbed/bin/mkextrafs /mnt</code>\r\n    </blockquote>\r\n    and it will create the filesystem, mount it on <code>/mnt</code>\r\n    and make an entry in <code>/etc/fstab</code> so that the filesystem\r\n    will be mounted on future reboots.\r\n    </p><p>\r\n    If that script does not exist, you can perform the steps by hand.\r\n    For example, in Linux do the following\r\n    <a href=\"kb-show.php3?xref_tag=root-access\">as root</a>:\r\n    <ul>\r\n        <p>\r\n        <li>Set the correct partition type (type 83 - ext2fs):</li>\r\n        <blockquote>\r\n        <code>fdisk /dev/hda</code>\r\n        </blockquote>\r\n        <ul>\r\n            <li>Press \'t\' to change partition sysid.</li>\r\n            <li>Enter \'4\' as the partition to change.</li>\r\n            <li>Enter \'83\' to specify ext2fs.</li>\r\n            <li>Type \'w\' to save and exit.</li>\r\n        </ul>\r\n        </p><p>\r\n        <li>Create the filesystem:</li>\r\n        <blockquote>\r\n	<code>mkfs /dev/hda4</code>\r\n        </blockquote>\r\n        </p><p>\r\n        <li>Mount the filesystem:</li>\r\n        <blockquote>\r\n        <code>mount /dev/hda4 /mnt</code>\r\n        </blockquote>\r\n        </p>\r\n	<p>\r\n	You may want to add the filesystem to <code>/etc/fstab</code>\r\n	so that it will be automatically mounted on future reboots.\r\n	</p>\r\n    </ul>\r\n    In FreeBSD, do the following\r\n    <a href=\"kb-show.php3?xref_tag=root-access\">as root</a>:\r\n    <ul>\r\n        <p>\r\n        <li>First, you need to set the correct partition type:</li>\r\n        <blockquote>\r\n        <code>fdisk -i4 /dev/ad0</code>\r\n        </blockquote>\r\n        <ul>\r\n            <li>Do <em>not</em> change what the BIOS thinks.</li>\r\n            <li>Edit the partition info, setting the sysid to 165; leave other\r\n            metrics alone.</li>\r\n            <li>Do <em>not</em> change the active partition</li>\r\n            <li>Write out the new partition table</li>\r\n        </ul>\r\n        </p>\r\n        <p>\r\n        <li>Next, you have to create a BSD disklabel on the partition:</li>\r\n        <blockquote>\r\n        <code>disklabel -w ad0s4 auto</code>\r\n        </blockquote>\r\n        </p>\r\n        <p>\r\n        <li>Create the filesystem:</li>\r\n        <blockquote>\r\n        <code>newfs /dev/ad0s4c</code>\r\n        </blockquote>\r\n        </p>\r\n        <p>\r\n        <li>Finally, mount it:</li>\r\n        <blockquote>\r\n        <code>mount /dev/ad0s4c /some/where</code>\r\n        </blockquote>\r\n        </p>\r\n	<p>\r\n	You may want to add the filesystem to <code>/etc/fstab</code>\r\n	so that it will be automatically mounted on future reboots.\r\n	</p>\r\n    </ul>\r\n    <p>\r\n    The available space ranges from 6-33GB depending on the disk type.\r\n    </p>\r\n\r\n','local-space',1,'2006-06-06 14:20:52','fish',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (56,'stoller','2005-08-16 14:49:48','Software Setup','Are there testbed-specific daemons that could interfere with my experiment?','    <p>\r\n    Probably not.\r\n    By default, the testbed startup scripts currently start two daemons in \r\n    addition to the OS\'s standard set.  Other daemons may be started depending\r\n    on the network services you ask for in your ns file (see below).\r\n    </p>\r\n\r\n    <p>\r\n    <b>Unconditionally started daemons:</b>\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>healthd</code> - A low overhead hardware health monitor.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p> \r\n    This deamon periodically polls the machine\'s health monitoring\r\n    hardware and sends this information back to our <code>boss</code>\r\n    node for analysis.  The hardware is polled once per second, and a\r\n    status datagram is sent out once every five minutes.\r\n    <code>Healthd</code>\'s overhead is quite low, but it can be safely\r\n    killed and disabled from startup if you\'re worried about possible\r\n    side effects.  It is started by\r\n    <code>/etc/testbed/rc.healthd</code>.\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>slothd</code> - A low overhead usage analysis tool.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p>\r\n    <code>Slothd</code> is important to efficient testbed utilization\r\n    and should run on every node whenever possible.  Its overhead is\r\n    almost negligible (essentially less than running <code>\'ls -l\r\n    /dev\'</code> once every five minutes), and should not interfere with your\r\n    work.  However if your experiment is exceptionally sensitive, then\r\n    you may arrange with us to disable <code>slothd</code>.  Please\r\n    note that we will restart this daemon if it is not running unless\r\n    prior arrangements have been made.\r\n    </p>\r\n\r\n    <p>\r\n    <b>Conditionally started daemons:</b>\r\n    </p>\r\n\r\n    <p>\r\n    <blockquote>\r\n    <li><code>gated</code> - A network routing daemon.</li>\r\n    </blockquote>\r\n    </p>\r\n\r\n    <p>\r\n    If you have requested automatic routing on your nodes with  \r\n    <code>$ns&nbsp;rtproto&nbsp;Session</code> in your NS file, this will\r\n    start <code>gated</code> on all of your nodes.\r\n    </p>\r\n\r\n    <p>\r\n    We have left all daemons started by the operating systems\' default\r\n    configurations (such as <code>cron</code>) enabled, so you should also\r\n    look at them if you are concered about running processes affecting\r\n    your experiment.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (57,'stoller','2005-08-16 14:50:32','Software Setup','Does Emulab support IP Multicast?','    <p>\r\n      In short, yes, the local nodes in Emulab (but not all remote\r\n      Netbed nodes) support IP Multicast on the experimental\r\n      network. In order to use it, you must have a kernel that\r\n      supports it, and if you want multicast routing, you\'ll need to\r\n      enable <code>mrouted</code>. (You can do it manually, or\r\n      automatically via program objects or startup commands, but the\r\n      rtproto commands will not do it.)\r\n    </p>\r\n\r\n    <p>\r\n      When using multicast, there are a few issues you need to be aware\r\n      of. The first is the fact that multicast traffic will often find\r\n      the control network, rather than the experimental network, which\r\n      you don\'t want. See <a href = \"tutorial/tutorial.php3#ControlNet\">this\r\n	  section</a> of the tutorial for information about the control net.\r\n      There are two ways to work around the control net. The first is to\r\n      set a route for all multicast addresses (224.0.0.0/4) to go out the\r\n      experimental interface of your node. The second is to have your program\r\n      use the IP_MULTICAST_IF sockopt to bind to a particular interface.\r\n    </p>\r\n\r\n    <p>\r\n      You should also stay away from multicast addresses that have special\r\n      meanings, such as 224.0.0.1 . You can get a list of these addresses\r\n      from IANA <a href=\"http://www.iana.org/assignments/multicast-addresses\">\r\n	  here</a>.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (58,'stoller','2005-08-16 14:51:11','Security Issues','Is Emulab Firewalled?','    <p>\r\n    Yes. Emulab blocks all of the <i>low numbered</i> ports (ports below 1024),\r\n    with the exception of ports 20 and 21 (FTP), 22 (Secure Shell), and 80\r\n    (HTTP). This is for the protection of experimenters, as well as to ensure\r\n    that an errant application cannot become the source of a Denial of Service\r\n    attack to sites outside of Emulab. If your application requires external\r\n    access to other low numbered ports, please contact us to make special\r\n    arrangements.\r\n    </p>\r\n','SI-FW',1,'2005-10-04 15:38:51','fish',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (59,'stoller','2005-08-16 14:56:40','Troubleshooting','My experiment is set up, but I cannot send packets between some of the nodes. Why?','    <p>\r\n    The most common reason is that your topology\r\n    includes nodes which are not directly connected, and you have\r\n    not setup any routing.  Refer to\r\n    \"<a href=\"kb-show.php3?xref_tag=routing\">How can I turn on routing or set up routes\r\n    automatically in my nodes?</a>\" for details.  If you cannot\r\n    send packets between two machines which are directly connected\r\n    (via a link or a lan), then there are two possibilities:\r\n    either the nodes did not properly negotiate their speed and\r\n    duplex with the Cisco switch, or the physical wire is loose\r\n    or bad.  In these cases, <a href=\"kb-show.php3?xref_tag=problem-reporting\">you should contact us</a>\r\n    for help.\r\n    </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (60,'stoller','2005-08-16 14:59:30','Troubleshooting','I asked for traffic shaping, but everything seems to be going at full LAN speeds','    <p>\r\n    The most likely problem is that it is using the unshaped control\r\n    network for the traffic you\'re looking at. This occurs when it\r\n    tries to contact a node using a \"pcXXX\" address, like pc76 or\r\n    pc76.emulab.net, or when it tries to ping a fully-qualified name,\r\n    like NodeA.myexpt.myproj.emulab.net, which also resolves to a\r\n    control network address. On one of your nodes, take a look at the\r\n    file /etc/hosts. It shows the IP addresses and aliases that refer\r\n    to the different experimental interfaces. These are the names/IPs\r\n    you can use to see the delays.\r\n    </p><p>\r\n    See <a href = \"tutorial/tutorial.php3#ControlNet\">this section</a>\r\n    of the tutorial for more details on the control network.\r\n    For a discussion of the way to \'name\' interfaces on the control\r\n    and experimental networks, see the the \r\n    <a href=\"kb-show.php3?xref_tag=node-naming\">naming section</a> of this     document.\r\n    </p>\r\n\r\n','no-traffic-shaping',1,'2005-08-16 15:00:24','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (61,'stoller','2005-08-16 15:05:12','Troubleshooting','I set a non-zero packet-loss (or delay) but \'ping\' shows no packet-loss (or delay)','   <p>\r\n    You are probably pinging through the control net interface. See this\r\n    <a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\n    Troubleshooting entry</a> and\r\n    the <a href = \"tutorial/tutorial.php3#ControlNet\">control net section</a>\r\n    of the tutorial.\r\n    </p>\r\n ',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (62,'stoller','2005-08-16 15:07:07','Troubleshooting','I set a non-zero packet-loss (or delay) but \'ping\' shows a different packet-loss (or delay)','    <p>\r\n    Short answer: Ping is round trip, PLR and delay are \"one way\".\r\n    </p>\r\n\r\n    <p>\r\n    Long Answer: If you\'re not seeing any traffic shaping at all\r\n    (100Mbps, 0ms, 0plr), see \r\n    <a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">this Troubleshooting entry</a>. If\r\n    you are seeing shaping, but something different than you\r\n    expected, it is probably because link characteristics are one\r\n    way, and you\'re measuring them over the round trip.\r\n    </p>\r\n\r\n    <p>\r\n    For instance, if you asked for a link that was 100Mbps, 30ms,\r\n    with 5% (0.05) packet loss rate (plr), you may expect ping to\r\n    show 30ms ping times and 5% loss rate. But what you should see\r\n    is 60ms latency for the round trip, and a loss rate of\r\n    9.75%. Latencies can be added, therefore 30ms + 30ms gives\r\n    60ms. However, loss rates are probabilities, and must be\r\n    multiplied. The chance of a packet making it across a 5% lossy\r\n    link is 95%, so with a 95% chance of arriving at the\r\n    destination, and a 95% chance of returning if it made it there,\r\n    and the total chance of making a round trip is .95 * .95 = .9025 or\r\n    90.25%, or a round trip loss rate of 9.75% on a 5% lossy link.\r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (63,'stoller','2005-08-16 15:07:56','Troubleshooting','I decreased the bandwidth on a link and now the ping time between the nodes has increased','    <p>\r\n    Short answer: Decreasing the bandwidth of a link means that your\r\n    bytes take longer to get where they are going! \r\n    </p>\r\n\r\n    <p>\r\n    Long Answer: A ping packet is 98 bytes of data; 56 bytes of data\r\n    plus 8 bytes of ICMP header plus 20 bytes of IP header plus 14\r\n    bytes of ethernet header. At 100Mbs those 98 bytes takes .0078ms\r\n    to traverse the wire, which is hardly noticeable! If you have set\r\n    the delay of your link to 10ms, then your ping packets will incur\r\n    10ms+0.0078ms of delay in each direction, for a 20ms roundtrip time.\r\n    </p>\r\n\r\n    <p>\r\n    Say you set the bandwith of your link to 250Kbs. The wire time for\r\n    those same 98 bytes is now 3ms. If your delay is 10ms like above,\r\n    then your ping packets will incur 10ms+3ms of delay in each\r\n    direction, for a 26ms roundtrip time! If you set the bandwith to\r\n    100Kbs, the wire time is now 7.8ms and your ping packets will\r\n    incur 10ms+7.8ms of delay in each direction, for a 35.6ms roundtrip\r\n    time!\r\n    </p>\r\n\r\n    <p>\r\n    Note: If you have a router connecting two nodes, then <em>each of\r\n    the two links</em> will incur the same wire time (and delay of\r\n    course). In the above 250Kbs example, each ping packet will incur\r\n    3ms of wire time to the router and <em>another</em> 3ms from the\r\n    router to the destination. The ping reply packet will see the same\r\n    6ms of wire time. If your delay is again 10ms, then the ping\r\n    roundtrip is 52ms. \r\n    </p>\r\n\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (64,'stoller','2005-08-16 15:09:33','Troubleshooting','I wrote a small TCP application to test the bandwidth of a link/LAN, but I do not observe the bandwidth that I asked for. ','    <p>\r\n    \r\n    Short answer: TCP needs large send and receive socket buffers in\r\n    order for its throughput to approach the capacity of long fat\r\n    networks (LFN) i.e. link/LANs with a large bandwidth-delay product\r\n    (BDP). Use UDP instead, if your intention is just to test the\r\n    bandwidth. If you need to tune the throughput of your TCP\r\n    application, refer to <a\r\n    href=\"http://www.psc.edu/networking/perf_tune.html\">\"Enabling High\r\n    Performance Data Transfers\"</a>.\r\n    </p>\r\n\r\n    <p>\r\n    \r\n    Long Answer: In order to observe the bandwidth that you specify,\r\n    it is necessary to keep the data pipe between the sender and the\r\n    receiver full. For a reliable window based protocol such as TCP,\r\n    the window size represents the number of unacknowledged bytes. TCP\r\n    needs to keep the unacknowledged bytes around until the acks for\r\n    them are received. These bytes are retained in socket buffers. On\r\n    a link/LAN with bandwidth B and round-trip-time (RTT) D, the\r\n    sender TCP needs to be able to transmit B times D bytes before\r\n    expecting any acknowledgement, if the data pipe has to be kept\r\n    full. The effective sending window is dependent on receiver\r\n    advertised window besides other things. It is necessary to have\r\n    sender and receiver socket buffers at least as high as BxD. If you\r\n    only care about optimal end-to-end TCP throughput, then the socket\r\n    buffers need to be BxD where B is the bandwidth of the bottleneck\r\n    link and D is the end-to-end RTT. Refer to the following <a\r\n    href=\"http://www.ssfnet.org/Exchange/tcp/tcpTutorialNotes.html\">\"TCP\r\n    mini-tutorial\"</a> or a basic TCP/IP book for the gory details.\r\n    \r\n    </p>\r\n',NULL,1,'2005-08-16 15:09:49','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (65,'stoller','2005-08-16 15:10:49','Troubleshooting','I wrote a small UDP application to test the bandwidth of a link/LAN, but I do not observe the bandwidth that I asked for. ','    <p>\r\n    Since UDP is unreliable and not flow controlled, you may just be\r\n    trying to push packets out on the wire too fast.  In this case\r\n    packets will be dropped before even getting to the wire.  You\r\n    may also be dropping packets at the receiver side if the consumer\r\n    cannot keep up.\r\n    <p>\r\n    If you are trying to saturate a 100Mb link and can\'t do it, it\r\n    may be due to using too small a packet size.\r\n    For small packet sizes, the limitation on a 100Mb link will be\r\n    the packet rate, not the raw bandwidth.  The eepro100\r\n    ethernet NICs in most of our machines can only generate a little\r\n    over 100,000 packets per second (pps).  With 64-byte packets,\r\n    you will thus only see about 51.2Mb/sec of raw data or about\r\n    14.4Mb/sec of UDP payload (a 64 byte ethernet packet can hold\r\n    only 18 bytes of UDP payload).  Note that the theoretical max\r\n    is less than 150,000 pps for 64-byte packets, so even better NICs\r\n    would not change this.\r\n    </p><p>\r\n    Considering that stock FreeBSD and Linux can generate even fewer\r\n    packets per second due to interrupt and scheduling overheads, you\r\n    probably need to use at least 200-byte packets to saturate a 100Mb\r\n    link.\r\n     </p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (66,'stoller','2005-08-16 15:11:34','Troubleshooting','I am running a routing daemon in my topology but the daemon claims that all my nodes are directly connected!','    <p>\r\n    The routing daemons are probably talking to each other via the control\r\n    net and routing traffic through it since it is the shortest path.\r\n    You will need to configure your daemon to ignore the control net interface.\r\n    See the\r\n    <a href = \"tutorial/tutorial.php3#ControlNet\">control net section</a>\r\n    of the tutorial.\r\n\r\n    </p>\r\n','cnet-routing',1,'2005-11-16 09:11:23','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (67,'mike','2005-08-18 14:53:50','Troubleshooting','My custom Linux kernel won\'t boot, why?','<p>\r\nShort answer: Either your kernel is misconfigured, you didn\'t run LILO, or\r\nyou hit a LILO-related bug we introduced.\r\n<p>\r\nLong answer:\r\n<ul>\r\n<li><b>The kernel is misconfigured.</b>\r\nIf you did not start from the configuration in the\r\n<tt>configs/emulab.config</tt>\r\nfile in one of our <tt>/share/redhat/...</tt>\r\nkernel source trees then perhaps you have left out some essential device driver.\r\nAlso make sure you have the serial line console enabled and running at\r\n115200 baud.\r\n</li>\r\n<li><b>You did not run LILO.</b>\r\nAfter installing a new kernel, you need to run <tt>/sbin/lilo</tt> to update\r\nthe boot block.\r\n</li>\r\n<li><b>You hit a bug we introduced.</b>\r\n<br><b>[ As of 10/19/05 this bug should be fixed.  If you suspect it is still\r\na problem, contact testbed-ops. ]</b>\r\n<br>\r\nIf the machine boots, but comes up in the default kernel rather than your\r\nkernel, then you probably hit a bug we caused.  If you made your kernel the\r\ndefault Linux to boot by setting <tt>default=my-linux</tt>\r\nin <tt>lilo.conf</tt>, then it will get over-ridden the <i>first</i> time\r\nthe machine reboots.  After the first time, it will boot your kernel.\r\nThe fix for this is to leave the default setting alone, but to change the\r\nlabel associated with your image: <tt>label=linux</tt>.\r\n</li>\r\n</ul>\r\n',NULL,1,'2005-10-19 10:01:11','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (68,'stoller','2005-09-01 13:10:34','Setting Up a New Emulab','What partitions do I have to make initially?','<p>\r\nFor the standard disk image you obtained from us, you do not need to worry \r\nabout partitioning the disk.  That image is a \"whole disk\" image, and \r\nhence contains a partition table and MBR - these will be laid down on the \r\ndisk along with the contents of the partitions by frisbee.\r\n</p>\r\n\r\n<p>\r\nAs for Windows, you will have to manually partition the disk and install \r\nfrom your own copy (due to licensing restrictions).  We recommend holding \r\noff on Windows for now; focus on making your testbed work well with \r\nFreeBSD and Linux first.  \r\n</p>\r\n\r\n',NULL,0,'2005-09-01 14:38:04','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (69,'stoller','2005-09-02 11:00:20','Getting Started','Forgot your password? Resetting does not work!','<p>\r\nPeople often report that the link to reset their password (after\r\nforgetting it) fails with the seemingly obscure error:\r\n<pre>\r\n	Invalid page arguments:\r\n	/chpasswd.php3?reset_uid=joeuser&key=0641d88cf3abb16d&simple=0\r\n</pre>\r\n\r\nThis typically happens because you are using a different browser for\r\nthe link you got in the email message, then you did when initially\r\nmaking the chpasswd request.\r\n</p>\r\n\r\n<p>\r\nWe store a cookie (1/2 of the above key) in the browser, and if\r\nyou fire up a new browser (invocation, as some email clients will do)\r\ninstead of using the same browser, that cookie will be missing.\r\n</p>\r\n\r\n<p>\r\nSolution: Paste the link you get in the email message, into the same\r\nbrowser invocation that you used to make the Change Password request.\r\n</p>\r\n','forgotpassword',1,'2005-11-02 13:30:31','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (70,'kwebb','2005-09-12 15:20:17','Using the Testbed','How can I login to users.emulab.net or a node in my experiment without providing my password?','<p>\r\nTo do this, you\'ll need to run an ssh agent on your machine, have a\r\nprivate key loaded into it, and have uploaded the public counterpart to\r\nEmulab (via the web interface).  Be sure you have agent forwarding enabled\r\nlocally.  Once you are logged into an emulab machine, your default Emulab \r\nkeypair should allow you to ssh from one node to another without a\r\npassword.\r\n</p>\r\n<p>\r\nFor more information on using ssh keypairs and ssh in general, please\r\nreference the ssh-keygen, ssh-add, and ssh man pages; ask your fellow\r\nproject/group members; and/or talk to your local sysadmin.\r\n</p>\r\n<br>\r\nYou might also find the following links for the more popular ssh\r\nclients useful:<br>\r\n<br>\r\nOpenSSH:<br>\r\n<br>\r\nhttp://sial.org/howto/openssh/publickey-auth/<br>\r\n<br>\r\nPuTTY:<br>\r\n<br>\r\nhttp://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter8.html#pubkey<br>\r\nhttp://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter9.html#pageant\r\n',NULL,1,'2005-09-12 15:22:43','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (71,'mike','2005-09-29 13:14:01','Setting Up a New Emulab','Nodes not being reloaded','<h2>Free nodes are not getting reloaded.</h2>\r\n\r\nThe normal path for a node after it leaves an experiment (at swapout time)\r\nis that it is placed in the emulab-ops/reloadpending experiment where the\r\n\"reload daemon\" (<code>/usr/testbed/sbin/reload_daemon</code>) will notice\r\nit, move it into emulab-ops/reloading and then issue the appropriate\r\n<code>os_load</code> command.\r\n<p>\r\nIf nodes are not being \"freed\" properly, there are a number of possible\r\ncauses:\r\n<ul>\r\n<li>The reload daemon has died.  Do a \"ps\" and see if\r\n<code>/usr/testbed/sbin/reload_daemon</code> is shown.  If not, restart it.\r\n<li>The reload daemon is hung.  If the reload daemon doesn\'t appear to be\r\noperating (e.g., there are nodes in emulab-ops/reloadpending for a long period),\r\nand \"ps\" reveals that the reload daemon is running, then it is probably stuck.\r\nAt Utah, the most common sticking point is when it tries to do a power cycle\r\nof a node on one of the serial-line-controlled RPC power controllers.  The\r\ncapture proxy monitoring that serial line sometimes thinks it is busy and locks\r\neveryone out.  The result is that calling <code>power</code> on a node\r\nconnected to such a controller hangs forever waiting for the serial line\r\nto become free.  If this happens, look at\r\n<code>/usr/testbed/log/powermon.log</code> which monitors the RPC power\r\ncontrollers and see if there is a message in there about timing-out on a\r\nparticular controller.  If so, go restart the capture process for that line.\r\n<li>Nodes are stuck in reloading.  This happens due to a variety of reasons,\r\nmostly having to do with heavy load during the boot process.  The reload\r\ndaemon only makes a modest attempt at resuscitating these nodes.  The easiest\r\nway to recover these is to just\r\n<code>nfree emulab-ops reloading <i>node ...</i></code>\r\n</ul>\r\n\r\n',NULL,0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (72,'stoller','2005-09-30 11:23:20','Hardware Setup','What does \'Too many links of type ethernet!\' mean (and what do I do)?','<p>\r\nIf you get the following message:\r\n	<code><pre>\r\n	*** No possible mapping for node0053\r\n	Too many links of type ethernet!</code></pre>\r\n\r\nit means that you tried to create more duplex links on a node than\r\nthere are physical ethernet cards. Typical testbed machines have 2-4 available network cards,\r\nand so that is all the duplex links you can create. To get around this\r\nlimitation, you can use a <b>lan</b> or if your code runs (or can be\r\nmade to run) under FreeBSD, you can use our\r\n<a href=tutorial/docwrapper.php3?docname=vnodes.html><em>virtual\r\nnode</em></a> or\r\n<a href=\"doc/docwrapper.php3?docname=linkdelays.html#EMULINKS\"><em>multiplexed link</em></a>\r\nsupport. Those features allow you to multiplex virtual nodes and/or network\r\nlinks onto a single physical node/ethernet link.\r\n</p>\r\n',NULL,0,'2006-02-09 10:17:27','lepreau',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (73,'stoller','2005-10-07 09:26:53','Hardware Setup','What is the current arrangement of switches and nodes?','<p>\r\nWe have a nice picture of the current\r\n<a href=doc/docwrapper.php3?docname=topo.html>\r\ncurrent arrangement of switches and nodes</a> (what node is attached to\r\nwhich switch, and how the switches connected to each other).\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (74,'stoller','2005-10-07 10:31:36','Setting Up a New Emulab','How is the reboot timeout controlled?','When an experiment is swapping in, and a node fails to reboot\r\nproperly, you will often see the following messages in the swapin\r\nlog:\r\n	<code><pre>\r\n	Still waiting for pc218 - it\'s been 1 minute(s).\r\n	Still waiting for pc218 - it\'s been 2 minute(s).\r\n	Still waiting for pc218 - it\'s been 3 minute(s).\r\n	Still waiting for pc218 - it\'s been 4 minute(s).\r\n	*** Giving up on pc218 - it\'s been 4 minute(s).	</pre></code>\r\n\r\nThere are two variables in the Emulab database that control how long\r\nthe system will wait for a node to reboot before giving up on it and\r\ndeclaring failure:\r\n\r\n<ul>\r\n<li> <b>bios_waittime</b>: The <tt>node_types</tt> table has a slot to\r\nindicate how long the bios typically takes to go from reset, to\r\nthe point where it it loads the PXE kernel. This number is typically\r\nset in the range of 60-120 seconds.\r\n\r\n<li> <b>reboot_waittime</b>: The <tt>os_info</tt> table (where OSIDs\r\nare stored) has a slot to indicate how long the operating system takes\r\nto reach multiuser mode. This number also includes the Emulab portion\r\nof the node self-configuration, which can add several minutes if\r\ntarballs or RPMs are scheduled to be loaded via the NS file. For our\r\ngeneric FreeBSD and Linux images, this number is typically set to 120\r\nseconds. This number is of course dependent on the processor speed of\r\nyour nodes. Slower nodes will require a longer timeout value.\r\n</ul>\r\n\r\nPlease note that the <tt>reboot_waittime</tt> is stored in each OSID\r\nentry in the database, and defaults to 120 seconds when an new OSID\r\nis created. You will need to change all of the entries in your\r\ndatabase if you decide to change this number on your testbed. For\r\nexample, to change all of the existing Linux images from 120 to 100\r\nseconds:\r\n	<code><pre>\r\n	mysql> update os_info set reboot_waittime=100 where os=\'Linux\'\r\n	</pre></code>\r\n',NULL,0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (75,'mike','2005-10-07 12:00:15','Troubleshooting','Why is the per-packet latency so high (variable) on the pc3000 nodes?','The pc3000 nodes have Intel Pro1000 Gigabit adaptor cards which implement\r\n\"interrupt throttling\" which can add quantity and variability to the latency\r\nof packets.  Interrupt throttling effectively caps the interrupt rate (either\r\ntransmit or receive) presented to the CPU.  See the README file that comes\r\nwith the driver\r\n(<code>/share/linux/e1000*</code> or <code>/share/freebsd/em*</code>)\r\nand the referenced Intel application note\r\n<a href=\"http://www.intel.com/design/network/applnots/ap450.htm\">\r\nhttp://www.intel.com/design/network/applnots/ap450.htm\r\n</a>.\r\nPlease note that the absolute and packet timer descriptions in\r\nthe README file are backwards, in particular the descriptions of\r\n<code>RxIntDelay</code> and <code>RxAbsIntDelay</code> would lead you to\r\nbelieve that the default values have no effect when in fact they serve\r\nto limit receive interrupts to about 8000/sec (RxAbsIntDelay == 128).\r\n<p>\r\nTo disable interrupt throttling on all interfaces in Linux, put the following\r\nas one line in your <code>/etc/modules.conf</code> (<code>/etc/modprobe.conf</code> in\r\nFedora Core images) file:\r\n<code><pre>\r\noptions e1000 InterruptThrottleRate=0,0,0,0,0,0 \\\r\n  TxIntDelay=0,0,0,0,0,0 TxAbsInt Delay=0,0,0,0,0,0 \\\r\n  RxIntDelay=0,0,0,0,0,0 RxAbsIntDelay=0,0,0,0,0,0\r\n</pre></code>\r\nand then reboot the machine.\r\n<p>\r\nFor FreeBSD, while you can change the per-interface settings with\r\n<code>sysctl</code> (<code>hw.em?.*_int_delay</code>), you cannot overcome\r\nthe global 8000 ints/sec. that is compiled into the kernel.  To override that,\r\nyou will need to modify the driver and build a new kernel.  In\r\n<code>/usr/src/sys/dev/em/if_em.c</code> look for:\r\n<code><pre>\r\n                /* Set the interrupt throttling rate.  Value is calculated\r\n                 * as DEFAULT_ITR = 1/(MAX_INTS_PER_SEC * 256ns) */\r\n#define MAX_INTS_PER_SEC        8000\r\n#define DEFAULT_ITR             1000000000/(MAX_INTS_PER_SEC * 256)\r\n                E1000_WRITE_REG(&adapter->hw, ITR, DEFAULT_ITR);\r\n</pre></code>\r\nand modify to suit your needs.\r\n\r\n','pc3000-latency',1,'2005-11-18 09:07:48','stack',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (76,'stoller','2005-10-10 12:55:23','Software Setup','Why does my image not boot on node type Y?','When you create your image, you need to specify the node_types that your\r\nimage runs on. This is done on the\r\n<a href=https://www.emulab.net/newimageid_ez.php3>image creation\r\nform</a> in the <b>Node Types</b> section. There will be a list of\r\nthe PC node types, and by default they start out as checked. If your\r\nimage is know not to run on some of those type, then be sure uncheck\r\nthe appropriate boxes.\r\n<br><br>\r\nWhat happens if a new node type is added to the testbed? Your image\r\nwill not run on the new node type until you edit the image descriptor\r\nand add the new node type to the list. To get to the image descriptor\r\nedit page, find the image descriptor on the\r\n<a href=https://www.emulab.net/showimageid_list.php3>List ImageIDs</a>\r\npage (see the left hand menu), and then click on the Edit option in\r\nthe upper left menu. \r\n<br><br>\r\nSimply check the boxes for the new node types, and then submit your\r\nchanges.\r\n<p>\r\nIf you are trying to get an image from an older pc type (pc600, pc850)\r\nto boot on a pc3000, then you also should read the\r\n<a href=\"http://www.emulab.net/doc/pc3000.html#images\">\r\nImages and Kernel Support section</a>\r\nof the <a href=\"http://www.emulab.net/doc/pc3000.html\">\r\npc3000 document\r\n</a>.\r\n\r\n',NULL,1,'2005-11-01 14:21:39','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (77,'lepreau','2005-10-11 23:33:04','Operations and Policy','Restricted access for SIGCOMM\'06','<pre>\r\nFrom: Leigh Stoller <stoller@flux.utah.edu>\r\nTo: emulab-recently-active-projects@emulab.net\r\nCc: testbed-ops@flux.utah.edu\r\nSubject: Restricted access for SIGCOMM\r\nDate: Tue, 31 Jan 2006 10:06:16 -0800\r\n\r\nYou MUST read this if you want Emulab access in the run up to the SIGCOMM\r\n2006 deadline on Feburary 10th.\r\n\r\nDue to the high demand for Emulab resources before the deadline we are\r\nonce again allowing you to handle resource scheduling.  There is a\r\nsocial element and some technical elements.\r\n\r\nBasically, we are going to let you self-schedule.\r\n\r\nIt will be up to you, the experimenters on imminent deadline, to manage\r\nthis yourselves, including working out schedules and allocations.  Our\r\nrole will be approver, and, if necessary, enforcer and adjudicator.\r\n(But we\'re busy and we\'d rather not, so play nice with each other!)\r\n\r\nWe are using the project-oriented collaboration tools to provide\r\ncommunication channels for you, and to provide access only to those\r\nwith imminent deadlines.\r\n\r\n1) If you are working on a SIGCOMM deadline or otherwise have permission\r\n   from us to work on an imminent deadline, you *MUST* go to this page\r\n   and join the DEADLINE project.  Don\'t fake it-- we can find out who\r\n   really has submitted an abstract.  Make sure you are already logged\r\n   into the Emulab web interface, and then go here (or click \"join\r\n   project\"):\r\n\r\n	https://www.emulab.net/joinproject.php3?target_pid=DEADLINE\r\n\r\n   Unless you are a member of this project, when resources get tight you\r\n   will not be able to swap in any experiments-- which will probably\r\n   start about a week prior to the deadline.  Please note that you can\r\n   *not* use the special DEADLINE project to *run* your experiments; you\r\n   only need to be a member of it.  For experimentatiion, continue to\r\n   use whatever projects you currently use.\r\n\r\n2) Send email to testbed-ops@flux.utah.edu giving us your project\r\n   name, explaining your need, and cc\'ing your official project head\r\n   (typically the faculty member). \r\n\r\n3) Once you are a member of the DEADLINE project, you should use some of\r\n   Emulab\'s new Collaboration tools to arrange resource use with other\r\n   members of that project.\r\n\r\n   We expect to restrict the resources used by almost all other projects.\r\n   We will get involved if there are problems or detect gross unfairness,\r\n   but we\'d rather not.\r\n\r\n   Here are the DEADLINE project collaboration tools that will be available\r\n   as soon as you join that project, clearly marked in the \"Collaboration\"\r\n   submenu on the left hand side of the Emulab web interface.\r\n\r\n   * Mailing list: DEADLINE-users@emulab.net, a normal Mailman mailing\r\n     list, can be used to send email to everyone on deadline.  You can\r\n     create new DEADLINE-* lists there, as well.\r\n\r\n   * Wiki: You can use the scheduling form we provided on the DEADLINE\r\n     project wiki to aid you in reserving times when you need lots of\r\n     nodes.  Or you can build a fancier one.  Or whatever.  Use the \"My\r\n     Wikis\" link.\r\n\r\n   * Chat Room.  There is an DEADLINE chatroom on the Emulab chat\r\n     server. If you go to the \"My Chat Buddies\" link, you will see your\r\n     jabber id and your password.  Use whatever client you like, as long\r\n     as it speaks jabber.\r\n\r\n     To join the chatroom, the room name is \"DEADLINE\" and the server is\r\n     \"conference.emulab.net\". You do not need a password to enter the\r\n     room.\r\n</pre>\r\n','DEADLINE',0,'2006-01-31 11:08:26','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (78,'stoller','2005-10-13 10:00:21','Collaboration Tools','Who is the administrator of per-project mailing lists?','<p>\r\nEach project and subgroup gets its own Mailman mailing list. Only\r\nmembers of the list (project or group) are allowed to post to these\r\nmailman lists, since we want to prevent spammers from bothering us.\r\nNote that <em>Testbed Operations is the administrator for these\r\nlists</em>, although users (including the project leader) are free to\r\nmanage their user options on those lists. Simply click on the \"My\r\nMailing Lists\" option in the Collaboration menu on your left. \r\n</p>\r\n\r\n<p>\r\nUsers may also create their own mailing lists. You will see a submenu\r\noption on the \"My Mailing Lists\" option in the Collaboration menu,\r\nwhich will redirect you to a form. Instructions are on that form, but\r\nalso note that you <em>are the administrator</em> for lists you create\r\nyourself.\r\n</p>\r\n\r\n\r\n','maillist-admin',1,'2006-01-17 11:40:15','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (79,'mike','2005-10-26 15:24:28','Troubleshooting','Why isn\'t my multicast traffic being correctly shaped?','If you have setup shaped links in your experiment, but your multicast traffic\r\nis not being properly shaped, then most likely your multicast traffic is using\r\nthe control network.\r\n<p>\r\nThis is because the default route for nodes is out the (unshaped) control\r\nnetwork and unless you have setup an explicit route for your multicast\r\naddresses, they will go via the default route.\r\n<p>\r\nIn FreeBSD and Linux you typically use <code>setsockopt</code>\r\nto explicitly bind multicast sockets to interfaces\r\n(<code>IP_MULTICAST_IF</code>).  If the application you are using doesn\'t\r\nallow you to specify the interface via a command line or config file option,\r\nyou can also just add a system wide route for the multicast address range\r\nin question.  For FreeBSD it would look something like:\r\n<code><pre>\r\n    route add -net 239.0.0.0/8 -iface em2\r\n</pre></code>\r\nSee also\r\n<a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\nthis FAQ entry\r\n</a>\r\nand the <a href =\" tutorial/tutorial.php3#ControlNet\">control net section</a>\r\nof the tutorial.\r\n\r\n',NULL,1,'2005-10-26 15:30:43','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (80,'mike','2005-10-27 09:41:57','Setting Up a New Emulab','I\'ve added new nodes to the testbed but I cannot ping them, what is wrong?','This question is too open-ended to just answer.  But here are some tools\r\nat your disposal for figuring out what is wrong.\r\n\r\n<h3>You really, <i>really</i> want to have a console</h3>\r\nFirst, there is a reason why we spend up to $50 a machine to put serial\r\nconsoles on every node, the console is invaluable for debugging these\r\nproblems.  So, if you have a serial console, connect to it, reboot the\r\nmachine and watch what happens.\r\n<p>\r\nIf you do not have a machine with a serial console, get one.  Just run\r\na serial cable from the machine to your boss or ops node, or any machine\r\nthat has an available serial connector.  Use <code>tip</code>,\r\n<code>minicom</code>, <code>hyperterm</code>, whatever to connect at 115200\r\nbaud (one stop bit, no parity) to a node.  Believe me, it is worth the\r\nhassle to do this.\r\n<p>\r\nIf you still insist on not having a serial console, at least have a console.\r\nConfigure you MFSes and images to use the VGA for a console (see the README\r\nfiles that come with the MFSes and generic images for instructions).  They\r\nhaul your butt over to the machine room and hook up a monitor and keyboard.\r\nNow reboot the node and frantically scribble down messages that scroll past\r\non the screen. (Have I mentioned that you really want a serial console?)\r\n\r\n<h3>Debugging boot problems without a console</h3>\r\nIf you don\'t have a console of any sort, you have to figure out what happened\r\nfrom second hand info.  Nodes contact boss from a number of places and for a\r\nvariety of reasons when they boot.  Thus there are numerous log files that\r\nyou can look at on boss to see how far a node boot has progressed.\r\n<ul>\r\n<li><b><code>/usr/testbed/log/dhcpd.log</code></b>.\r\nNodes boot using PXE and the first thing the PXE BIOS does is DHCP\r\nto discover its address and to learn what boot program to download.\r\nLook in here for the node\'s MAC to see if it requested and received its\r\nIP info.\r\n\r\n<li><b><code>/usr/testbed/log/tftpd.log</code></b>.\r\nDHCP should return <code>/tftpboot/pxeboot.emu</code> as the boot loader\r\nto download and the PXE BIOS should attempt to download this using TFTP.\r\nLook in this log to see if the node downloaded pxeboot.emu.\r\n(There may be other downloads for the node as well, we\'ll get to those in\r\na minute.)\r\n\r\n<li><b><code>/usr/testbed/log/bootinfo.log</code></b>.\r\nThe pxeboot loader will contact the boss node to determine what it should\r\ndo next, one of: download a memory-based filesystem (MFS) or boot from a\r\ndisk partition.  That request is done via the \"bootinfo\" protocol. \r\nLook in this log for the node IP to see if requested and received its\r\n\"marching orders.\"  If the node is has just been added then it should be\r\nconfigured to boot the \"admin MFS.\"  Now, you can go back to the TFTP log\r\nand see if it also requested a series of files from the\r\n<code>/tftpboot/freebsd/boot</code> directory.  The final request should\r\nhave been for <code>mfsroot.gz</code>.\r\n\r\n<li><b><code>/usr/testbed/log/tmcd.log</code></b>.\r\nOnce the MFS (or disk-based) OS is running, the Emulab scripts should start\r\nrequesting self-configuration info via the \"Testbed Master Control\" protocol.\r\nLook in the TMCD\'s log for the node name to see if it started requesting\r\nvarious info.  You should see \"status\", \"fullconfig\", and other requests,\r\nculminating in its reporting state <code>ISUP</code>.\r\n</ul>\r\n\r\n',NULL,1,'2005-10-27 09:50:44','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (81,'stoller','2005-10-27 13:33:29','Using the Testbed','How much permanent disk is available for my files?','<p>\r\nEmulab provides a reasonable amount of disk space on\r\n<tt>users.emulab.net</tt> for experimenters to store files. There are\r\nseveral directory trees you have access to. Remember, all of these\r\ndirectories can be accessed on your experimental nodes via NFS.\r\n\r\n<ul>\r\n<li> <tt><b>/proj</b></tt>: Every project gets a sub directory in\r\n     <tt>/proj</tt>. This is the primary location in which you should\r\n     store files needed by your experiments and/or results from your\r\n     experiments.\r\n\r\n<li> <tt><b>/groups</b></tt>: Every project subgroup gets a sub\r\n     directory in <tt>/groups</tt>. If you have files that need to be\r\n     restricted to just your subgroup members, place them here.\r\n\r\n<li> <tt><b>/users</b></tt>: Every user gets a home directory in\r\n     <tt>/users</tt>. Your home directory is not the place to store\r\n     project files.\r\n</ul>\r\n\r\nSince we have many experimenters, all wanting more disk space then we\r\nphysically have, we run <b>quotas</b> on all filesystems to prevent\r\nusers from filling up the disks. To see how big your quota is on each\r\nfilesystem, simply run the <tt>quota</tt> command on\r\n<tt><b>users.emulab.net</b></tt>:\r\n\r\n	<code><pre>\r\n	users$ quota\r\n	Disk quotas for user leebee (uid 30379): \r\n	     Filesystem   usage   quota   limit   grace   files   quota   limit   grace\r\n	         /users      54   50000   60000              25       0       0\r\n	             /q  967226 2000000 2500000           30348       0       0</pre></code>\r\n\r\nYou will notice several important facts about the above quota display.\r\n\r\n<ul>\r\n<li> Quotas are displayed in 1K byte blocks.\r\n\r\n<li> Quotas are per-user, not per-project or per-group.\r\n     Just joining a new project or group isn\'t going to get you any\r\n     more disk space!\r\n\r\n<li> You have a seperate quota on each physical filesystem.\r\n     Note however that this does not necessarily mean a seperate quota\r\n     for each of <tt>/users</tt>, <tt>/proj</tt> and <tt>/groups</tt>.\r\n\r\n<li> You have a very small quota on <tt>/users</tt>, which is\r\n     intended to encourage users to use the project disk space in\r\n     <tt>/proj</tt>.\r\n\r\n<li> On the current Utah Emulab fileserver,\r\n     <tt>/proj</tt> and <tt>/groups</tt> are actually symlinks to\r\n     directories on <tt>/q</tt>, and there your quota is much larger\r\n     than on <tt>/users</tt>.\r\n</ul>\r\n\r\nIf you find that your existing quota is not big enough for your needs,\r\nplease send email to testbed-ops explaining your needs.\r\n','diskspace',1,'2005-11-16 09:53:43','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (82,'stoller','2005-10-29 08:19:28','Setting Up a New Emulab','How do I add users to arbitrary unix groups on boss/ops','<p>\r\nTo add a user to an arbitrary unix group on boss and ops (say, <b>wheel</b>\r\nor bin or operator) you need to add a entry to the database so that\r\nthe Emulab account system knows about it. Editing /etc/group on boss\r\nand ops will not work since those changes will be removed by Emulab\r\naccount system later. To permanently add someone to the <tt>wheel</tt>\r\ngroup:\r\n	<code><pre>\r\n	boss> withadminprivs /usr/testbed/sbin/unixgroups -a leebee wheel</pre></code>\r\n\r\nUse the \'-r\' option to later remove a user from a group. To dump the\r\ncurrent contents of the DB\'s auxiliary unix groups table, use the \'-p\'\r\noption.\r\n</p>\r\n<p>\r\n<b>Note that testbed administrators are automatically added to the\r\n<tt>wheel</tt> group on boss and ops.</b>\r\n\r\n\r\n',NULL,0,'2005-10-29 08:20:49','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (83,'stack','2005-10-31 10:55:15','Using the Testbed','Where are the Emulab command-line tools located?','<p>\r\nEmulab provides several handy command-line tools on the \'users\' node in the\r\n\'/usr/testbed/bin\' directory.  The experimental nodes have the same directory, although it contains only a few of the tools.  You can add the directory\r\nto your shell PATH by editing your .cshrc and adding:\r\n\r\n<pre>\r\nsetenv PATH ${PATH}:/usr/testbed/bin\r\n</pre>\r\n\r\nOr, if you use bash:\r\n\r\n<pre>\r\nexport PATH=${PATH}:/usr/testbed/bin\r\n</pre>',NULL,0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (84,'stack','2005-11-01 15:28:39','Setting Up a New Emulab','Python, Swig, and m2crypto incompatibilities','<p>\r\nDue to some changes in the way SWIG lays out its native objects, some parts of Emulab may fail to work.  Here are some of the common symptoms:\r\n\r\n<ul>\r\n<li>The python scripts in /usr/testbed/bin fail due to an exception in the m2crypto code.\r\n<li>The event system fails with an XML-RPC error.\r\n<li>The XML-RPC server rejects connections.\r\n</ul>\r\n\r\nThe solution is to downgrade SWIG to 1.3.23 and rebuild/reinstall m2crypto with this older version of SWIG on both boss and ops.  The XML-RPC server runs on boss and uses the m2crypto library, so it should be restarted as well.\r\n',NULL,0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (85,'stoller','2005-11-08 07:52:33','Setting Up a New Emulab','Whats that Cross Reference Tag in the Knowledge Base entry used for?','The reason for the \"cross reference tag\" in the kb entry is so that you can do this:\r\n	<code><pre>\r\n	href=\"../kb-show.php3?xref_tag=tiptunnel\"</pre></code>\r\n\r\ninstead of:\r\n	<code><pre>\r\n	href=\"../kb-show.php3?idx=39\"</pre></code>\r\n\r\nThe former makes it possible to export the KB without worrying about how\r\nthe remote DB loads the entries.\r\n',NULL,0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (86,'stoller','2005-11-08 07:55:43','Setting Up a New Emulab','Whats that Faq Entry checkbox in the Knowledge Base entry used for?','The <em>Faq Entry</em> checkbox indicates whether the Knowledge Base\r\nentry should be displayed on the generic emulab <a href=kb-faq.php3>\r\nFAQ</a> page. Displaying all of the KB entries in the FAQ would be\r\ninformation overload for most people, so the Faq Entry checkbox is\r\nused to restrict the FAQ page to just the things that clueless users\r\nreally need to know.\r\n',NULL,0,'2005-11-08 08:08:23','lepreau',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (87,'stoller','2005-11-11 07:55:14','Setting Up a New Emulab','Does Emulab use NTP?','<p>\r\nYes, Emulab uses NTP (<a href=www.ntp.org/>Network Time Protocol</a>)\r\nto keep all of the clocks synchronized. The typical setup is for\r\nyour boss node to act as a client, keeping in sync with external\r\nservers and peers. Your ops node also acts as a client (using external\r\ntime servers), but also acts as a server for your experimental nodes.\r\n</p>\r\n<p>\r\nThe Emulab installation process creates a CNAME in your named setup\r\nfiles, called <tt>ntp1</tt>, which is really an alias for your ops\r\nnode. In addition, all of the generic images that you get from Utah\r\ninclude <tt>ntp.conf</tt> files that specify <tt>ntp1</tt> as their\r\nNTP server.\r\n</p>\r\n<p>\r\n','NTP',0,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (88,'mike','2005-11-16 09:28:40','Hardware Setup','What is the control net and how do I identify it on a node?','<h4>What is the \"control network\"?</h4>\r\n\r\nAll experimental nodes in the testbed are connected to a common LAN\r\ncalled the control network.  The control network is used for a variety\r\nof purposes including: loading node disks, allowing nodes to communicate\r\nwith the Emulab infrastructure, and allowing access to the nodes from outside.\r\nFor a more complete description see\r\n<a href=\"tutorial/tutorial.php3#ControlNet\">\r\nthe tutorial section</a>.\r\n<p>\r\nThe fact that it is a shared LAN has many implications for applications,\r\nincluding for\r\n<a href=\"kb-show.php3?xref_tag=no-traffic-shaping\">\r\ntraffic shaping\r\n</a> and\r\n<a href=\"kb-show.php3?xref_tag=cnet-routing\">\r\nrouting</a>.\r\nAll stem from the fact that\r\nnetwork traffic can traverse the control network between experiment nodes\r\nrather than the designated topology.  Again, refer to the tutorial for\r\nmore details.\r\n\r\n<h4>How do I identify the control network interface on a node?</h4>\r\n\r\nSince different types of nodes may have different control net interfaces and\r\ndifferent OSes identify the interfaces in different ways, you cannot just\r\nhardwire a particular name in your scripts.\r\n<p>\r\nInstead, use the file <code>/var/emulab/boot/controlif</code> which, on any\r\nexperiment node, contains the name of the control network interface.  For\r\nexample, you could do:\r\n<pre>\r\n<code>\r\n    tcpdump -i `cat /var/emulab/boot/controlif`\r\n</code>\r\n</pre>\r\n\r\n','what-is-cnet',1,'2005-11-16 09:36:27','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (89,'kwebb','2005-12-08 13:17:55','Using the Testbed','Can I specify specific network interfaces on the nodes for the links in my topology?','<p>\r\nAt this time it isn\'t possible to bind the links in your experiment to specific interfaces on the nodes.  However, most people can abstract away the need to know which interface is being used for what by utilizing mapping information catalogued on each individual node.\r\n<br><br>\r\nFor example, the file  /var/emulab/boot/ifmap contains mappings from IP and MAC address to network interface.  A typical entry looks like this:\r\n<br><br>\r\n<code>\r\nem2 10.1.143.2 000423b73e88\r\n</code>\r\n<br><br>\r\nWhere the fields are: {interface name} {IP address} {MAC address}.  This mapping file can easily be parsed by a simple script or snippet of code.\r\n</p>\r\n\r\n<p>\r\nIf you are using automatic IP assignment (which most people do, and should in most cases!), then you may not know which IPs you will be using ahead of time, but will instead know which next hop or end node you wish to communicate with.  In this case, the /etc/hosts file is the first place to start since it contains mappings from {hostname} and {hostname}-{linkname} to IP address (more information on node naming can be found <a href=\"http://www.emulab.net/kb-show?xref_tag=node-naming\">here</a>.)\r\nOnce you have the IP address you care about, you can use the \"route get\" command on FreeBSD or the \"ip route get\" command on Linux to find out which interface will transmit packets destined to that IP.\r\n</p>\r\n\r\n<p>\r\n<b>NOTE:</b> Please be aware that when using automatic IP assignment, IP addresses are consistent across swapins for links in your topology <b>only</b> if you do not modify or recreate (terminate then create) your experiment.  I.e., swapin and swapout operations will not alter the IP assignment, but other operations will re-run the IP assigner.\r\n</p>\r\n','map-interfaces',1,'2005-12-08 13:33:55','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (90,'stoller','2006-01-17 07:50:28','Using the Testbed','So you want to teach a class using Emulab?','<p>\r\nSure, Emulab has been used to teach many classes! From our\r\nperspective, there is no significant operational difference between a\r\nproject that is doing research and a project that has been started to\r\nteach a class. However, there are a few things that <b>you, the\r\nprofessor</b> have to keep in mind.\r\n\r\n<ul>\r\n<li> Please start a new project for each new class number; the name of\r\n     the project should be the same as the name of the class.\r\n<br><br>\r\n\r\n<li> If you have TAs, then you should grant them <em>group_root</em>\r\n     privileges so that they can handle day to day stuff like\r\n     approving new project members, creating subgroups, etc.\r\n<br><br>\r\n\r\n<li> Note that by default, all people in a project are in the same\r\n     group and can see other people\'s work in /proj and can access other\r\n     people\'s experiments.\r\n     You should read the tutorial on <a href=groups.html>sub groups</a>,\r\n     if it is necessary to partition class members into independent\r\n     groups where members of one group should not be able to access\r\n     the work of another group.\r\n<br><br>\r\n\r\n<li> Students should be instructed to read the <a href=faq.php3>FAQ</a> and\r\n     the <a href=tutorial/tutorial.php3>tutorial</a> so they\r\n     understand what Emulab can do and how to use Emulab. The biggest\r\n     stumbling block for students is recognizing that Emulab grants\r\n     access to real hardware, all the way down to the bits on the disk.\r\n<br><br>\r\n\r\n<li> Most important, <b>you and your TAs</b> are the first resource for\r\n     answering questions from students. Students should not contact us\r\n     until they have first contacted you or your TAs.  There are a variety\r\n     of collaboration tools available to assist in \"self help\", in particular\r\n     <a href=\"http://www.emulab.net/kb-show.php3?xref_tag=maillist-admin\">\r\n     per-project and per-group mailing lists</a> can be extremely valuable.\r\n     If you are unable to answer a question about Emulab, then by all means\r\n     please contact us.\r\n<br><br>\r\n\r\n<li> Bug reports and questions should include the project name, the\r\n     experiment name, any node IDs on which a problem is present.\r\n     Please, no questions of the form \"my software does not work on\r\n     Emulab; whats wrong?\" We do not have the resources to debug\r\n     your software problems.\r\n<br><br>\r\n\r\n<li> Emulab is a finite resource, consider this when making assignments.\r\n     While 300+ machines may seem like a lot, they don\'t go very far if\r\n     you have 10 groups in the class, each trying to do a project requiring\r\n     30 nodes, the night before the assignment is due.\r\n\r\n</ul>\r\n</p>\r\n',NULL,1,'2006-01-17 11:59:38','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (91,'stoller','2006-01-17 16:56:26','Getting Started','How do I change my email address?','<p>\r\nSorry, we have to do that for you. Just send a message to \r\nTestbed Operations, and we will verify the email address works, and then\r\nchange it for you.\r\n</p>\r\n',NULL,1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (92,'stoller','2006-01-19 14:40:16','Using the Testbed','Linking to Emulab from your project home page','<p>\r\nSince we provide this service free of charge to the research\r\ncommunity, we would greatly appreciate it if you would add a link to\r\nus on your project home page. One such example would be:\r\n<br><br>\r\n\r\n<blockquote>\r\n\r\n<a href=\'http://www.emulab.net\'>\r\n   <img style=\'width:200px; height:auto;\'\r\n   src=\'http://www.emulab.net/logo-emulab.gif\'></a><br>This work made\r\n   possible, in part, by the good people at\r\n   <a href=\'http://www.emulab.net\'>Emulab.Net</a>\r\n</blockquote>\r\n<br><br>\r\nbut of course it is up to you! The logo above can be scaled bigger or smaller, as you like, although much smaller and its hard to see what it is. \r\n',NULL,0,'2006-01-19 15:09:38','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (93,'stack','2006-01-24 09:47:38','Troubleshooting','Why does my NS file not parse correctly anymore?','<p>\r\nWe are now running NS files through the real NS parser as a check that our own parser is functioning correctly. This change should not cause a problem for most files, however, there is some syntax that works in our parser but not the real one. For example, the following NS would not parse correctly anymore because the \"node1\" and \"node2\" strings are not variable references:\r\n\r\n<pre>\r\n  set node1 [$ns node]\r\n  set node2 [$ns node]\r\n\r\n  $ns make-lan \"node1 node2\" 10Mbps 0ms\r\n</pre>\r\n\r\nThe fix is simply to prefix them with dollar signs:\r\n\r\n<pre>\r\n  $ns make-lan \"$node1 $node2\" 10Mbps 0ms\r\n</pre>\r\n\r\nIn cases where the variable name is constructed programmatically, you can use the \"set\" command to get the value of the variable. For example, to fix the following NS:\r\n\r\n<pre>\r\n  for {set i 0} {$i < 10} {incr i} {\r\n    set name node$i\r\n    set $name [$ns node]\r\n    append lanstr \"$name \"\r\n  }\r\n  $ns make-lan $lanstr 10Mbps 0ms\r\n</pre>\r\n\r\nYou would change the \"append\" line to get the value of the variable specified by the \"name\" variable like so:\r\n\r\n<pre>\r\n    append lanstr \"[set $name] \"\r\n</pre>\r\n','stricter_ns',1,NULL,NULL,0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (94,'ricci','2006-01-24 17:10:33','Using the Testbed','What tolopolgy generators work with Emulab?','In theory, you can use any topology generator whose output you can convert\r\nto NS. Some can do this natively.\r\n\r\nHowever, there are a few issues to be aware of. First, most topology generators\r\ndo not annotate their topologies with bandwidth, latencies, etc. You may have\r\nto do this yourself, and it won\'t always be obvious what you should set them to.\r\nSecond, topology generators can often produce experiments that can\'t be\r\ninstantiated on Emulab. They may generate topolgoy generators that simply have\r\ntoo many nodes, or they make use too many links on some hosts.\r\n\r\n<h4>Some Known Topology Generators</h4>\r\n<ul>\r\n    <li><a href=\"http://www.cs.bu.edu/brite/\">BRITE</a> is the generator most\r\n        suited to Emulab. You can decide how many nodes you want, and it can\r\n        produce NS files with bandwidths and latencies.</li>\r\n    <li><a href=\"http://www.cc.gatech.edu/projects/gtitm/\">gt-itm</a> is another\r\n        good generator, but you will have to convert its output to NS, and it\r\n        does not provide latencies and bandwidths.</li>\r\n    <li><a href=\"http://topology.eecs.umich.edu/inet/\">inet</a> generates only\r\n        very large topologies (several thousands nodes), so it is not a good\r\n        match for Emulab.</a>','generators',1,'2006-01-24 17:15:42','ricci',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (95,'ricci','2006-01-25 13:47:07','Troubleshooting','I got an error in my swapin that says \'Temporary Resource Shortage\' - what does it mean?','<p>\r\n<code>assign</code> is the program that takes your virtual topology and\r\nEmulab\'s physical topology, and decides which nodes, links, etc. to\r\ninstantiate your experiment on. So, if it fails, we were not able to find\r\nsuitable nodes for your experiment.\r\n</p>\r\n\r\n<p>\r\nWe first run <code>assign</code> with the currently available physical topology.\r\nIf it finds a mapping, we swap your experiment in. If it fails, we try again, but\r\non the full Emulab topology - the whole testbed, as if it were empty. This way,\r\nwe can help you distinguish between experiment that simply cannot be swapped in\r\nright now, and ones that have a topology that we cannot instantiate for some\r\nreason.\r\n</p>\r\n\r\n<h3>Precheck errors returned by <code>assign</code></h3>\r\n\r\n<p>\r\nWhen <code>assign</code> starts, it does some &quot;Type prechecks&quot; and\r\n&quot;Mapping Prechecks&quot; to find some common types of errors. In this\r\ncase, we can usually tell you exactly which nodes in your virtual topology was\r\na problem, and why.  If the error message says\r\n<font color=\"red\">available nodes</font>, it means that there are not enough\r\nfree nodes of the type available right now.  If it says \r\n<font color=\"red\">suitable nodes</font>, this means that there are enought nodes\r\nof the type available, but some of them are not suitable for your experiment.\r\nSay, for example, that some of the nodes in your topology request a large\r\nnumber of interfaces. This message could then mean that there are enough\r\nfree PCs, but not enough free PCs that meet your interface requirements.\r\n</p>\r\n\r\n<h4>Type Precheck Errors</h4>\r\n\r\n<dl>\r\n    <dt><font color=\"red\">No physical nodes of type T found</font></dt>\r\n    <dd>One or more of your nodes requested to be placed on a physical\r\n    node of type T. This usually means that there are simply no nodes\r\n    of that type available right now. In the case of a mapping failure\r\n    on an empty testbed, though, it means that you asked for a type\r\n    of node we don\'t have.</dd>\r\n\r\n    <dt><font color=\"red\">X  nodes of type T requested, but only Y found\r\n        </font></dt>\r\n    <dd>Similar to the error above; there were some nodes of type T available,\r\n    but not enough for your experiment</dd>\r\n\r\n    <dt><font color=\"red\">X  nodes of type T requested, but you are only\r\n        allowed to use Y</font></dt>\r\n    <dd>Similar to the two above, but in this case, the issue is not with the\r\n    available physical topology, but with Emulab policies which limit the number\r\n    of nodes of a given type you\'re allowed to use.</dd>\r\n\r\n    <dt><font color=\"red\">No physical nodes can satisfy vclass V</font></dt>\r\n    <dd>You have asked for a virtual equivalence class, but there are no nodes\r\n    available that fit your request for the class.</dd>\r\n</dl>\r\n\r\n<h4>Mapping Precheck Errors</h4>\r\n\r\n<p>\r\nThese errors take the form: <font color=\"red\">&quot;No possible mapping for\r\n    N: E&quot;</font>, where N is the name of one of the nodes in your virtual\r\ntopology, and E is some error message. Usually, there will be only one error,\r\nthough in some rare cases, there could be more.\r\n\r\n<dl>\r\n    <dt>No links of type T found</dt>\r\n    <dd>Node N had at least one link of type T (the default link type, if you\r\n    don\'t specify one, is Ethernet), but we didn\'t find any physical links of\r\n    that type in the testbed.</dd>\r\n\r\n    <dt>Too many links of type T</dt>\r\n    <dd>We found some links of type T, but no physical node had enough to\r\n    satisfy node N. For example, if you ask for 5 Ethernet links on the same\r\n    node, Utah\'s Emulab will not be able to instantiate your experiment, since\r\n    its nodes currently only have 4 links.</dd>\r\n\r\n    <dt>Too much bandwidth on emulated links!</dt>\r\n    <dd>If you\'re using multiplexed links, you will get this error if the\r\n    total bandwidth to and from some virtual node exceeds the total amount\r\n    of bandwidth on any of our nodes. For example, if all nodes in the testbed\r\n    have 4 100Mbit links, and one of your vnodes has 500Mbits of aggregate\r\n    bandwidth across all of its links, you will get this error.</dd>\r\n\r\n    <dt>No physical nodes have feature F</dt>\r\n    <dd><code>assign</code> uses a system of <em>features</em> and\r\n    <em>desires</em> to model miscellaneous mapping constraints.  Nodes in your\r\n    topology have <em>desires</em>, and we try to map those to\r\n    <em>features</em> on the physical testbed. One example of this is disk\r\n    images. We attach a <em>desire</em> to each node in your topology for the\r\n    disk image you\'ve requested for it. We then ensure that the physical nodes\r\n    that you get have a <em>feature</em> indicating that your OS on them.</dd>\r\n\r\n</dl>\r\n\r\n<h3>Other <code>assign</code> error messages</h3>\r\n\r\n<p>\r\n<code>assign</code> is a big, complex program that uses a randomized heuristic\r\nto find solutions to an NP-hard problem. Thus, some types of failures are\r\nmore difficult than those above to attribute to a specific node or link.\r\n<code>assign</code> calls these <em>violations</em> of its mapping constraints.\r\nBelow we give a brief description of what each type of violation means. Each\r\nviolation is associated with an integer, which tells you how many violations\r\nof that type there were.\r\n</p>\r\n\r\n<dl>\r\n    <dt><code>unassigned</code></dt>\r\n    <dd>One or more of the nodes in your topology was not mapped. This could\r\n    come from a number of sources: there might not be enough nodes of the\r\n    right type free, there may not be enough nodes with enough interfaces\r\n    of sufficient speed available, etc.</dd>\r\n\r\n    <dt><code>pnode_load</code></dt>\r\n    <dd>If you were trying to instantiate an experiments with vnodes, then\r\n    the best mapping found by <code>assign</code> places too many vnodes onto\r\n    at least one physical nodes. This is most often caused by insufficient\r\n    physical nodes being available.</dd>\r\n\r\n    <dt><code>no_connect</code></dt>\r\n    <dd><code>assign</code> didn\'t find a mapping for a link for which both of\r\n    the endpoints were assigned. For example, if you asked for two nodes of a\r\n    type which don\'t have gigabit interfaces, and a gigabit link between them,\r\n    you would get this violation.</dd>\r\n\r\n    <dt><code>link_users</code></dt>\r\n    <dd>When using vnodes, this violation means that the best solution\r\n    <code>assign</code>has found mixes multiplexed and non-multiplexed\r\n    virtual link on the same physical link, which is not allowed. This\r\n    likely means that you\'ve asked for too many links on one vnode, or its\r\n    links ask for too much bandwidth.</dd>\r\n\r\n    <dt><code>bandwidth</code></dt>\r\n    <dd><em>assign</em> tries to avoid artifacts from over-use of bottleneck\r\n    links in the testbed\'s physical topology by limiting the traffic across\r\n    inter-switch trunks. This violation means that in the best solution found,\r\n    an inter-switch link was oversubscribed. The most common cause of this is\r\n    big (>50 node), high speed LANs. Consider using a different topology.</dd>\r\n\r\n    <dt><code>desires</code></dt>\r\n    <dd>See the section on desires above - this violation means that\r\n    <code>assign</code> was not able to fulfill all of the desires in your\r\n    submitted topology</dd>\r\n\r\n    <dt><code>vclass</code></dt>\r\n    <dd>If you put a <code>tb-make-hard-vtype</code> in your NS file, this\r\n    violation means that <code>assign</code> was unable to find a solution\r\n    that fit the constraints of your vtype.</dd>\r\n\r\n    <dt><code>delay</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n    <dt><code>trivial_mix</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n    <dt><code>subnodes</code></dt>\r\n    <dd>Some nodes are hosted \'in\' or \'on\' other nodes. For example, the IXP\r\n    network processors are hosted inside of a PC, and sensor net motes are\r\n    hosted on a programming board. This violation means that\r\n    <code>assign</code> was unable to find a mapping in which the host and\r\n    subnode in your topology correspond to a host/subnode pair in the\r\n    physical topology.</dd>\r\n\r\n    <dt><code>max_types</code></dt>\r\n    <dd>Emulab policy may prevent you from using too many nodes of a given\r\n    type at a time. This violation indicates that the best solution found\r\n    used too many nodes of some type</dd>\r\n\r\n    <dt><code>endpoints</code></dt>\r\n    <dd>This type of violation is currently not generated</dd>\r\n\r\n</dl>\r\n\r\n','assignfail',1,'2006-04-04 15:12:23','ricci',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (96,'stoller','2006-01-28 09:58:54','Customizing your experiment','How to build you own delay kernel','<p>\r\nTo build your own delay kernel, first log into one of your delay nodes and\r\ncopy over the sources:\r\n	<code><pre>\r\n	cd /usr\r\n	sudo tar xzf /share/freebsd/4.10/src.tar.gz	</pre></code>\r\n\r\nMake whatever changes you need. For example, the code for traffic\r\nshaping is contained in <tt>/usr/src/sys/netinet/ip_dummynet.c</tt>.\r\nThen build a new kernel:\r\n	<code><pre>\r\n	cd /usr/src\r\n	sudo make buildkernel KERNCONF=TESTBED-DELAY	</pre></code>\r\n\r\nand install it:\r\n	<code><pre>\r\n	sudo cp /usr/obj/usr/src/sys/TESTBED-DELAY/kernel /kernel.10000HZ\r\n	sudo cp -p /kernel.10000HZ /kernel.delay\r\n	sudo cp -p /kernel.10000HZ /kernel		</pre></code>\r\n\r\nand reboot:\r\n	<code><pre>\r\n	sudo reboot					</pre></code>\r\n	\r\nIf you want to use this image on other delay nodes in future\r\nexperiments, <a href=tutorial/tutorial.php3#CustomOS>create a custom\r\nimage</a>. In your NS file:\r\n	<code><pre>\r\n	tb-set-delay-os XXX-XXX				</pre></code>\r\n',NULL,0,'2006-01-30 09:05:02','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (97,'mike','2006-02-02 11:23:54','Hardware Setup','What are the limits for link shaping?','There are four characteristics of an emulated link that can be shaped:\r\nbandwidth, delay (latency), packet loss rate, and queue sizes.\r\nShaping is performed either by dedicated shaping nodes or on the\r\nnodes themselves when using\r\n<a href=\"doc/docwrapper.php3?docname=linkdelays.html\">\r\nend node shaping</a>.  The fidelity\r\n(precision and accuracy) of shaping depends on the type of shaping used.\r\nThe lowest fidelity is achieved when using\r\n<a href=\"tutorial/docwrapper.php3?docname=vnodes.html\">\r\nmultiplexed virtual nodes</a>\r\n(which use virtual links and end node shaping),\r\nthe highest with dedicated shaping nodes (the default).\r\nMileage varies with end node shaping, depending on the applications in use,\r\nas shaping shares node resources (CPU cycles, memory) with the applications.\r\nThe limits below apply only to dedicated shaping nodes.\r\n<p>\r\n<a href=\"doc/docwrapper.php3?docname=linktest.html\">\r\nLinktest</a>\r\ncan be used to verify characteristics of all links in an experiment,\r\nwith possible limitations as explained in the list below.\r\n<p>\r\n<ul>\r\n<li><b>Bandwidth.</b>\r\nThe maximum possible bandwidth of a link is 1000Mb/sec (aka \"gigabit\")\r\nand is available on approximately half of our nodes\r\n(the <a href=\"doc/docwrapper.php3?docname=pc3000.html\">pc3000s</a>).\r\nThe maximum value\r\nfor which we have validated shaping is 100Mb/sec.  Values between 100Mb\r\nand 1000Mb may be possible, but we have not attempted any characterization.\r\nNote that the bandwidths of 100Mb and 1000Mb are special in cases where no\r\nother shaping parameters are specified (i.e., 0ms delay, no loss).\r\nIn these cases, no shaping is enabled (no shaping nodes allocated).\r\n<li><b>Delay.</b>\r\nThe minimum possible non-zero delay is 2ms.  This is due to the scheduling\r\ngranularity of the shaping nodes.\r\nThe maximum possible delay depends on the available buffering on the shaping\r\nnode and is proportional to the delay-bandwidth product of the links being\r\nshaped by that node.  In the default configuration, a delay node has\r\nbuffering for ~65,000 full-sized packets (the NMBCLUSTERS parameter of the\r\nFreeBSD kernel).  With a delay node shaping only a single, unidirectional\r\n100Mb/sec TCP stream (~8100 packets/sec) this would be adequate for about\r\n8 seconds.  Since packet buffers are a fixed size, extremely high packet\r\nrates can affect this dramatically.  So a node shaping two bidirectional\r\nUDP streams (four \"pipes\") with an aggregate packet rate of 60,000 pps\r\ncould handle about 0.25 second of delay per pipe.  In general, delays of\r\nless than one second are recommended.\r\n<li><b>Packet Loss Rate.</b>\r\nThe packet loss rates can range from 0 to 1.\r\nRecall that this is a probability, not a percentage;\r\ni.e., don\'t expect great things from a link with loss rate of 1.\r\n<li><b>Queue Size.</b>\r\nShaping \"pipe\" queue sizes cannot exceed 100 \"slots\" or one megabyte.\r\nFor more on queues, see the\r\n<a href=\"tutorial/docwrapper.php3?docname=advanced.html\">\r\nadvanced tutorial</a>.\r\n</ul>\r\n','link-shaping-limits',1,'2006-02-02 12:08:11','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (98,'ricci','2006-02-22 12:03:58','PlanetLab','Building binaries for PlanetLab','<p><code>PLAB-DEVBOX</code> is a disk image suitable for building binaries to\r\nrun on PlanetLab. It can also be used to help you <a href=\"kb-show.php3?xref_tag=plab-on-elab\">run your PlanetLab app inside\r\nEmulab</a></p>\r\n\r\n<p>\r\nAs you\'ve probably noticed, the PlanetLab nodes do not have a compiler installed\r\non them.  This is intentional - PlanetLab is intended for experimentation and\r\ndeployment, not development. You need to compile your binaries somewhere else,\r\nand copy the binaries to PlanetLab. You could try to build binaries on your\r\ndesktop Linux box, but unless you\'re running the same distribution as the\r\nPlanetLab nodes, you run the risk of shared library problems, and even\r\npotentially kernel ABI incompatabilities.\r\n</p>\r\n\r\n<p>\r\nYou have two choices for binary building. First, you can make your own\r\n\"DevBox\" using <a href=\"https://wiki.planet-lab.org/twiki/bin/view/Planetlab/DevBox\">PlanetLab\'s\r\ninstructions</a>. Or, if you don\'t have a spare box, or don\'t want to put in\r\nall that work, you can use Emulab\'s DevBox image. It\'s called\r\n<code>PLAB-DEVBOX</code>. It has all of the PlanetLab software, a kernel\r\nbased on the PlanetLab kernel, plus <code>gcc</code> and Java. It also has\r\nall of the standard Emulab test node configuration, so you\'ll get your account, \r\nhome directory, etc. \r\n</p>\r\n\r\n<p>\r\nIf you\'re comfortable with NS, you can just create an NS file yourself that\r\n<a href=\"kb-show.php3?idx=47\">requests</a> this image.\r\nOr, you can use our tool to\r\n<a href=\"nsgen.php3?template=plabdevbox\">automatically\r\ncreate</a> an NS file for you.\r\n</p>\r\n\r\n<p>\r\n<em>Disclaimer</em>: The PlanetLab <code>RESMAN</code> tools for changing\r\nresource limits currently do not work. We are working with the PlanetLab support staff to get them up and running.\r\n</p>\r\n\r\n<p>\r\nThis image is considered \"non-standard\", meaning that our level of support for\r\nit is lower than what we provide for the \"standard\" Emulab images. Still, if\r\nyou have any problems with it, let us know.\r\n</p>','PLAB-DEVBOX',0,'2006-02-24 16:09:50','ricci',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (99,'stack','2006-02-24 11:22:29','Using the Testbed','Isonet man page','<p>\r\nThe isonet wrapper script is part of the <i>libmultihome</i> package which\r\nis available in the following RPMs:\r\n</p>\r\n\r\n<ul>\r\n<li>RHL9 - /share/redhat/9.0/emulab-RPMS/libmultihome-0.1.1-1.i386.rpm\r\n<li>Fedora Core 2 (PlanetLab Images) - /share/fedora/FC2/emulab-RPMS/libmultihome-0.1.1-1.i386.rpm\r\n</ul>\r\n\r\n</PRE>\r\n<H2>SYNOPSIS</H2><PRE>\r\n       <B>isonet</B> [<B>-hVews</B>] [<B>-b</B> <I>ip</I>] <I>--</I> <I>utility</I>\r\n\r\n\r\n</PRE>\r\n<H2>DESCRIPTION</H2><PRE>\r\n       The <B>isonet</B> utility is used to isolate programs to the experimental net-\r\n       work  of  an  Emulab experiment.  Because Emulab nodes are connected to\r\n       multiple networks at the same time, the control network and one or more\r\n       experimental  networks, you may unwittingly have traffic traveling over\r\n       the wrong interface.  For example, instead of traveling through routers\r\n       and shaped links on the experimental network, packets may take the sin-\r\n       gle hop from one node to  the  destination  over  the  control  network\r\n       interfaces.   To help address this situation, <B>isonet</B> uses the <B>libmulti-</B>\r\n       <B>home(7)</B> library to intercept many of the standard networking  calls  to\r\n       \"hide\"  IP addresses from the program.  The result is that any attempts\r\n       to communicate over hidden networks generates a message and  halts  the\r\n       program.   Hopefully,  this should aid you in identifying misconfigura-\r\n       tions or adapting your programs to work on multi-homed hosts.\r\n\r\n       In addition to checking for accidental connections being made over  the\r\n       control	network,  <B>isonet</B> can change the arguments and results for some\r\n       functions.  This functionality is particularly useful  for  third-party\r\n       programs  that do not deal well with mult-homed hosts.  For example, if\r\n       a program is hard coded to <B>bind(2)</B> to the INADDR_ANY address,  you  can\r\n       force  it  to  use  an experimental address through the <B>-b</B> option.  The\r\n       library also changes the result of <B>gethostname(3)</B> to return the	node\'s\r\n       experimental  name  (e.g.  node0),  instead of the fully qualified name\r\n       (e.g. node0.foo.bar.emulab.net), which resolves to the control  network\r\n       address.\r\n\r\n       Available options:\r\n\r\n\r\n       <B>-h</B>     Print out a usage message.\r\n\r\n       <B>-V</B>     Print out version information and exit.\r\n\r\n       <B>-b</B> <I>ip</I>  Force  any  <B>bind(</B>INADDR_ANY<B>)</B>  calls  to  bind  to the given IPv4\r\n	      address instead.\r\n\r\n       <B>-e</B>     Log a message and return an error to the	program  (through  the\r\n	      function that was called), instead of stopping the program imme-\r\n	      diately.\r\n\r\n       <B>-w</B>     Log a message instead of stopping the program.\r\n\r\n       <B>-s</B>     Start a shell that has the  environment  variable  configuration\r\n	      needed to isolate any executed commands.\r\n\r\n\r\n</PRE>\r\n<H2>RETURN VALUES</H2><PRE>\r\n       The child\'s exit code.\r\n	      If  the child did not attempt to make an illegal connection, its\r\n              exit code will be returned.\r\n\r\n       <b>EX_SOFTWARE</b> (70)\r\n              There was an internal  software  error  in  the  libmultihome(7)\r\n              library.\r\n\r\n       <b>EX_NOPERM</b> (77)\r\n              The child tried to make an illegal connection.\r\n\r\n       <b>EX_CONFIG</b> (78)\r\n              The <b>isonet</b> script created an invalid configuration for the <b>lib-\r\n              multihome(7)</b> library.  Should not happen  in  normal  operation,\r\n              send a bug report if you encounter it though.\r\n\r\n\r\n</PRE>\r\n<H2>EXAMPLES</H2><PRE>\r\n       To isolate a <B>ttcp</B> sender and receiver:\r\n\r\n	      [vic@mxc1 ~] isonet -- ttcp -r -s\r\n\r\n	      [vic@mxc2 ~] isonet -- ttcp -t -s mxc2\r\n\r\n       An illegal connection with a <B>ttcp</B> sender and receiver:\r\n\r\n	      [vic@mxc1 ~] isonet -- ttcp -r -s\r\n	      (5970)isonet|Accepted connection from 155.98.36.139 to hidden IP\r\n	      (155.98.36.131).\r\n	      (5970)isonet|panic with exit code 77.\r\n\r\n	      [vic@mxc2 ~] isonet -- ttcp -t -s mxc2.foo.bar.emulab.net\r\n	      (6837)isonet|Connection through  hidden  IP  (155.98.36.139)  to\r\n	      155.98.36.131.\r\n	      (6837)isonet|panic with exit code 77.\r\n\r\n       To explicitly bind to an experimental interface:\r\n\r\n	      [vic@mxc1 ~] isonet -b 10.1.1.3 -- ttcp -r -s\r\n\r\n\r\n</PRE>\r\n<H2>BUGS</H2><PRE>\r\n       This  utility  will  not work with setuid or statically linked binaries\r\n       because it uses an LD_PRELOAD library, <B>libmultihome</B>,  to  detect  prob-\r\n       lems.\r\n\r\n\r\n</PRE>\r\n<H2>NOTES</H2><PRE>\r\n       While  this utility can detect many problems it <I>does</I> <I>not</I> guarantee that\r\n       no experimental traffic is flowing over the control network.  The  only\r\n       way  to	be  sure  is  to  monitor traffic with <B>tcpdump(1)</B> or a similar \r\n       packet capture tool.\r\n\r\n\r\n</PRE>\r\n<H2>SEE ALSO</H2><PRE>\r\n       <B>libmultihome(7)</B>, <B>tcpdump(1)</B>, <B>bind(2)</B>, <B>gethostname(3)</B>, <B>getifaddrs(3)</B>\r\n\r\n\r\n</PRE>\r\n<H2>AUTHOR</H2><PRE>\r\n       The Emulab project at the University of Utah.\r\n\r\n\r\n</PRE>\r\n<H2>NOTES</H2><PRE>\r\n       Emulab can found on the web at <I>http://www.emulab.net</I>\r\n\r\n\r\n\r\nlibmultihome 0.1.0		    Feb 24, 2006\r\n<B>ISONET(1)</B>\r\n</PRE>\r\n','isonet',0,'2006-02-24 15:37:15','stack',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (100,'ricci','2006-02-24 15:28:55','PlanetLab','Moving back and forth between PlanetLab and Emulab','<p>\r\n<a href=\"http://www.planet-lab.org\">PlanetLab</a> gives you widely variable network and node conditions. This is its\r\nstrength - you\'re running on the real Internet.  Sometimes, though, you\'d rather\r\ndevelop, debug, or test under more controllable, repeatable conditions. Emulab\r\ncan help you out with this. This\r\ndocument will help you go back and forth between experimentation on Emulab and\r\nPlanetLab.\r\n</p>\r\n\r\n<p>\r\nWe have other, more comprehensive introductions to Emulab, but this one is\r\nspecifically targeted towards users familar with PlanetLab. Once you\'re done\r\nwith this one, you may want to <a href=\"doc.php3\">check them out</a>. We\r\nalso have a frontend to PlanetLab, which can help you create and manage slices.\r\nIt has a <a href=\"doc/docwrapper.php3?docname=plab.html\">separate document</a>.\r\n</p>\r\n\r\n<p>\r\nGetting an Emulab account is similar to getting a PlanetLab account - a PI from\r\nyour institution <a href=\"newproject.php3\">starts a project</a>, and then\r\nstudents, staff, etc. <a href=\"joinproject.php3\">join it</a>. The full process\r\nis documented <a href=\"docwrapper.php3?docname=auth.html\">here</a>.\r\n</p>\r\n\r\n<p>\r\nThe first difference to notice is the difference in experiment specification\r\nbetwen PlanetLab\r\nand Emulab.  An <em>Experiment</em> in Emulab is roughly equivalent to a\r\n<em>Slice</em> in PlanetLab. Whereas on PlanetLab, you pick from a list of\r\nnodes to instantiate your slice on, in Emulab, you supply a network topology\r\nwith information such as delay, bandwidth, and packet loss between the nodes.\r\nThis is done with a variant of the popular <code>ns</code> simulator language.\r\nEmulab then creates an emulation of that network for you, by picking nodes\r\nand links whithin our facility, and applying taffic shaping to get the\r\nnetwork characteristics you aksed for. This allows you control over your\r\nenvironment, and gives you very good repeatability.\r\n</p>\r\n\r\n<p>\r\nAnother difference is the way in which resources are allocated. In PlanetLab, the\r\nslivers in your slice are on shared machines. In Emulab, the nodes in your\r\nexperiment are not shared with anyone else - Emulab isolates experiments from\r\neach other so that your results will not be affected by any others that may\r\nbe running at the same time.  Thus, you are expected to only hold onto nodes\r\nwhile you are using them - if you go home for the night (and aren\'t running\r\nsome experiment overnight), you are expected to \"<a href=\"kb-show.php3?xref_tag=swapping\">swap out</a>\" your experiment so\r\nthat others can use the nodes. Emulab will, in fact, enforce this policy and\r\nswap you out automatically if it detects that your experiment has gone idle.\r\n</p>\r\n\r\n<p>\r\nSince you have exclusive access to the nodes in your experiment, you have\r\ncomplete root access. You\'re free to replace any disk contents you want,\r\netc. Emulab will clean off the disk for the next user once you\'re done\r\nwith it.  All users in a project (\"institution\" in PlanetLab) have their own\r\naccounts on the nodes, instead of the one-account-per slice model of PlanetLab.\r\nYou have an NFS home directory and project directory accessible on all of\r\nyour nodes. You can run several versions of Linux, FreeBSD, and Windows on the\r\nnodes in your experiment. If your goal is to build an application that can\r\nrun easily on both Emulab and PlanetLab, we suggest that you use our\r\n<a href=\"kb-show.php3?xref_tag=PLAB-DEVBOX\">PLAB-DEVBOX</a> disk image.\r\n</p>\r\n\r\n<p>\r\nPlanetLab gives you acess to real Internet path characteristics. Emulab, on\r\nthe other hand, creates the characteristics you\'d like to use in an Emulator.\r\nBasically, you tell us what packet loss, bandwidth, and delay you\'d like\r\nto see, and we create it artifically within our facility using traffic\r\nshaping. One way of creating Internet-like conditions in Emulab is to model\r\nthe InterNet as a fully-connected LAN. Unlike a reguar LAN, however, you\'ll\r\nbe able to set traffic shaping characteristics on every node, so that they\r\ncommunicate as if they were in different parts of the world rather than in the\r\nsame machine room. You can use the \r\n<a href=\"tutorial/docwrapper.php3?docname=nscommands.html#LOSS\">\r\n<code>tb-set-node-lan-*</code></a> commands to accomplish this.\r\n</p>\r\n\r\n<p>\r\nAnother important difference is the <a href=\"tutorial/docwrapper.php3?docname=tutorial.html#ControlNet\"><em>Control Net</a></em>, which exists on\r\nEmulab, but not on PlanetLab. The control net separates traffic that is\r\npart of your experiment and traffic that is for control. For example, when\r\nyou ssh into an Emulab node, you do so over the control network. Similarly,\r\nyour NFS home directory is mounted using the control network. The traffic\r\nshaping is done on the <em>Experimental Network</em>, and not on the control\r\nnetwork.\r\n</p>\r\n\r\n<p>\r\nThis means that you need to be aware of multi-homing issues. You\'ll need to\r\nmake sure that your application binds itself to the experimental net, not\r\nthe control net. To help you do this, we\'ve created a program called\r\n<a href=\"kb-show.php3?xref_tag=isonet\">isonet</a> which does this binding for you, without having to modify your\r\napplication.\r\n</p>','plab-on-elab',0,'2006-02-26 09:53:40','lepreau',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (101,'kwebb','2006-02-27 13:19:43','Troubleshooting','I am running into errors while working in my home and/or project directory (or subdirectories).  What\'s going on?','<p>\r\nYou may have been bitten by undesireable behavior present in the way FreeBSD handles NFS mount permissions updates.  Each time Emulab swaps an experiment in or out, it must modify the set of allowed mounts on the Emulab fileserver to match the permissions required by the current set of experiments.  This means adding mount permissions for nodes swapping in as part of an experiment, or removing permissions for nodes belonging to an experiment that is swapping out.\r\n</p>\r\n<p>\r\nUnfortunately, the way mountd and the FreeBSD kernel currently perform this update involves momentarily clearing the entire mount permissions table, followed by installing the new, updated one.  Therefore, if you are ineracting with files that happen to be located on an NFS mounted filesystem exported from the Emulab fileserver (e.g., files on /users or /proj), the lapse in permissions will result in errors such as \"permission denied\", \"stale NFS handle\", and \"No such file or directory.\"\r\n</p>\r\n<p>\r\nFixing the bad NFS mount permissions update behvior is a non-trivial task that we have not had the time to undertake.  We hope to do this at some point, but when this will happen is indeterminate.  In the meantime, there are a few things you can do to minimize the impact of this problem.  Most importantly, don\'t make a habit of running processes (especially long-running ones) that use files on NFS mounted filesystems.  The best approach is to make a local copy of the things you need and operate on that local copy.  This also helps cut down on the fileserver load.  There are several tools to help make this easier:\r\n</p>\r\n<p>\r\n<list>\r\n<li> Use the Emulab <a href=\"kb-show?xref_tag=load-software\">tarball feature</a> to lay down your files.\r\n<li> Pull back changes with the <a href=\"tutorial/docwrapper.php3?docname=loghole.html\">loghole</a> facility.\r\n<li> Use rsync to pull/push over your files.\r\n</list>\r\n</p>\r\n<p>\r\nMost Emulab nodes have an empty fourth disk partition you can setup and use if you need more space to work in.  Follow <a href=\"kb-show?xref_tag=local-space\">this link</a> for more information.\r\n</p>\r\n','bad-mountd',1,'2006-02-27 14:08:59','kwebb',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (102,'stoller','2006-03-17 12:04:00','Using the Testbed','Resources Temporary Unavailable','An error of this type is likely because there are insufficient free nodes\r\nof the right type, although for a large experiment it can result\r\nfrom insufficient inter-switch bandwidth.\r\nYou can get a <a href=https://www.emulab.net/nodecontrol_list.php3>\r\nsummary</a> of free nodes by visiting this link:\r\n<a href=\"https://www.emulab.net/nodecontrol_list.php3\">\r\n   https://www.emulab.net/nodecontrol_list.php3</a>.\r\n<br>\r\n<br>\r\nFor help with\r\nspecific mapping errors, please see\r\n<a href=\"kb-show.php3?xref_tag=assignfail\">this knowledge base entry.</a>\r\n<br>\r\n<br>\r\nNote that <a href =\r\n\"http://www.emulab.net/docwrapper.php3?docname=hardware.html#tbpc3000w\">pc3000w</a>\'s\r\nare primarily wireless nodes and have various constraints so they rarely satisfy \r\nthe needs of wired experiments.\r\n<br><br>\r\nPlease do not try again until you see enough free nodes of the right types,\r\nand don\'t blindly re-submit over and over. Real people have to read the resulting\r\nerror mail!  Or, you can use the <a href=http://www.emulab.net/tutorial/docwrapper.php3?docname=tutorial.html#BatchMode>batch system</a> that queues your experiment and automatically retries every 10 minutes\r\nuntil it succeeds.\r\n','no_resources',0,'2006-05-25 09:31:28','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (103,'mike','2006-03-19 16:38:36','Operations and Policy','What does testbed-ops message \'WARNING: power controller(s) failed with exit value N\' mean?','If you get an e-mail message with the subject:\r\n<p>\r\nEMULAB.NET: WARNING: power controller(s) failed with exit value <em>N</em>\r\n<p>\r\nthen the \"powermon\" power controller monitoring program was unable to contact one of the serial line controlled power controllers.  This typically means that the serial line capture process on one or more of the controllers has died or gotten hung.  Occasionally, this message is generated as the result of a transient error (e.g., someone else is accessing a particular power controller when the monitor tries to do so).  To determine that, first do:\r\n<p>\r\nwap power status <em>name</em>\r\n<p>\r\nIf that command fails or hangs, the problem still exists.\r\nIn this case, you will need to login to the appropriate serial line controlling machine and start or restart the capture process.\r\n<p>\r\nYou can look in the database \"tiplines\" table to determine what machine is hosting a particular serial line (if you have multiple serial line hosting machines).  Then login and look in /usr/site/etc/capture.rc (Utah) or /usr/local/etc/rc.d/capture.sh (elsewhere) to see the necessary command line for starting the capture process.\r\n',NULL,0,'2006-03-19 16:43:37','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (104,'mike','2006-03-21 09:38:33','Operations and Policy','How do I swapout a firewalled experiment that is paniced or failed to swapout?','If you are not a testbed administrator, contact testbed-ops.  This entry\r\nis for testbed admins.\r\n<p>\r\nOften times a transient problem will cause the swapout of a firewall experiment\r\nto fail and it will be up to you, Testbed-Ops Man, to tear it down.\r\nWe tend to be very cautious and leave such failed experiment swapped in,\r\nbut disabled in a couple of ways.  These ways are generally enumerated in\r\nthe failure mail:\r\n<code><pre>\r\n\r\n    Swapout of firewalled experiment &lt;PID&gt;/&lt;EID&gt; by &lt;UID&gt; failed!\r\n    Admin intervention required:\r\n\r\n    Failed to &lt;SOMETHING&gt; on &lt;NODES&gt;.\r\n\r\n    Current state of &lt;NODES&gt;:\r\n\r\n    Firewall is NOT in place\r\n    All nodes set to admin mode\r\n    All nodes are powered off\r\n    MAKE SURE THESE NODES DO NOT BOOT FROM DISK!\r\n    Firewall cnet interface &lt;NODE&gt;:&lt;PORT&gt; disabled\r\n\r\n</pre></code>\r\nThe ones that matter are whether the nodes have been powered off and whether\r\nthe firewall control net interface has been disabled.\r\n\r\nTo successfully swap the experiment out, you may need to do a variety of\r\nthings.\r\n<ul>\r\n<li><b>Mark experiment as no longer \"swapping\".</b>\r\nOccasionally, a failure will result in an experiment being left as \"paniced\"\r\nbut in the swapping state.  In this state there will be no menu item for\r\nswapping the experiment out.  So you first need to go into the DB and fix up\r\nthe state:\r\n<code><pre>\r\n        update experiments set state=\'active\' where pid=\'&lt;PID&gt;\' and eid=\'&lt;EID&gt;\';\r\n</pre></code>\r\n<p>\r\n<li><b>Reenable the firewall node control net interface.</b>\r\nIf the failure message says \"Firewall cnet interface ... disabled\", then\r\nyou will need to reenable the interface before re-trying the swapout.  If you\r\ndo not, cleanup of the firewall node can never succeed since it will never\r\nPXE boot.  To reenable, use snmpit:\r\n<code><pre>\r\n        wap snmpit -e &lt;NODE&gt;:&lt;PORT&gt;\r\n</pre></code>\r\nwhere NODE and PORT are as given in the error message; e.g., \"pc1:4\".\r\n<p>\r\n<li><b>Power on the affected nodes.</b>\r\nIn most cases, you won\'t need to do this, since most experiments will go\r\nthrough the \"zap boot blocks phase\" whose first step is to power off the\r\nnodes anyway.  However, if the experiment was at security level 1 (\"Blue\"),\r\nthen nodes will not go through the power down step, and the regular node\r\nreload step will fail as the nodes cannot be power cycled (power cycling\r\nwill not turn on a powered off node).  So in this case, you will need to\r\nexplicitly power on the machines with the power command:\r\n<code><pre>\r\n        wap power on &lt;NODES&gt;\r\n</pre></code>\r\nwhere NODES is the list given in the failure message.  Or if that list is\r\ntoo long to cut/paste, try:\r\n<code><pre>\r\n        wap power on `wap node_list -e &lt;PID&gt;,&lt;EID&gt;`\r\n</pre></code>\r\n</ul>\r\nNow you should be able to retry the swapout.\r\nIf the swapout continues to fail due to either trying to boot into the admin\r\nMFS or when trying to run the boot block zapper, it is possible to avoid that\r\nstep.  If you do this, be aware that\r\n<b>you are circumventing part of our security measures!</b>\r\nSo don\'t do this unless you are confident that the nodes either are not\r\ncontaminated or that you will personally assure that they will not boot from\r\nthe disk.  At any rate, you can avoid the disk zap step by doing the following:\r\n<ul>\r\n<li><b>Set the machines to boot into the admin MFS.</b>\r\nWe don\'t actually force them into the MFS right now.  This step is just to\r\nensure that once we power on the nodes in the following step, they\r\nwill not automatically come up from the disk.\r\n<code><pre>\r\n        wap node_admin -n on &lt;NODES&gt;\r\n</pre></code>\r\n<p>\r\n<li><b>Clear the magic DB state.</b>\r\nMark the experiment as not paniced and at the lowest, firewall-enabled\r\nsecurity level:\r\n<code><pre>\r\n        update experiments set paniced=0,security_level=1 where pid=\'&lt;PID&gt;\' and eid=\'&lt;EID&gt;\';\r\n</pre></code>\r\n<p>\r\n<li><b>Perform standard cleanups.</b>\r\nReenable the firewall control net interface and power on the nodes:\r\n<code><pre>\r\n        wap snmpit -e &lt;NODE&gt;:&lt;PORT&gt;\r\n        wap power on &lt;NODES&gt;\r\n</pre></code>\r\n</ul>\r\nAnd now you can redo the swapout.  If things are still screwed up, talk to\r\nMike.\r\n',NULL,0,'2006-03-21 10:05:36','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (105,'mike','2006-04-11 11:46:03','Operations and Policy','How can I control what boots on a node?','<b>NOTE:</b>\r\nThis entry is intended for administrators who want to control what PXE\r\nboots on a node as well as what MFSes are used.\r\n<p>\r\nIn Emulab, the nodes are hardwired to attempt a PXE boot only from the\r\ncontrol network interface.  So all boot redirection must be initiated\r\non the control net.\r\n<p>\r\nThere are two fields in the database which can be used to control what\r\nboot loader is downloaded by the PXE boot ROM.  If not NULL,\r\n<tt>node_types.pxe_boot_path</tt> contains a string that will be put\r\nin <tt>/usr/local/etc/dhcpd.conf</tt> as a \"filename\" option for all\r\nnodes of the indicated type.  This allows you to use a different PXE\r\nboot loader for a group of machines; e.g., a type of PC that does not\r\nhave serial port ports could use a VGA-only pxeboot program.\r\n<tt>nodes.pxe_boot_path</tt> allows for changing the PXE boot path\r\non a node-by-node basis.  If is different than the <tt>node_types</tt>\r\nfield in that it is cleared when a node is freed with <tt>nfree</tt>.\r\nThus it is intended to be used within an experiment, <em>not</em> as \r\na general mechanism.  The specific reason for this option was to allow\r\n\"PlanetLab in Emulab\" experiments where the inner PlanetLab nodes need\r\nto boot up in a Linux MFS for which we use\r\n<a href=\"http://syslinux.zytor.com/pxe.php\">PXELINUX</a>.\r\nNote that after changing either of these fields you will need to recreate the DHCP config file and restart the daemon.  You can do this with:\r\n<p>\r\n/usr/testbed/sbin/dhcpd_makeconf -ir\r\n<p>\r\nWhen <tt>nfree</tt> clears <tt>nodes.pxe_boot_path</tt> for a node, it\r\nwill automatically do this.  You only need to do it when setting the fields.\r\n<p>\r\nThe <tt>node_types</tt> table also contains two fields to allow for\r\nspecifying different\r\n\"admin\" (<tt>adminmfs_osid</tt>) and\r\n\"disk loader\" (<tt>diskloadmfs_osid</tt>) MFSes.  These are the\r\nmemory-based filesystem versions of FreeBSD that we use for creating\r\nand loading disk images.  Again, using the VGA-only example, we would\r\ndefine new OSIDs <tt>FRISBEE-MFS-VGA</tt> and <tt>FREEBSD-MFS-VGA</tt>\r\nidentical to the\r\nstandard versions except for the path column which would point to\r\nalternate /tftpboot directories.\r\n',NULL,0,'2006-04-11 11:50:31','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (106,'stoller','2006-05-08 09:55:41','Using the Testbed','All things Java','We get many questions about Java on Emulab. The bulk of the questions\r\nfall into these categories:\r\n\r\n<ul>\r\n<li> Is Java installed?\r\n<br>\r\n<blockquote>\r\nNo, Java is not installed. It takes up a lot of space on the disk\r\nimages, and since only a small subset of researchers require Java, we\r\nlet those researchers deal with it themselves. Besides, everyone has\r\ntheir own idea of what version is best, so we do not try to guess.\r\n</blockquote>\r\n\r\n<li> What version of Java should I install?\r\n<br>\r\n<blockquote>\r\nSee answer to previous question! \r\n</blockquote>\r\n\r\n<li> How do I install Java?\r\n<br>\r\n<blockquote>\r\nGood Question! Seeing as we are operating system and network weenies,\r\nwe do not know much about installing the many different versions of\r\njava on all of the different operating systems we support. You are\r\nbasically on your own, but <a href=www.google.com>Google</a> is\r\ncertainly your friend and best source of information. Be sure to ask\r\nother members of your project for help as well, since other people\r\nhave probably walked this path before you. \r\n</blockquote>\r\n\r\n<li> My Java program does not work correctly. Can you help me?\r\n<br>\r\n<blockquote>\r\nThis should come as no surprise given the previous answers ... but you\r\nare absolutely <b>on your own</b> when it comes to debugging your Java\r\napplications. The best response you are likely to get from us is \"have\r\nyour rebooted your machine and power cycled your cable modem\"\r\n</blockquote>\r\n</ul>\r\n\r\n',NULL,0,'2006-05-08 10:19:17','stoller',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (107,'mike','2006-05-09 09:52:18','Software Setup','What FreeBSD kernels are available and what features do they include?','<h4>Available Kernels</h4>\r\nThe FBSD-STD (aka FBSD410-STD) image has way too many special purpose kernels.\r\nCurrently there is:\r\n<ul>\r\n<li><b>/kernel.100HZ</b>.\r\nThe default kernel, built to run with a 100HZ clock (100 clock interrupts per\r\nsecond).  It is built from the sources in\r\n<code>/share/freebsd/4.10/src/sys</code>\r\nwhich is the standard FreeBSD 4.10 source with some local customizations.\r\nIt is based on the GENERIC configuration, with many device drivers removed\r\nand the feature list modified slightly.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED</code>.\r\nThe significant features are: it is uniprocessor-only, has IPv6 and IPSEC\r\nsupport, has a larger than normal number of \"mbufs\" (network buffers),\r\nand includes support for the Linux ext2fs.\r\n<p>\r\nIt also includes a couple of local features for better integration in the\r\nEmulab environment.  <code>ICMP_PINGOFDEATH</code> is a feature to allow\r\nrebooting a machine with a special ICMP packet.  <code>MOUNTD_SUX_HACK</code>\r\nis a \"feature\" intended to avoid a problem with the BSD NFS server which will\r\nbriefly invalidate all exported filesystems when changing the export list.\r\n<p>\r\nThis kernel should be sufficient for most uses.\r\n<p>\r\n<li><b>/kernel.1000HZ</b> also known as <b>/kernel.linkdelay</b>.\r\nThe kernel used when you specify\r\n<a href=\"/doc/docwrapper.php3?docname=linkdelays.html\">end-node shaping</a>.\r\nIt runs at a higher clock rate (1000HZ) to improve the accuracy of shaping.\r\nIn addition to a higher clock rate, it also includes IPFW, dummynet, and\r\ndivert socket support, necessary for traffic shaping.  It also includes\r\nstill more mbufs.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-LINKDELAY</code>.\r\n<p>\r\nYou might want to use this kernel if you need firewall or dummynet support.\r\nSee <a href=\"#AlternateKernel\">below</a> for directions on how to setup\r\nyour experiment to use this kernel.\r\n<p>\r\n<li><b>/kernel.10000HZ</b> also known as <b>/kernel.delay</b>.\r\nThis kernel is used on the so-called \"delay nodes\", traffic shaping nodes.\r\nSince the nodes are dedicated to moving packets between interfaces, it\r\nis customized for that purpose: a high (10,000HZ) clock rate, use of\r\npolling (rather than interrupt-driven) device drivers, and still more mbufs.\r\nIt includes the layer2 bridge code, in addition to the other options \r\nnecessary for traffic shaping (firewall, dummynet, ipdivert).\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-DELAY</code>.\r\n<p>\r\nYou could use this kernel if you need a high clock rate, bridging, or\r\npolling device drivers.  See <a href=\"#AlternateKernel\">below</a> for\r\ncustomizing and using this kernel.\r\n<p>\r\n<li><b>/kernel.jail</b>.\r\nThis is a highly specialized and non-standard kernel intended for use\r\nin our FreeBSD\r\n<a href=\"tutorial/docwrapper.php3?docname=vnodes.html\">virtual node</a>\r\nenvironment.  It has support for multiple routing tables in addition to\r\nthe other standard and linkdelay features.\r\nThe exact configuration is in\r\n<code>/share/freebsd/4.10/src/sys/i386/conf/TESTBED-JAIL</code>.\r\n<p>\r\nYou probably do not want to use this kernel for anything as the networking\r\ncode is sufficiently different and we have not characterized its behavior\r\nversus a standard kernel.\r\n</ul>\r\n<a NAME=\"AlternateKernel\"></a>\r\n<h4>Using an Alternate Kernel</h4>\r\nIn order to use the above kernels as the default kernel in an experiment,\r\nyou have to do a couple of things.  First, you can only do this to a swapped\r\nin experiment.  If you want to be able to specify using the kernel in future\r\nexperiments, you will have to make the changes below, and then save a\r\n<a href=\"tutorial/tutorial.php3#CustomOS\">custom image</a>.\r\n<p>\r\nSecond, you need to fool the Emulab scripts into thinking this is the\r\ncorrect kernel to be running.  If you want the delay kernel to be the\r\nstandard you would need to:\r\n<pre><code>\r\n        sudo cp -p /kernel.10000HZ /kernel.100HZ\r\n        sudo cp -p /kenrel.10000HZ /kernel\r\n</code></pre>\r\nas the Emulab scripts will double check that \"/kernel.100HZ\" is the same\r\nas \"/kernel\" and copy it and reboot if not.  If you specified linkdelays\r\nin your NS file, then you will need to copy it to /kernel.1000HZ instead\r\nas that is the kernel that the scripts will attempt to make standard.\r\n<p>\r\nIf you want to modify the clock rate of one of the standard kernels,\r\nyou can modify <code>/boot/loader.conf</code> and add, for example:\r\n<pre><code>\r\n        kern.hz=1000    # for 1000HZ (1ms)\r\n</code></pre>\r\nGoing above 10,000 or below 100 is not advised.\r\n\r\n','freebsd-kernels',1,'2006-05-09 09:59:52','mike',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (108,'kevina','2006-05-24 16:49:49','PlanetLab','Setting up a private PlanetLab inside Emulab','<p>\r\nIt is now possible to set up a private PlanetLab inside Emulab.\r\n</p>\r\n\r\n<p>\r\nThe current setup is based on the old pl_box package.  I hacked the\r\nPlanetLab scripts to a rather large extent.  Thus, there is little\r\nchance of this ever being upgraded to a never version of the\r\nPlanetLab source.  HOWEVER, I will be switching to MyPLC which will\r\neventually be upgradable.\r\n</p>\r\n\r\n<p>\r\nA private PlanetLab inside Emulab (plab-in-emulab) experiment is the\r\nsame as a normal experiment except for a few special things.\r\n</p>\r\n\r\n<p>\r\nIn your NS file you declare one node to act as PLC using the commands:\r\n<blockquote><code>\r\n  tb-set-node-os $plc PLAB-PLBOX<br/>\r\n  tb-set-node-plab-role $plc plc\r\n</code></blockquote>\r\nSince all traffic between PLC and the PlanetLab nodes is over the\r\ncontrol net, there is no need to connect a private network.\r\n</p>\r\n\r\nYou then also need to declare which nodes will act as PlanetLab nodes\r\nusing the command.\r\n<blockquote><code>\r\n  tb-set-node-plab-role $plab node\r\n</code></blockquote>\r\n\r\n<p>You may connect the PlanetLab nodes via a private LAN as there is\r\nbasic support for a private network.  In particular there is support\r\nfor bringing up <em>one</em> private interface on each node, but there is no\r\nsupport for adding routes.  This effectively means that all the\r\nPlanetLab nodes need to be on the same private LAN.  Neither of these\r\nconstraints is checked right now, so be sure they are met.\r\n</p>\r\n\r\n<p>\r\nYou should also turn off Linktest since it will fail anyway.\r\n</p>\r\n\r\n<p>\r\nYou can use our <a href=\"/nsgen.php3?template=plinabox\">tempate</a> to\r\ncreate an NS file, or you can use the one below:\r\n</p>\r\n\r\n<blockquote><pre>\r\nset ns [new Simulator]\r\nsource tb_compat.tcl\r\n\r\nset num_pcs 2\r\n\r\nset plc [$ns node]\r\ntb-set-node-os $plc PLAB-PLBOX\r\ntb-set-node-plab-role $plc plc\r\ntb-set-hardware $plc pc3000\r\n\r\nset lan_string \"\"\r\n\r\nfor {set i 1} {$i <= $num_pcs} {incr i} {\r\n  set n($i) [$ns node]\r\n  tb-set-node-plab-role $n($i) node\r\n  append lan_string \"$n($i) \"\r\n}\r\n\r\nset lan [$ns make-lan $lan_string 100Mb 0ms]\r\n\r\n$ns rtproto Static\r\n$ns run\r\n</pre></blockquote>\r\n\r\n<p>\r\nNote that the experiment will take up to around 30 minutes to swap in\r\nand then another 5-10 minutes after that before all the PlanetLab nodes\r\nare ready.  The PLAB-PLBOX image is large and takes around 15-20 minutes\r\nto load.  PLC then takes between 5-15 minutes to setup during the\r\nfirst boot, depending on the number of nodes in the experiment.\r\nFinally the PlanetLab nodes take around 5-10 minutes to up after PLC.\r\n</p>\r\n\r\n<p>\r\nThe PLC Setup output is currently only to the console.  A failed setup\r\nwill not stop a swapin.  Once the PLC Setup completed successfully the\r\nfile <code>/planetlab/emulab/setup_passed</code>\r\nwill be written.\r\n</p>\r\n\r\n<p>\r\nThe output of the individual PlanetLab node setup is also to the\r\nconsole.  The creator of the experiment will get an email for each\r\nsuccessful install.  A setup log for each node is also uploaded to\r\n<blockquote><code>  http://&lt;plc&gt;/alpina-logs/nodes/</code></blockquote>\r\nwhere &lt;plc&gt; is the host name of the PLC node for your experiment\r\n</p>\r\n\r\n<p>\r\nOnce setup, all members of the project will get an account on the\r\nprivate PLC.  If you normally have root access on the nodes you will\r\nget an Admin account, otherwise it will just be a user.  In addition\r\nthe creator of the experiment (and the person who swapped it in) will\r\nalso get a \"PI\" and \"Tech\" account.  \"PI\" and \"Tech\" are the one who\r\nget all the PlanetLab related email\'s.\r\n</p>\r\n\r\n<p>\r\nYour username for PLC is your official Emulab email.  Thus you should\r\nlogin to the web interface using this email and your normal Emulab\r\npassword.  Since PlanetLab only supports uploading one public ssh key,\r\nI chose to use the passwordless version two public key file,\r\n<code>~/.ssh/id_dsa</code>.  You are free the change it to something else.\r\n</p>\r\n\r\n<p>\r\nAll users who normally have root access on the nodes will also have\r\nroot access on the PlanetLab nodes.  You need to login as \"root\" using\r\none of your ssh keys found in <code>~/.ssh/authorized_keys</code>. (Unlike with\r\nthe slices all your public keys are used)\r\n</p>\r\n\r\n<p>\r\nFinally, note that modifying a plab-in-emulab experment is currently not\r\nsupported.\r\n</p>\r\n','plinabox',0,'2006-05-25 13:21:46','ricci',0,NULL,NULL);
REPLACE INTO knowledge_base_entries (idx, creator_uid, date_created, section, title, body, xref_tag, faq_entry, date_modified, modifier_uid, archived, date_archived, archiver_uid) VALUES (112,'stoller','2006-05-31 07:51:02','Experiment Templates','Template Parameters','Emulab has added an NS extension specifically for use with Experiment\r\nTemplates:\r\n\r\n<blockquote>\r\n<pre>\r\n$ns define-template-parameter <i>name</i> <i>value</i>\r\n</pre>\r\n</blockquote>\r\n\r\n<br>\r\nA template <em>parameter</em> is a user defined variable that can be\r\noverridden when the template is later instantiated. Template parameters\r\nare bound when the NS file is parsed, and are made part of the\r\nenvironment on your experimental nodes via the\r\n<a href=\'tutorial/docwrapper.php3?docname=eventsystem.html#PROGRAM\'>\r\nprogram agent</a>. For example:\r\n\r\n<br><br>\r\n\r\n<blockquote>\r\n<code><pre>\r\n$ns define-template-parameter NodeCount 3\r\n$ns define-template-parameter OS RHL90-STD\r\n\r\nset maxnodes $NodeCount\r\n\r\nfor {set i 1} {$i <= $maxnodes} {incr i} {\r\n    set node($i) [$ns node]\r\n    tb-set-node-os $node($i) $OS\r\n}\r\n</pre></code>\r\n</blockquote>\r\n\r\nThe initial parse of your NS file will bind the template parameters to\r\ntheir default value. Later, when you instantiate your template, you\r\nwill be given an opportunity to (optionally) override the default\r\nvalues with new values. This allows you to more easily set up a series\r\nof experiments with varying arguments.\r\n\r\n\r\n\r\n\r\n','template_parameters',0,'2006-05-31 07:54:42','stoller',0,NULL,NULL);

