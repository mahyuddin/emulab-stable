#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2003 University of Utah and the Flux Group.
# All rights reserved.
#

SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= ../..
SUBDIR		= os/frisbee.redux

DISTFILES	= TODO client.c decls.h event.c event.h log.c log.h \
		  network.c queue.h server.c trace.c trace.h utils.c utils.h
EXPANDCOPYRIGHT	= /usr/site/lib/copyright/expand-copyr

include $(OBJDIR)/Makeconf

all:	frisbee frisbeed

include $(TESTBED_SRCDIR)/GNUmakerules

FRISBEEDIR	= $(OBJDIR)/os/imagezip

SHAREDOBJS	= log.o network.o trace.o utils.o
PTHREADCFLAGS	= -D_THREAD_SAFE \
		  -I/usr/local/include/pthread/linuxthreads
PTHREADLIBS	= -L/usr/local/lib -llthread -llgcc_r

CLIENTFLAGS	= $(CFLAGS)
CLIENTLIBS	= -lz $(PTHREADLIBS)
CLIENTOBJS	= client.o frisbee.o $(SHAREDOBJS)

SERVERFLAGS	= $(CFLAGS)
SERVERLIBS	= $(PTHREADLIBS)
SERVEROBJS	= server.o $(SHAREDOBJS)

CFLAGS		= -O2 -g -Wall -static $(PTHREADCFLAGS) -DSTATS
LDFLAGS		= -static

#
# Define this if your implementation of cond_vars works well
# ("works well" in this case means doesn't hang forever or burn up
# the CPU while in condwait).
#
#CFLAGS		+= -DCONDVARS_WORK

# Define this to a non-zero value to enable recording of trace data
#CFLAGS		+= -DNEVENTS=25000

# Turn on client event handling
#CFLAGS		+= -DDOEVENTS
#CLIENTOBJS	+= event.o $(OBJDIR)/event/lib/event.o $(OBJDIR)/event/lib/util.o
#CLIENTLIBS	+= `elvin-config --libs vin4c`
#EVENTFLAGS	= $(CFLAGS) `elvin-config --cflags vin4c` -I$(TESTBED_SRCDIR)

frisbee: $(CLIENTOBJS)
	$(CC) $(LDFLAGS) $(CLIENTFLAGS) $(CLIENTOBJS) $(CLIENTLIBS) -o frisbee
	cp frisbee frisbee.debug
	strip frisbee

frisbeed: $(SERVEROBJS)
	$(CC) $(LDFLAGS) $(SERVERFLAGS) $(SERVEROBJS) $(SERVERLIBS) -o frisbeed
	cp frisbeed frisbeed.debug
	strip frisbeed


log.o:		$(SRCDIR)/log.c decls.h log.h
	$(CC) $(CFLAGS) -DLOG_TESTBED=$(LOG_TESTBED) -c $(SRCDIR)/log.c

event.o:	$(SRCDIR)/event.c decls.h log.h event.h
	$(CC) $(EVENTFLAGS) -c $(SRCDIR)/event.c

$(FRISBEEDIR)/imageunzip.c: $(FRISBEEDIR)/imagehdr.h $(FRISBEEDIR)/queue.h

frisbee.o:	$(FRISBEEDIR)/imageunzip.c
	$(CC) -c $(CFLAGS) -DFRISBEE -I$(FRISBEEDIR) -o frisbee.o $<

client.o:	decls.h log.h utils.h trace.h
server.o:	decls.h log.h utils.h trace.h
log.o:		decls.h log.h
network.o:	decls.h utils.h
trace.o:	decls.h trace.h log.h

install:	$(INSTALL_SBINDIR)/frisbeed

clean:
	/bin/rm -f *.o *.a frisbee frisbeed frisbee.debug frisbeed.debug
	/bin/rm -f frisbee.tar frisbee.tar.gz
	/bin/rm -rf frisbee-dist

frisbee.tar.gz: frisbee.tar
	gzip -c frisbee.tar > frisbee.tar.gz

frisbee.tar: frisbee-dist
	tar cf frisbee.tar frisbee-dist
	rm -rf frisbee-dist

frisbee-dist: Makefile.sa Makefile-linux.sa README.sa $(DISTFILES)
	rm -rf frisbee-dist
	mkdir frisbee-dist frisbee-dist/frisbee frisbee-dist/doc
	(cd $(SRCDIR); \
		tar cf - Makefile.sa Makefile-linux.sa README.sa $(DISTFILES))|\
			(cd frisbee-dist/frisbee; tar xf -)
	mv frisbee-dist/frisbee/Makefile.sa frisbee-dist/frisbee/Makefile
	mv frisbee-dist/frisbee/Makefile-linux.sa frisbee-dist/frisbee/Makefile-linux
	mv frisbee-dist/frisbee/README.sa frisbee-dist/README
	cp $(TESTBED_SRCDIR)/COPYING frisbee-dist
	cp $(TESTBED_SRCDIR)/doc/papers/frisbee-usenix03.pdf frisbee-dist/doc
	(cd frisbee-dist/frisbee; \
		$(EXPANDCOPYRIGHT) Makefile Makefile-linux $(DISTFILES))
	(cd ../imagezip; $(MAKE) imagezip.tar)
	(cd frisbee-dist; tar xf -; mv imagezip-dist imagezip) \
		< ../imagezip/imagezip.tar
