[This file is not kept entirely up to date.]

*** Major:

* Dynamic reconfiguration of experiments (add and subtract nodes).
   - Special case for flat topologies. LAN Easy.
   - Adding to complicated topologies.
   - Reboot or not reboot everything. In flat case, not rebooting would be
     easy, although I contend its essentially the same.

* Break up emulab into smaller components (for example, split of
  account and group stuff so its independent.

* Fix the entire nalloc/nfree/reloading mechansism and the state
  control stuff for it that is scattered around nfree, tmcd, stated,
  and the reload daemon needs a complete overhaul. Many races, many
  oppotunities to fail. Mac is thinking about this.

* Event system startup cost. Abhijeet reported that after ISUP, it
  could take a very long time for events to start. This is because it
  takes a really long time to process the event stream in event-sched
  using Ian's original binary tree stuff. I hacked in a fix, but need
  to look at that algorithm and perhaps change. Need to decide if
  insertion needs to be optimized, over deletion.

* Specify maximum running time of a batch experiment.
  Ron Oldfield requested this, for the case when batches fail, they
  get stuck in the system. An alternative is an NS "at" event to stop
  the simulation (which we would have to convert into something, not
  sure what).

  Related; ability to specify swap/terminate times for regular
  experiments so that users can avoid getting in trouble for idle
  experiments. 

* Continuing work on jails for both local and remote nodes.

* Need to default the OS id version (4.3, 7.1) if we are going to
  delay reloading, or else people can get old versions of the OS
  when in the same project (last_reservation). This might be moot
  depending on what we do wrt reloading when experiments are done.

* tmcd does not appear to be scaling with the advent of ssl. Rob
  suggested a combined tmcd command to return the entire node
  configuration in one message. We would still keep the individual
  calls, but provide a way to get all the data at once and save on a
  dozen connections per boot.

  LBS: local nodes using tmcc-nossl since we get security via the
  switch. Wideare nodes *do* use ssl.

* Complete event system overhaul (per-exp elvind, secure elvind,
  per-node elvind, distribution of event lists to nodes).
  Cannot multicast events to multiple agents at a time.

* Get the program agent working on ron nodes. This is related (and
  dependent) on securing the event system since we do not want anyone
  to be able to send ab event to the program agent from some random node!

* Deal with two ends of a remote link being allocated to the same ron
  node! Need to catch the situation for now (and error), but
  eventually make sure it does not happen since setting up a tunnel
  from a node to itself sound rather silly.

* Investigate other types of tunnels for wideare nodes. Perhaps ipsec
  AH tunnels.

* Fix mountd-invalidating-current-mounts problem.

* Automated swapping (with disk saving) support so that we can swap
  out experiments and save per-node images for people. Requires a lot
  of disk space.

*** Medium:

* CDROM changes:
    1) Add DHCP support to waipconfig.pl.
    3) Add per host certificates.

* Switch rpm/tar file to non-nfs solution. Perhaps a ftpd like daemon
  which does some of the same checks that tmcd does. Or maybe a tmcd
  variant that does nothing but serve up files according. Maybe it
  does not need to be separate, but seems like putting this directly
  into tmcd is a bad idea. Maybe not. 

* Clean up osid/imageid mess. 

* Need to add a "kill runnin frisbee" function so that creating new
  images does get frisbee messed up.

* Front end support for changing delay/bw/plr asymmetrically in
  events. Currently, we can do queue params, but the basic delay, bw,
  and plr and can be only be done symmetrically.

  Related: Add NS event support for some of the tb- commands. For
  example, tb-set-lan-simplex-params. This is actually harder, since
  lans are not directly controllable at the link level anywhere in the
  system. delay_config chokes on lans at the moment for this reason.

* Support images with more than once slice (but not the entire disk).
  At present, people can make use of the 4th slice, but cannot save it
  with an image, unless they create an entire disk image, and we do
  not allow mere users to do that. The current disk image stuff is not
  flexible enough to support arbitrary slice definitions (save slice
  2-4).

  Related: Kill deltas!

* Add MBR initialization to all images, perhaps as a special Frisbee
  operation, like Mike did for slice 4. This is to prevent problems
  with people messing up the MBR.

* Change hardwired degree 4 for vrons->rons to more flexible DB
  management. Related would be dynamic creation of virtual nodes
  instead of hardwired entries in the nodes table, but thats a lot of
  work, and might not be worth it.

* Script to remove old log files from the mysql directory. Also remove
  old backups from the mysql backup dir. These files are taking up a
  huge amount of space, and /usr/testbed/log has been filling up a
  lot.

* Change exp failed email to report the actual failure mode based on
  result of assign_wrapper. Most users have no idea why an experiment
  failed.

  LBS: Rob and Chad have done some of this.

* Add some kind of host table support to RON nodes so that programs
  can figure out IPs. This is going to be a pain.

* Support for protocols other than IP. Mike reported some issues
  related to this in email of Fri, 17 May 2002 10:05:41.

* Bring in a bug tracking system we can use from the web interface.
  Need someone to look around for this. I hate GNATS!
  Rob mentioned RT (http://www.fsck.com/projects/rt). Eric mentioned
  Bugzilla and Jitterbug

* Retry/reliability to tmcd from ron nodes.

  LBS: I have been working on this.

* Noswap bit to prevent users from swapping special experiments that
  have things like SPAN turned on.

*** Minor:

* When I syntax check an ns file, and it fails, it would be handy to have a
  one-click way to check the same file again.  (My Tcl isn't so good.)

* Change logs for group experiments from /proj/<project>/logs/' to
  `/groups/<proj>/<group>/logs/'.

* Clean up ISADMIN() and ISADMININISTRATOR() calls in php pages.

* Allow users to set default group and default shell via web page and
  pass out to nodes when creating accounts.

* > Mapping RHL-STD on pc92 to emulab-ops-RHL73-STD.
  > *** Tarfile /usr/local for node pc96 does not exist!

  Can't we check the validity of these paths during the parse phase
  and fail a lot sooner?

* Add support for ssh protocol 2 rsa/dsa keys. Requires minor changes
  to mkacct, and the three web pages that parse the keys.

* Link on web pages to pop up an ssh to a node. Perhaps do this by
  usurping the telnet client.

* Macrofy the signature of the email (currently "Testbed Ops").

* FAQ entry for lilo:
  To access partitions on the disk outside of the C:H:S tuple limit (8.4
  GB), you must add 'lba32' to the global options section.

  Not a big deal, but requires someone who knows lilo to verify and to
  test it.

* Fix "no networks link warning" to deal with remote node links.

* DB consistency checker; to run at night and as part of flest.

* I'm sitting here looking at the "details" page for an experiment and
  no where obvious on this page does it show the name of the
  experiment.  If I scroll all the way down to experiment details,
  there it is. How about putting it over the vis image or making it
  part of the vis image? Somewhere right at the top.

* event system. skew and delay. unix domain socket to local proxy.

* allow user to specify OSIDs for their delay nodes. Not entirely sure
  how, since delays are chosen late in the game, but at the moment its
  difficuly for people to customize delay nodes.

* Fix up hostnames generation from tmcd for lans. Currently, if you
  have a link and a lan to the same node, you get two aliases.

* Add web interface for generating simple hardwired topologies. ie:
  "Just give me some nodes in a lan."

> From: Jay Lepreau <lepreau@fast.cs.utah.edu>
> To: stoller@fast.cs.utah.edu
> Subject: For the 'todo' list -- project and user "archiving"
> Date: Tue, 11 Jun 2002 20:49:44 -0600 (MDT)
> 
> I don't want to delete projects and probably not users (typically).
> I want to "retire" them, or move them to "alumni"/archive status.  I
> want to keep them in the DB for analysis and statistics reasons, but
> not keep them around forever as active because they clutter things
> up.
> 
> Also, the users might be reactivated if they start a new project.
> 
> These take a little thought because of name space issues, at least.
> Maybe more issues (eg how does an inactive user get reactivated
> unless their password is still valid?).
> 
> ANyway, just something for the list, and keep this message in the
> details part.

