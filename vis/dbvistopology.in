#!/usr/bin/perl -wT

#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2002 University of Utah and the Flux Group.
# All rights reserved.
#

use English;
use Getopt::Std;

#
# Generate a PNG image of the topology for an experiment.
#
sub usage()
{
    print STDOUT
	"Usage: dbvistoplogy [-o <outputfile>] [-z <zoomfactor>] [-d <detaillevel>] <pid> <eid>\n";
    exit(-1);
}
my  $optlist = "o:z:d:";

#
# Configure variables
#
my $TB       = "@prefix@";

#
# Testbed Support libraries
#
use lib "/usr/testbed/lib";
use libdb;
use libtestbed;

my $neato    = "neato"; 
my $dbtopper = "$TB/libexec/vis/dbtopper";
my $render   = "$TB/libexec/vis/render";
my $tbdata   = "tbdata";
my $output;
my $zoom;
my $detail;

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
# 
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Parse command arguments. Once we return from getopts, all that should
# be left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV != 2) {
    usage();
}
my $pid   = $ARGV[0];
my $eid   = $ARGV[1];

if (defined($options{"o"})) {
    $output = $options{"o"};

    if ($output =~ /^([-\@\w.\/]+)$/) {
	$output = $1;
    }
    else {
	die("Bad data in output name: $output");
    }
}

if (defined($options{"z"})) {
    $zoom = $options{"z"};
    if ($zoom =~ /^([\.0-9]+)$/) {
	$zoom = $1;
    }
    else {
	die("Bad data in zoom factor: $zoom");
    }
}

if (defined($options{"d"})) {
    $detail = $options{"d"};
    if ($detail =~ /^([0-9]+)$/) {
	$detail = $1;
    }
    else {
	die("Bad data in detail level: $detail");
    }
}

#
# Untaint the arguments.
#
if ($pid =~ /^([-\@\w]+)$/) {
    $pid = $1;
}
else {
    die("Tainted argument $pid!\n");
}
if ($eid =~ /^([-\@\w]+)$/) {
    $eid = $1;
}
else {
    die("Tainted argument $eid!\n");
}

#
# Verify existing experiment.
#
if (! ExpState($pid, $eid)) {
    die("*** $0:\n".
	"    No such experiment $pid/$eid\n");
}

#
# Verify that this person is allowed to look at experiment.
#

if (! TBExptAccessCheck($UID, $pid, $eid, TB_EXPT_READINFO)) {
    die("*** $0:\n".
	"    You do not have permission to view experiment $pid/$eid\n");
}

my $args;

if (defined($output)) {
    $args = "> $output";
} else {
    $args = "2> /dev/null";
}

if (defined($zoom)) {
    $args = "-z $zoom $args";
} 

if (defined($detail)) {
    $topperargs = "-d $detail";
} else {
    $topperargs = "";
}

if (system("$dbtopper $topperargs $pid $eid | $neato | $render $args") != 0) {
    exit(1);
}

exit(0);
