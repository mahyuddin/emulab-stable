#!/usr/bin/perl -w

#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2005 University of Utah and the Flux Group.
# All rights reserved.
#


use English;
use strict;
use Getopt::Std;

use lib '@prefix@/lib';
use libdb;

my $tbadmin = '@TBADMINGROUP@';

my $wap     = '@prefix@/sbin/withadminprivs';
my $mkproj  = '@prefix@/sbin/mkproj';
my $mkgroup = '@prefix@/sbin/mkgroup';
my $mkacct  = '@prefix@/sbin/tbacct add';

my $protouser       = 'elabman';
my $protouser_name  = 'Emulab Manager';
my $protouser_email = '@TBOPSEMAIL@';
my $protouser_shell = 'tcsh';
my $HOMEDIR         = "/users";
my $protoproj       = 'emulab-ops';
my $protoproj_desc  = 'Operations Meta-Project';
my $batchmode       = 0;
my $password;
my %opts;

#
# Handle command-line options
#
sub usage {
    print "Usage: firstuser [-b] [-p password]\n";
    exit(1);
}
if (! getopts("bp:", \%opts)) {
    usage();
}
if (defined($opts{b})) {
    $batchmode = 1;
}
if (defined($opts{p})) {
    $password = $opts{p};
}

my $result = DBQueryFatal("select * from users where uid='$protouser'");
if ($result->num_rows()) {
    die "This script has already been run, there is no need to run it again\n";
}

if ($UID != 0) {
    die "Sorry, this must be run as root\n";
}

print "This script will create the 'proto-user' $protouser, which you will\n";
print "use to bootstrap other users. It also creates the emulab-ops\n";
print "meta-project.\n\n";

# Get a password for the user
if (!defined($password)) {
    print "Pick a password for $protouser (warning, will be echoed): ";
    $password = <>;
    chomp($password);
}
my @salt_chars = ('a'..'z','A'..'Z','0'..'9');
my $salt = $salt_chars[rand(@salt_chars)] .
	   $salt_chars[rand(@salt_chars)];
my $encpass = crypt($password, "\$1\$${salt}");

# Get uid for the user and a gid for the project
my $uid = 10000;
while (getpwuid($uid)) { $uid++; }

my $gid = 6000;
while (getgrgid($gid)) { $gid++; }

my $ggid = $gid + 1;
while (getgrgid($ggid)) { $ggid++; }

# We put the proto-user in the tbadmin group, because the emulab-ops
# group does not exist yet
my $agid = (getgrnam($tbadmin))[2];
if (!defined $agid) {
    die "Unable to get group ID for $tbadmin\n";
}
# And in the wheel group so elabman can sudo to root.
my $Ggid = "wheel";
    
if (!$batchmode) {
    print "Creating user/project: Are you sure? (Y/N) ";
    if (<> !~ /Y/i) {
	die "Aborted\n";
    }
}

print "Creating user on boss...\n";
if (system "/usr/sbin/pw useradd $protouser -u $uid -g $agid -G $Ggid -h - " .
    "-m -d $HOMEDIR/$protouser -s /bin/nologin -c \"$protouser_name\"\n") {
       die "Unable to add user to the password file!\n";
}

print "Creating user in database...\n";
DBQueryFatal("insert into users set uid='$protouser', usr_created=now(), " .
	"usr_name='$protouser_name', usr_pswd='$encpass', unix_uid=$uid, ".
	"usr_modified=now(), admin=1, webonly=1, status='active', ".
	"usr_shell='$protouser_shell', usr_email='$protouser_email'");

print "Creating project in database...\n";
DBQueryFatal("insert into projects set pid='$protoproj', created=now(), " .
	"name='$protoproj_desc', head_uid='$protouser', unix_gid=$gid, " .
	"approved=1");

print "Creating group in database...\n";
DBQueryFatal("insert into groups set pid='$protoproj', gid='$protoproj', " .
	"leader='$protouser', created=now(), description='Default Group', " .
	"unix_gid=$ggid, unix_name='$protoproj'");

print "Putting user in group...\n";
DBQueryFatal("insert into group_membership set uid='$protouser', " .
	"pid='$protoproj', gid='$protoproj',  trust='project_root'," .
	"date_applied=now(), date_approved=now()");

# Flip UID to the new user so that the mk* scripts are happy - they can't
# be run as root for accountability reasons
$EUID = $UID = $uid;
$EGID = $GID = $gid;

print "Running mkproj...\n";
system "$wap $mkproj $protoproj";

print "Running mkgrp...\n";
system "$wap $mkgroup $protoproj $protoproj";

print "Running mkacct...\n";
system "$wap $mkacct $protouser";

print "User created. Once the web page is up, you should be able to log in\n";
print "as '$protouser' with the password you just entered. Refer to\n";
print "setup-db.txt for instructions on creating a 'real' user account for\n";
print "yourself.\n";
