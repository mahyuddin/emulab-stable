#!/usr/bin/perl -wT
#
# EMULAB-COPYRIGHT
# Copyright (c) 2005 University of Utah and the Flux Group.
# All rights reserved.
#
use English;
use Getopt::Std;

sub fatal($);

#
# Spew a source code tarball in gzip format. Used by the web interface
#
sub usage()
{
    print(STDOUT
	  "Usage: spewsource [-t tag] [-o file]\n" .
	  "-t <tag>  - Specify CVS tag\n");
    exit(-1);
}
my $optlist  = "t:o:";
my $tag      = "HEAD";
my $output;

#
# Configure variables
#
my $TB		= "@prefix@";
my $TBOPS       = "@TBOPSEMAIL@";
my $CVS		= "/usr/bin/cvs";
my $TAR		= "/usr/bin/gtar";
my $GZIP	= "/usr/bin/gzip";
my $CVSREPO     = "/usr/testbed/CVS";

# un-taint path
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin:/usr/site/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Turn off line buffering on output. Very important for this script!
#
$| = 1; 

# Load the Testbed support stuff.
use lib "@prefix@/lib";
use libdb;
use libtestbed;

# Be careful not to exit on transient error
$libdb::DBQUERY_MAXTRIES = 30;

#
# Locals
# 
my $logfile;

#
# Parse command arguments. Once we return from getopts, all that should be
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"t"})) {
    $tag = $options{"t"};

    # Untaint of course.
    if ($tag =~ /^([-\w\.]*)$/) {
	$tag = $1;
    }
    else {
	die("*** $0:\n".
	    "    Bad data in tag: $tag\n");
    }
}
if (defined($options{"o"})) {
    $output = $options{"o"};

    # Untaint of course.
    if ($output =~ /^([-\w\.\/\+]*)$/) {
	$output = $1;
    }
    else {
	die("*** $0:\n".
	    "    Bad data in output: $output\n");
    }
}

#
# Make a temp directory.
#
$ENV{'TMPDIR'} = "/var/tmp";

my $tempdir = `mktemp -d -t tempsrc`;
if ($?) {
    die("*** $0:\n".
	"    Could not create a temporary directory!\n");
}
if ($tempdir =~ /^([-\w\/\.]*)$/) {
    $tempdir = $1;
}
else {
    die("*** $0:\n".
	"    Bad data in tag: $tempdir\n");
}

#
# Check out the code.
#
system("$CVS -f -R -Qd $CVSREPO export -r $tag " .
       "-d $tempdir testbed") == 0
    or fatal("Failed to checkout testbed source code (tag $tag)!");

#
# Tar and gzip. Send to stdout (for web interface) unless an output file
# is specified.
#
system("$TAR --ignore-failed-read -cf - -C $tempdir . | gzip -c -1 ".
       (defined($output) ? "> $output" : "")) == 0
    or fatal("Failed to tar/gzip testbed source code (tag $tag)!");

if (defined($tempdir) && $tempdir ne "" && -d $tempdir) {
    system("/bin/rm -rf $tempdir");
}
exit(0);

sub fatal($)
{
    my($mesg) = $_[0];

    if (defined($tempdir) && $tempdir ne "" && -d $tempdir) {
	system("/bin/rm -rf $tempdir");
    }

    die("*** $0:\n".
	"    $mesg\n");
}

