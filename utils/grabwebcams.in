#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2005 University of Utah and the Flux Group.
# All rights reserved.
#
use English;

#
# Grab webcam images.
# Currently run as a cron job, but is probably better as a testbed
# daemon. 
#
#
# Configure variables
#
my $TB		= "@prefix@";
my $WEBCAMDIR   = "$TB/webcams";
my $TBOPS       = "@TBOPSEMAIL@";
my $TBLOGS      = "@TBLOGSEMAIL@";
my $SCP		= "/usr/bin/scp";

# un-taint path
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin:/usr/site/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

my $verbose = 1;
my $debug   = 0;
my @failed  = ();
#
# Turn off line buffering on output
#
$| = 1; 

# Load the Testbed support stuff.
use lib "@prefix@/lib";
use libdb;

#
# Only root and admins are allowed to use this script
#
if ($UID != 0) {
    die("*** $0:\n".
	"    You do not have permission to run this script!\n");
}

#
# Grab the webcams from the DB and get the images
#
my $query_result = DBQueryFatal("select * from webcams");

while (my %row = $query_result->fetchhash()) {
    my $id       = $row{"id"};
    my $server   = $row{"server"};
    my $filename = "/var/tmp/camera-${id}.jpg";

    #
    # ssh to server, protected by timeout.
    # 
    my $syspid = fork();

    if ($syspid) {
	local $SIG{ALRM} = sub { kill("TERM", $syspid); };
	alarm 5;
	waitpid($syspid, 0);
	alarm 0;

	#
	# Any failure, skip to next one.
	#
	if ($?) {
	    print "Failed to get webcam image $id from $server\n";

	    SENDMAIL($TBOPS, "Grab WebCam Image Failure",
		     "Failed to webcam $id from $server: $?\n");
	    next;
	}
    }
    else {
	exec("$SCP -q ${server}:${filename} $WEBCAMDIR");
	exit(0);
    }
    DBQueryFatal("update webcams set last_update=now() ".
		 "where $id='$id'");
}
exit(0);
