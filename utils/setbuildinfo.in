#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2002, 2005 University of Utah and the Flux Group.
# All rights reserved.
#
# Set the version and build info into the DB, at a toplevel install.
#
use English;
use Getopt::Std;
use POSIX qw(strftime);

#
# Configure variables
#
my $DBNAME    = '@TBDBNAME@';
my $DBMIGRATE = "@top_srcdir@/sql/database-migrate.txt";

#
# We use the bare Mysql module instead of the testbed libdb, so that this
# script can run from a first-time installation, before the latter is
# installed.
#
use Mysql;

#
# Build a list of tables to export
#
my $dbh = Mysql->connect('localhost', $DBNAME, undef, undef);
if (!$dbh) {
    die("*** $0:\n".
	"    Unable to connect to mysqld\n");
}

#
# Easy, get the build version which is simply today's date. 
#
my $buildinfo = POSIX::strftime("%m/%d/20%y", localtime());
$buildinfo = $dbh->quote($buildinfo);

#
# And store into the appropriate sitevar.
#
my $query_result =
    $dbh->query("update sitevariables set value=$buildinfo ".
		"where name='general/version/build'");
if (!$query_result) {
    die("*** $0:\n".
	"    Unable to set sitevar 'general/version/build' to $buildinfo\n");
}

#
# Now dig out the version info from the database-migrate file.
#
my $major = "96";
my $minor = "96";

open(MIG, $DBMIGRATE) or
    die("*** $0:\n".
	"    Unable to open $DBMIGRATE\n");
while (<MIG>) {
    if ($_ =~ /^(\d*)\.(\d*)/) {
	$major = $1;
	$minor = $2;
    }
}
#
# The last entry is the build info. 
#
$query_result =
    $dbh->query("update sitevariables set value='$major' ".
		"where name='general/version/major'");
if (!$query_result) {
    die("*** $0:\n".
	"    Unable to set sitevar 'general/version/major' to '$major'\n");
}
$query_result =
    $dbh->query("update sitevariables set value='$minor' ".
		"where name='general/version/minor'");
if (!$query_result) {
    die("*** $0:\n".
	"    Unable to set sitevar 'general/version/minor' to '$minor'\n");
}
exit(0);
