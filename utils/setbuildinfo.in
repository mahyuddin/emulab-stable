#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2011 University of Utah and the Flux Group.
# All rights reserved.
#
# Set the version and build info into the DB, at a toplevel install.
#
use English;
use Getopt::Std;
use POSIX qw(strftime);

#
# Configure variables
#
my $DBNAME    = '@TBDBNAME@';
my $SRCDIR    = "@top_srcdir@";

#
# We use the bare module instead of the testbed libdb, so that this
# script can run from a first-time installation, before the latter is
# installed.
#
use DBI;

#
# Build a list of tables to export
#
my $dbh = DBI->connect("DBI:mysql:database=$DBNAME;host=localhost",
		       undef, "none",
		       {'PrintError' => 0});
if (!$dbh) {
    die("*** $0:\n".
	"    Unable to connect to mysqld\n");
}

#
# Easy, get the build version which is simply today's date. 
#
my $buildinfo = POSIX::strftime("%m/%d/20%y", localtime());
$buildinfo = $dbh->quote($buildinfo);

#
# And store into the appropriate sitevar.
#
$dbh->do("update sitevariables set value=$buildinfo ".
	 "where name='general/version/build'")
    or die("*** $0:\n".
	   "    Unable to set sitevar 'general/version/build' to $buildinfo\n");

$dbh->do("replace into version_info set ".
	 "   name='buildinfo', value=$buildinfo")
    or die("*** $0:\n".
	   "    Unable to set version_info 'buildinfo' to $buildinfo\n");

#
# Also store the Git hash into the DB so we can inspect it.
#
my $hash = `cd $SRCDIR; tools/git/current_branch_head`;
if ($?) {
    print STDERR
	"*** $0:\n".
	"    Unable to get commit hash for source tree\n";

    $hash = "";
}
else {
    chomp($hash);
}
$hash = $dbh->quote($hash);

$dbh->do("replace into version_info set ".
	 "   name='commithash', value=$hash")
    or die("*** $0:\n".
	   "    Unable to set version_info 'commithash' to $hash\n");

exit(0);
