#!/usr/bin/perl -w

#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2004 University of Utah and the Flux Group.
# All rights reserved.
#

#
# export_tables - Create an SQL file with the contents of selected tables 
# that should more or less be the same across all sites.
#

use English;

my $dist = 0;
if (@ARGV && $ARGV[0] eq "-i") {
    $dist = 1;
}

#
# Configure variables
#
my $DBNAME = '@TBDBNAME@';

my $mysqldump = "mysqldump";

#
# We use the bare Mysql module instead of the testbed libdb, so that this
# script can run from a first-time installation, before the latter is
# installed.
#
use Mysql;

#
# Build a list of tables to export
#
my $dbh = Mysql->connect('localhost',$DBNAME,undef,undef);
if (!$dbh) {
    die("Unable to connect to mysqld - Either it's not running or \n" .
    	  "permission was denied.\n");
}

my $result = $dbh->query("select table_name from exported_tables");
my $table_names;
while (my ($table_name) = $result->fetchrow()) {
    $table_names .= "$table_name ";
}

#
# Run mysqldump, and read its stdout
#
open(FH, "$mysqldump " .
     ($dist ? "--add-locks" : "") . " -t $DBNAME $table_names |") or
    die "Unable to run $mysqldump: $!\n";

#
# Change INSERT to REPLACE, so that the resulting SQL can be used to update
# existing databases.
#
while (<FH>) {
    s/^INSERT/REPLACE/g;
    #
    # Kinda hackish, but gets the job done...
    #
    # Don't put any temporary entries from state_triggers out
    if (/INTO state_triggers VALUES \(\'([^\']*)\',/i &&
	$1 ne '*') { next; }

    print;

    if ($dist && /LOCK TABLES ([-\w]*) WRITE/i) {
	print "DELETE FROM $1;\n";
    }
}
