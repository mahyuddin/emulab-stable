#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2003, 2005 University of Utah and the Flux Group.
# All rights reserved.
#

SRCDIR          = @srcdir@
TESTBED_SRCDIR  = @top_srcdir@
OBJDIR          = ../..
SUBDIR          = tools/pcapper
SYSTEM	       := $(shell uname -s)

include $(OBJDIR)/Makeconf

all: pcapper

include $(TESTBED_SRCDIR)/GNUmakerules

PTHREADCFLAGS = -D_THREAD_SAFE -I/usr/local/include/pthread/linuxthreads
PTHREADLIBS   = -L/usr/local/lib -llthread -llgcc_r

ELVINFLAGS    = `elvin-config --cflags vin4c`
ELVINLIBS     = `elvin-config --libs vin4c`
EVENTFLAGS    = -DEVENTSYS -I$(TESTBED_SRCDIR)/event/lib $(ELVINFLAGS)
EVENTOBJS     = $(OBJDIR)/event/lib/event.o $(OBJDIR)/event/lib/util.o
EVENTLIBS     = $(ELVINLIBS) -lcrypto

TBCFLAGS      = $(EVENTFLAGS) -I$(TESTBED_SRCDIR)/lib/libtb
TBLIBS        = $(EVENTOBJS) $(OBJDIR)/lib/libtb/libtb.a $(EVENTLIBS)

PCAPLIBS=-lpcap

CFLAGS  = -Wall -static $(PTHREADCFLAGS) \
	  -DEMULAB -g -DDROPROOT -DBOSSNODE=\"@BOSSNODE@\" \
	  -DCLIENT_BINDIR='"$(CLIENT_BINDIR)"'
LDFLAGS = -static

CFLAGS_FBSD    = $(CFLAGS) $(TBCFLAGS)
CFLAGS_FBSD_NE = $(CFLAGS)
CFLAGS_LINUX   = $(CFLAGS) -I/usr/include/pcap $(TBCFLAGS)

LIBS_FBSD      = $(PTHREADLIBS) $(TBLIBS) $(PCAPLIBS)
LIBS_FBSD_NE   = $(PTHREADLIBS) $(PCAPLIBS)
LIBS_LINUX     = -L/usr/lib -lpthread -lpcap $(TBLIBS)

# virtual (encapsulated) ethernet
#CFLAGS_FBSD   += -DVETH

clean:
	-rm -f pcapper*.o pcapper pcapper.noevents pcapper.linux *.debug

ifeq ($(SYSTEM),Linux)
#
# Note: Building on Linux with the event system is mighty tricky
#
pcapper: pcapper.c GNUmakefile
	$(CC) $(CFLAGS_LINUX) $(CPPFLAGS_LINUX) $< -o pcapper $(LIBS_LINUX)
else
pcapper: GNUmakefile pcapper.o
	$(CC) $(LDFLAGS) $(CFLAGS_FBSD) pcapper.o $(LIBS_FBSD) -o pcapper
		cp pcapper pcapper.debug
		strip pcapper
endif

pcapper.o: pcapper.c
	$(CC) -c -o pcapper.o $(CFLAGS_FBSD) $<

pcapper.noevents: GNUmakefile pcapper-noevents.o
	$(CC) $(LDFLAGS) $(CFLAGS_FBSD_NE) pcapper-noevents.o $(LIBS_FBSD_NE) \
		-o pcapper.noevents
		cp pcapper.noevents pcapper.noevents.debug
		strip pcapper.noevents

pcapper-noevents.o: pcapper.c
	$(CC) -c -o pcapper-noevents.o $(CFLAGS_FBSD_NE) $<

client:	pcapper

client-install: client
	$(INSTALL_PROGRAM) pcapper $(DESTDIR)$(CLIENT_BINDIR)/pcapper
