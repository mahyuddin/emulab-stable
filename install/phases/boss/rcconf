#
# The template
#
use strict;
use libinstall;
use installvars;

sub Install($$$)
{
    my ($server, $isupdate, $impotent) = @_;

    my ($o1) = split(/\./, $FRISADDR);
    my $route_frisbee = qq|route_frisbee="-net $o1.0.0.0/8 -iface $BOSSNODE_IP"|;

    if ($isupdate) {
	Phase "frisbee", "Updating frisbee route", sub {
	    DoneIfUpdated($RCCONF, $route_frisbee);
	    UpdateFileFatal($RCCONF, [ qr(^route_frisbee) ], $route_frisbee);
	};
	return 0;
    }

    Phase "rc.conf", "Adding testbed content to $RCCONF", sub {
	DoneIfEdited($RCCONF);
	my @strings = (qq|rpcbind_enable="YES"|,
		       qq|mountd_enable="YES"|,
		       qq|nfs_server_enable="YES"|,
		       qq|nfs_server_flags="-u -t -n 16"|,
		       qq|nfs_client_enable="YES"|,
		       qq|inetd_enable="YES"|,
		       qq|inetd_flags="-wW -R 0"|,
		       qq|syslogd_flags=""|,
		       qq|tftpd_flags="-lvvvv -C 40 -s /tftpboot"|,
		       (("$APACHE_VERSION" eq "22") ?
			(qq|apache22_enable="YES"|,
			 qq|apache22_flags="-DSSL"|) :
			(qq|apache_enable="YES"|,
			 qq|apache_flags="-DSSL"|)),
		       qq|pubsubd_flags="-T 10"|);

	# Starting at FreeBSD 6 we use the default version of bind, not the port.
	if ($FBSD_MAJOR < 6) {
	    push(@strings, qq|named_enable="NO"|);
	}
	else {
	    push(@strings, (qq|named_enable="YES"|,
			    qq|named_chrootdir=""|,
			    qq|named_flags=""|,
			    qq|named_uid="root"|,
			    qq|named_pidfile="$NAMED_PIDFILE"|));
	}

	# At FreeBSD 6, they also changed the name of the ntp start var.
	if ($FBSD_MAJOR < 6) {
	    push(@strings, qq|xntpd_enable="YES"|);
	} else {
	    push(@strings, qq|ntpd_enable="YES"|);
	}

	# add multicast route for frisbee
	my ($o1) = split(/\./, $FRISADDR);
	push(@strings, (qq|static_routes="\$static_routes frisbee"|,
			$route_frisbee));

	# enable mrouted if needed
	if ($NEEDMROUTED) {
	    push(@strings, qq|mrouted_enable="YES"|);
	}

	# Turn on firewall.
	if ($FIREWALL_BOSS) {
	    push(@strings, qq|firewall_enable="YES"|);
	    push(@strings, qq|firewall_type="/etc/boss.ipfw"|);

	}

	AppendToFileFatal($RCCONF, @strings);
    };
    return 0;
}

# Local Variables:
# mode:perl
# End:
