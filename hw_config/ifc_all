#!/usr/bin/perl

my $rsh = "ssh";

if ( $#ARGV < 0) {
    die("Usage: ifc_all <ifc_file>\n");
}
open(WHO,"/usr/bin/whoami 2>&1 |");
$_ = <WHO>;
chop;
if ($_ ne "root") { die("This won't work unless you're root.\n"); }

if (-e "$ARGV[$0]" ) {
    open(IN,$ARGV[$0]) || die("Couldn't open $ARGV[$0]\n");
} elsif (-e "/usr/testbed/etc/$ARGV[$0]") {
    open(IN,"/usr/testbed/etc/$ARGV[$0]") || 
	die("Couldn't open /usr/testbed/etc/$ARGV[$0]\n");
} else {
    die ("Couldn't locate $ARGV[$0]\n");
}
my $last = "";
my $OS = "";
my $IP = "";
my $IF = 0;
my $ifstr = "";
my $newIP = "";
print "Reading input file...\n";
while (<IN>) {
    chop;
    s/\#(.*)//;
    if ($_ eq "") {next;}
    #print "Got $_\n";
    ($IP,$IF,$newIP)= split(" ",$_);
    #print "Config $IP, interface $IF, to IP $newIP\n";
    #if its not the same as the last one, get the OS
    if ( $IP ne $last ) {
	$last = $IP;
	if (-e "/bin/ping") {
	    open(PING,"/bin/ping -c 1 $IP 2>&1 |");
	} else {
	    open(PING,"/sbin/ping -c 1 $IP 2>&1 |");
	}
	do { } until ( <PING> =~ /transmitted, (\d*) packets received/ );
	print "Got $1 ping packet(s) back from $IP.\n";
	if ( $1 > 0 ) {
	    open(UNAME,"$rsh $IP uname -a 2>&1 |");
	    $_ = <UNAME>;
	    #print $_;
	    if ($_ ) { @temp = split(" ",$_); $OS = $temp[$0]; }
	} else {
	    $ifstr="";
	}
	print "OS for $IP is $OS   \t";
	if ($OS eq "Linux") { $ifstr="eth"; }
	elsif ($OS eq "FreeBSD") { $ifstr="fxp"; }
	else { $ifstr = ""; }
	if ($ifstr) { print "Using interface string \"$ifstr\"\n"; }
    }
    
    #Set up the interface
    if ( $ifstr eq "" ) { 
	print "Unknown OS $OS on $IP. Skipping interface $IF.\n";
	next;
    }
    print "Setting $IP $ifstr$IF to $newIP...\n";
    open(IFC,
	 "$rsh $IP /sbin/ifconfig $ifstr$IF inet $newIP ".
	 "netmask 255.255.255.0 2>&1 |"
	 );
    while ( <IFC> ) {
	print ">> $_";
    }
}
