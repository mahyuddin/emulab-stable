#!/usr/local/bin/python
# -*- python -*-
#
# EMULAB-COPYRIGHT
# Copyright (c) 2008 University of Utah and the Flux Group.
# All rights reserved.
#

import sys
sys.path.append("@prefix@/lib")
import getopt
from libtestbed import *
import libplab
import traceback

usage = "\t%prog [-d] <plcid_or_name> <sync|delete> <objtype> <objid>\n" \
        "\t%prog [-d] <plcid_or_name> <manage> <objtype> <objid> <op> <opargs>\n"


def main(args):
    me = args[0]
    parser = TBParser(usage)

    plcid,op,objtype,objid = None,None,None,None
    
    (opts, args) = parser.parse_args()

    libplab.debug = opts.debug
    libplab.verbose = opts.verbose
    
    if len(args) == 4:
        plcid,op,objtype,objid = args

        # load up the plc:
        plc = libplab.PLC(plcid)
        translator = libplab.EmulabPlcObjTranslator(plc)

        if op == 'sync':
            translator.syncObject(objtype,objid)
        elif op == 'delete':
            translator.deleteObject(objtype,objid)
            pass
        else:
            raise RuntimeError("unknown command %s" % op)
    elif len(args) > 5:
        plcid,op,objtype,objid,mgmt_op = args[:5]
        opargs = args[5:]

        # load up the plc:
        plc = libplab.PLC(plcid)
        translator = libplab.EmulabPlcObjTranslator(plc)

        if op == 'manage':
            translator.manageObject(objtype,objid,mgmt_op,opargs)
        else:
            raise RuntimeError("unknown command %s" % op)
    else:
        parser.error("Incorrect number of arguments")
        pass

    sys.exit(0)

if __name__ == "__main__":
    main(sys.argv)
