#!/usr/local/bin/python
# -*- python -*-
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2003 University of Utah and the Flux Group.
# All rights reserved.
#

import sys
sys.path.append("@prefix@/lib")
import getopt
from libtestbed import *
import libplab

usage = "%prog [-vd] {create|destroy} pid eid\n" \
        "  Without Emulab DB:\n" \
        "%prog [-vd] [-u <user1,...>] [-n <node1,...>] [-m <instmethod>] \n" \
        "      -c <slicedesc> {create|destroy} slicename"
        #            [-w <url>]

def main(args):
    me = args[0]
    parser = TBParser(usage)
    parser.add_option("-u","--users",dest="users",action="store",
                      help="Comma-separated list of users to add to the slice",
                      default=None)
    parser.add_option("-n","--nodes",dest="nodes",action="store",
                      help="Comma-separated list of hostnames to add to " \
                      "the slice",default=None)
    parser.add_option("-c","--slicedesc",dest="slicedesc",action="store",
                      help="Slice description",default=None)
    parser.add_option("-m","--instmethod",dest="instmethod",action="store",
                      help="Slice instantiation method",default=None)
#    parser.add_option("-w","--sliceurl",dest="sliceurl",action="store_true",
#                      help="Slice URL",default=None)
    userlist,nodelist = None,None
    
    (opts, args) = parser.parse_args()
    
    usedb = True
    if len(args) == 2:
        usedb = False
        command,slicename = args
        if args[0] == 'create' and (opts.slicedesc == None \
                                    or opts.slicedesc == ''):
            parser.error("Must supply a slice description if creating by slicename!")
            pass
        if opts.nodes != None:
            nodelist = opts.nodes.split(',')
            pass
        else:
            nodelist = []
            pass
        if opts.users != None:
            userlist = opts.nodes.split(',')
            pass
        else:
            userlist = []
            pass
        pass
    elif len(args) == 3:
        command,pid,eid = args
        pass
    else:
        parser.error("Incorrect number of arguments")
        pass

    plab = libplab.Plab()
    if command == "create":
        if usedb:
            slice = plab.createSlice(pid, eid)
            pass
        else:
            slice = plab.createSliceNoDB(slicename,opts.slicedesc,
                                         userlist=userlist,nodelist=nodelist,
                                         instmethod=opts.instmethod)
            pass
        pass
    elif command == "destroy":
        if usedb:
            slice = plab.loadSlice(pid, eid)
            pass
        else:
            slice = plab.loadSliceNoDB(slicename,slicedescr=opts.slicedesc,
                                       userlist=userlist,nodelist=nodelist,
                                       instmethod=opts.instmethod)
            pass
        slice.destroy()
        pass
    else:
        usage(me)
        pass

if __name__ == "__main__":
    main(sys.argv)
