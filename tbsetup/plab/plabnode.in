#!/usr/local/bin/python
# -*- python -*-

import sys
sys.path.append("@prefix@/lib")
import getopt
import libplab
import xmlrpclib
import time
import socket

TRIES = 3
SLEEPINT = 5

def usage(me):
    print "Usage: %s [ -vd ] { alloc | free } pid eid nodeid" % me
    sys.exit(1)

def main(args):
    me = args[0]
    alloctries = TRIES
    setuptries = TRIES
    
    try:
        command, pid, eid, nodeid = libplab.handleArgs(args[1:])
    except getopt.GetoptError:
        usage(me)
    except ValueError:
        usage(me)

    plab = libplab.Plab()
    slice = plab.loadSlice(pid, eid)

    if command == "alloc":
        while 1:
            try:
                node = slice.createNode(nodeid)
            except xmlrpclib.Fault, e:
                print "XML-RPC Fault happened while attempting " \
                      "node alloc for %s" % nodeid
                print "\tCode: %s, Error: %s" % (e.faultCode, e.faultString)
            except (socket.error, xmlrpclib.ProtocolError):
                print "Encountered problem communicating with an agent " \
                      "while setting up plab vnode %s" % nodeid
            else:
                break
            
            alloctries = alloctries - 1
            if alloctries > 0:
                print "Sleeping for %s seconds, then retrying alloc on %s" % \
                      (SLEEPINT, nodeid)
                time.sleep(SLEEPINT)
            else:
                print "Giving up after %s tries" % TRIES
                raise


        while 1:
            try:
                node.addKey("/root/.ssh/identity.pub")
                node.emulabify()
                # XXX This file is redundant
                # node.putConfig("/etc/vnodeid", nodeid)
                # Note that vnode_setup boots the node
            except:
                print "Node setup failed on %s" % nodeid
            else:
                break

            setuptries = setuptries - 1
            if setuptries > 0:
                print "Sleeping for %s seconds and then retrying " \
                      "setup on %s" % (SLEEPINT, nodeid)
                time.sleep(SLEEPINT)
            else:
                print "Giving up after %s setup attempts on %s" % \
                      (TRIES, nodeid)
                node.free()
                raise

    elif command == "free":
        try:
            node = slice.loadNode(nodeid)
        except:
            print "Node %s wasn't really allocated" % nodeid
            sys.exit(0)

        node.free()

    else:
        usage(me)

if __name__ == "__main__":
    main(sys.argv)
