#!/usr/bin/perl -w

# tbreport
# This just provides the necessary information from the IR file.

my $TBROOT = "@prefix@";
my $DBNAME = "tbdb";

push(@INC,"$TBROOT/lib/ir");
require libir;

use DBI;
$dbh = DBI->connect("DBI:mysql:database=$DBNAME;host=localhost") 
    || die "Could not connect to DB.\n";


if ($#ARGV == 3) {
    ($v,$pid,$eid,$irfile) = @ARGV;
    if ($v ne "-v") {
	print STDERR "Syntax: $0 [-v] pid eid irfile\n";
	exit(1);
    }
} elsif ($#ARGV == 2) {
    ($pid,$eid,$irfile) = @ARGV;
} else {
    print STDERR "Syntax: $0 [-v] pid eid irfile\n";
    exit(1);
}



eval {&ir_read($irfile)};
if ($@) {
    print STDERR "Could not read $irfile: $@\n";
    exit(1);
}

# Display node map
$raw = eval {&ir_get("/virtual/nodes")};
if ($@) {
    print STDERR "Could not read /virtual/nodes from IR file!\n";
    exit(1);
}
print "Node Mapping:\n";
printf "%-15s %-15s %s\n", "Virtual", "Physical", "Qualified Name";
print "--------------- --------------- --------------------\n";
foreach (split("\n",$raw)) {
    ($v,$p) = split;
    printf "%-15s %-15s %s\n", $v, $p, "$v.$eid.$pid.emulab.net";
}

# Display IP addresses
#  $raw = eval {&ir_get("/topology/lans")};
#  if ($@) {
#      print STDERR "Could not read /topology/lans from IR file!\n";
#      exit(1);
#  }
#  foreach (split("\n",$raw)) {
#      @info = split;
#      $lan = @info[0];
#      $lans{$lan} = 1;
#  }
$raw = eval {&ir_get("/ip/mac")};
if ($@) {
    print STDERR "Could not read /ip/mac from IR file!\n";
    exit(1);
}
foreach (split("\n",$raw)) {
    ($mac,$ip) = split;
    $ipmac{$ip} = $mac;
}

$raw = eval {&ir_get("/ip/map")};
if ($@) {
    print STDERR "Could not read /ip/map from IR file!\n";
    exit(1);
}
print "\n";
print "IP Addresses:\n";
printf "%-15s %-5s %-20s %-20s\n", "Node", "IFC", "Destination", "IP";
print "--------------- -------------------- --------------------\n";
foreach (split("\n",$raw)) {
    ($src,$dst,$ip) = split;
    if (defined($ipmac{$ip})) {
	$mac = $ipmac{$ip};
	$sth = $dbh->prepare("SELECT card FROM interfaces WHERE mac = \"$mac\"");
	if ($sth->execute != 0) {
	    ($ifc) = $sth->fetchrow_array;
	}
	$sth->finish;
    } else {
	$ifc = "?";
    }
    printf "%-15s eth%-2s %-20s %-20s\n", $src, $ifc, $dst, $ip;
}

0;

