#!/usr/bin/perl -wT
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2007 University of Utah and the Flux Group.
# All rights reserved.
#
use strict;
use English;

#
# Start event schedulers for all swapped-in experiments.
# Run whenever the boss node is rebooted.
#

#
# Configure variables
#
my $TB		= "@prefix@";
my $TBOPS       = "@TBOPSEMAIL@";
my $BOSSADDR	= "@BOSSNODE@";
my $EVENTSYS    = @EVENTSYS@;
my $TESTMODE    = @TESTMODE@;

my $evcontrol	= "$TB/bin/eventsys_control";

#
# Only root can do this.
#
if ($UID) {
    die("*** $0:\n".
	"    You do not have permission to control the event system!\n");
}

#
# The event system is currently optional.
#
if (! $EVENTSYS) {
    exit(0);
}

#
# Do nothing when testing.
#
if ($TESTMODE) {
    print "Testing run - no event system.\n";
    exit(0);
}

#
# Testbed Support libraries
#
use lib "@prefix@/lib";
use libdb;
use libtestbed;
use Experiment;

sub failed($$);

#
# Turn off line buffering on output
#
$| = 1;

# un-taint path
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Find all the active experiments.
#
my @experiments = Experiment->AllActive();

foreach my $experiment (@experiments) {
    my $pid     = $experiment->pid();
    my $eid     = $experiment->eid();
    my $swapper = $experiment->GetSwapper();
    my $project = $experiment->GetProject();
    my $group   = $experiment->GetGroup();

    failed($experiment, "Could not load swapper object")
	if (!defined($swapper));
    failed($experiment, "Could not load project object")
	if (!defined($project));
    failed($experiment, "Could not load group object")
	if (!defined($group));
    
    #
    # Ignore "special" experiments
    #
    next
	if ($pid eq TB_OPSPID);

    my $unix_uid  = $swapper->unix_uid();
    my $unix_pgid = $project->unix_gid();
    my $unix_egid = $group->unix_gid();
    
    #
    # Set uid/gid to that of the user.  We need to be in both the
    # project's unix group and the experiments's unix group in order
    # for the scheduler to write its logfile (in eventsys_control).
    #
    # Set some environment too.
    #
    $GID = $unix_pgid;
    $EGID = "$unix_pgid $unix_pgid $unix_egid";
    $EUID = $UID = $unix_uid;
    $ENV{'USER'} = $swapper->uid();

    print "Starting event scheduler for $experiment ...\n";
    system("$evcontrol start $pid,$eid");
    if ($?) {
	failed($experiment, "$evcontrol failed, status=$?");
    }
    else {
	print "Started event scheduler for $pid/$eid\n";
    }
    # set uid back to root
    $EUID = $UID = 0;
}
exit(0);

sub failed($$)
{
    my ($experiment, $msg) = @_;

    warn("$msg");
    warn("WARNING: did not start event scheduler for $experiment");
}
