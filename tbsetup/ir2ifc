#!/usr/local/bin/perl -w
#
# Takes input IR file on STDIN, and dumps IFC file to STDOUT.
#

my $d = 0; #debug

my $go=0;
my $ipsection=0;
my %ips = ();
my %nodes = ();
my %nodeips = ();
my %ifs = ();

while ( <> ) {
    if ( /^start ip/i ) { 
	$ipsection=1; 
	print STDERR "Found IP section...\t" if $d; 
    }
    elsif ( /^end ip/i ) { $ipsection=0; }
    elsif ( /^start mac/i ) { 
	$go=1; 
	print STDERR "Found MAC section:\n" if $d; 
    }
    elsif ( /^end mac/i ) { $go=0; }
    elsif ( $go ) {
	my ($mac,$ip) = split();
	print STDERR "Read: $mac <==> $ip\n" if $d;
	$ips{$mac} = $ip;
    }
}

print STDERR "Input done.\n" if $d;

my $path="";
if ( -x "/usr/testbed/bin/mac2if" ) { $path="/usr/testbed/bin/" }
elsif ( -x "mac2if" ) { $path=""; }
elsif ( -x "./mac2if" ) { $path="./"; }
elsif ( -x "/home/newbold/db/mac2if" ) { $path="/home/newbold/db/"; }

my $cmd = "$path"."mac2if ".join(" ",keys %ips)." |";
print STDERR "Calling $cmd\n" if $d;
open(MAC2IF,$cmd);
while ( <MAC2IF> ) {
    if (! /^\|/ ) {next;}
    if ( /^\|node_id/ ) {next;}
    s/ *|\t*//g;
    s/^\|//;
    my ($node,$ifc,$mac) = split(/\|/,$_);
    print STDERR "Read $node:$ifc <==> $mac\n" if $d;
    $nodes{$mac} = $node;
    $ifs{$mac} = $ifc;
}

if ( -x "/usr/testbed/bin/nodeip" ) { $path="/usr/testbed/bin/" }
elsif ( -x "nodeip" ) { $path=""; }
elsif ( -x "./nodeip" ) { $path="./"; }
elsif ( -x "/home/newbold/db/nodeip" ) { $path="/home/newbold/db/"; }

$cmd = "$path"."nodeip ".join(" ",values %nodes)." |";
print STDERR "Calling $cmd\n" if $d;
open(NODEIP,$cmd);
while ( <NODEIP> ) {
    if (! /^\|/ ) {next;}
    if ( /^\|node_id/ ) {next;}
    s/ *|\t*//g;
    s/^\|//;
    my ($node,$ifc,$ip) = split(/\|/,$_);
    if ($node =~ /^tbpc/) { if ($ifc==4) { $nodeip{$node} = $ip; } }
    else { if ($ifc==1) { $nodeip{$node} = $ip; } }
    print STDERR "Read $node <==> $nodeip{$node}\n" if $d;
}

print "# This ifc file generated by ir2ifc\n";
foreach my $mac ( keys %ips ) {
    if (defined $nodeip{$nodes{$mac}} ) {
	if (defined $ifs{$mac} ) {
	    print $nodeip{$nodes{$mac}}," ",$ifs{$mac}," ",$ips{$mac},"\n";
	}
    }
}
