#
# This file is intended to be included into another NS file. It is not
# a stand alone file.
# 
set myboss [$ns node]
set myops  [$ns node]

tb-set-hardware $myboss pc2000
tb-set-hardware $myops  pc2000

tb-set-node-inner-elab-role $myboss boss
tb-set-node-inner-elab-role $myops  ops

#
# This is passed in by the parser, when wrapping an existing experiment.
# The parser wrapper gets info about the wrapped experiment and passes it
# along in the TBCOMPAT namespace.
#
if { ${::TBCOMPAT::elabinelab_maxpcs} != 0 } {
    set maxpcs ${::TBCOMPAT::elabinelab_maxpcs}
} else {
    set maxpcs 0
}

set lanstr "myboss myops "
for {set i 1} {$i <= $maxpcs} {incr i} {
	set name "mypc${i}"
	set $name [$ns node]
	append lanstr "[set $name] "
	tb-set-node-os [set $name] FBSD-STD
	tb-set-node-inner-elab-role [set $name] node
        tb-set-hardware [set $name] pc2000
}
set publiclan [$ns make-lan $lanstr 100Mb 0ms]

tb-set-ip-lan $myboss $publiclan 10.200.1.70
tb-set-ip-lan $myops  $publiclan 10.200.1.74
for {set i 1} {$i <= $maxpcs} {incr i} {
	set name "mypc${i}"
	tb-set-ip-lan [set $name] $publiclan 10.200.1.$i
}

tb-set-node-os $myboss FBSD410-UPDATE
tb-set-node-cmdline $myboss /kernel.linkdelay
tb-set-node-os $myops  FBSD410-UPDATE

if {${::GLOBALS::security_level} >= 2} {
	# Set up a firewall
	set fw [new Firewall $ns]
	$fw set-type ipfw2-vlan
        
        if {${::GLOBALS::security_level} == 2} {
	    $fw set-style open
	} else {
	    $fw set-style closed
	}
}
