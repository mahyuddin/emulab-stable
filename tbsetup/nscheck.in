#!/usr/bin/perl -wT

#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2002 University of Utah and the Flux Group.
# All rights reserved.
#

use English;
use Getopt::Std;

#
# Syntax check an NS file.
#
# usage: nscheck <nsfile>
#
sub usage()
{
    print STDOUT "Usage: nscheck <nsfile>\n";
    exit(-1);
}
my  $optlist = "";

#
# Configure variables
#
my $TB       = "@prefix@";

my $tbbindir = "$TB/bin/";

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
# 
$ENV{'PATH'} = "/bin:/usr/bin:$TB/libexec:$TB/libexec/ir".
    ":$TB/libexec/ns2ir:$TB/sbin:$TB/bin";
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};


#
# Parse command arguments. Once we return from getopts, all that should
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV != 1) {
    usage();
}
my ($tempfile) = @ARGV;

#
# Untaint the arguments.
#
# Note different taint check (allow /).
if ($tempfile =~ /^([-\@\w.\/]+)$/) {
    $tempfile = $1;
}

else {
    fatal("Tainted argument $tempfile");
}

$nsfile    = "foo.ns";

#
# Make a temp dir and copy the NS file into it. We run the scripts
# from that directory cause it writes temp files.
# 
$dirname = "/tmp/parse-$$";

mkdir($dirname, 0775) or
    fatal("Could not mkdir $dirname");

chdir($dirname) or
    fatal("Could not chdir to $dirname");

if (system("/bin/cp", "$tempfile", "$nsfile")) {
    fatal("Could not copy $tempfile to $dirname");
}

# Run parse in impotent mode on the NS file.  This has no effect but
# will display any errors.

if (system("parse-ns -n -a $nsfile") != 0) {
    fatal("NS Parse failed!");
}

system("/bin/rm", "-rf", "$dirname");
exit 0;

sub fatal($)
{
    my($mesg) = $_[0];

    print STDOUT "$mesg\n";

    system("/bin/rm", "-rf", "$dirname");
    exit(-1);
}
