#!/usr/local/bin/perl -wT
use English;

#
# Remove a project. We delete the project directory hierarchy and the
# we remove the group from /etc/group. Actually, the project directory
# is *renamed* since we do not want to be so destructive.
#
# usage: rmprojdir <pid>
#
# TODO: Allow for the head of a project to delete it.
#

#
# Configure variables
#
my $TB       = "@prefix@";
my $TBOPS    = "@TBOPSEMAIL@";
my $CONTROL  = "@USERNODE@";

my $PROJROOT = "/proj";
my $SSH      = "$TB/bin/sshtb";
my $GROUPDEL = "/usr/sbin/pw groupdel";

#
# Untaint the path
# 
$ENV{'PATH'} = "/bin:/usr/bin";
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Turn off line buffering on output
#
$| = 1;

#
# Load the Testbed support stuff. 
#
use lib "@prefix@/lib";
use libdb;
use libtestbed;

#
# Check args.
#
if ($#ARGV < 0) {
    die("Usage: rmprojdir <pid>\n");
}
my $pid = $ARGV[0];

#
# Untaint the argument.
#
if ($pid =~ /^([-\@\w.]+)$/) {
    $pid = $1;
}
else {
    die("Invalid pid '$pid' contains illegal characters.\n");
}

#
# Figure out who called us. Only root or people with admin status
# can run this script.
#
if ($UID && !TBAdmin($UID)) {
    die("*** You must be root or TB admin to remove a project directory\n");
}

#
# Ensure that the project is not in the database!
#
my $query_result =
    DBQueryFatal("select head_uid from projects where pid='$pid'");

if ($query_result->numrows) {
    die("*** Project '$pid' is still in the database!\n");
}

#
# Rename the project directory.
# 
my $newname = "$pid-" . TBDateTimeFSSafe();

if (! chdir($PROJROOT)) {
    die("*** Could not chdir to $PROJROOT: $!\n");
}

if (! -e $pid) {
    die("*** Project directory '$pid' does not exist!\n");
}

if (! rename($pid, $newname)) {
    die("*** Could not rename project directory $pid to $newname: $!\n");
}

#
# Chown the owner/group to root and set the permissions so no one is
# allowed to look inside.
#
if (! chmod(0700, $newname)) {
    die("*** Could not chmod directory $newname to 0700: $!\n");
}
if (! chown(0, 0, $newname)) {
    die("*** Could not chown directory $newname to 0/0: $!\n");
}

#
# Now remove the group from the group file on both plastic and paper.
#
if (system("$GROUPDEL $pid")) {
    die("*** Could not remove group $pid fron operatons node (paper)\n");
}

#
# Be real root for ssh.
# 
$UID = 0;

if (system("$SSH $CONTROL $GROUPDEL $pid")) {
    die("*** Could not remove group $pid fron control node ($CONTROL)\n");
}

exit(0);

