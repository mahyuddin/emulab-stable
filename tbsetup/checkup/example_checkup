#! /usr/bin/env python

import sys
import os, os.path
import getopt

def usage():
    print "Usage: example_checkup [-h] <object> <state>"
    return

try:
    opts, req_args = getopt.getopt(sys.argv[1:],
                                   "h",
                                   [ "help", ])
    
    for opt, val in opts:
        if opt in ("-h", "--help"):
            usage()
            sys.exit()
            pass
        pass
    
    if len(req_args) < 2:
        raise getopt.error('error: too few arguments')

    if len(req_args) > 2:
        raise getopt.error('error: too many arguments')

    object, state = req_args

    if state not in ("new", "running", "locked"):
        raise getopt.error('error: unknown state - %s' % state)
    
    pass
except getopt.error, e:
    print e.args[0]
    usage()
    sys.exit(2)
    pass

if state == "new":
    file = open("counter", "w")
    file.write("0")
    file.close()
    rc = 10
    pass
elif state == "running":
    value = int(open("counter", "r").read())
    if value < 2:
        file = open("counter", "w")
        file.write(str(value + 1))
        file.close()
        rc = 10
        pass
    else:
        sys.stderr.write("error: value not less than 2 - %d\n" % value)
        sys.stderr.write("info: remove %s/counter to unlock this checkup.\n" %
                         os.getcwd())
        rc = 1
        pass
    pass
elif state == "locked":
    if os.path.exists("counter"):
        rc = 10
        pass
    else:
        rc = 0
        pass
    pass

sys.exit(rc)
