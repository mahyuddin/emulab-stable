#!/usr/bin/perl -wT

#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2002 University of Utah and the Flux Group.
# All rights reserved.
#
use English;
use Getopt::Std;

#
# usage: webcontrol [-m message] [-l login | nologin]
#
sub usage()
{
    print STDOUT "Usage: webcontrol [-m message] [-l login | nologin]\n";
    exit(-1);
}
my  $optlist = "m:l:";

#
# Configure variables
#
use lib "@prefix@/lib";
use libdb;

#
# Turn off line buffering on output
#
$| = 1;

#
# Parse command arguments. Once we return from getopts, all that should
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV != 0) {
    usage();
}
my $setmesg = 0;
my $message = "";
if (defined($options{"m"})) {
    $setmesg = 1;
    $message = $options{"m"};
}
my $setlogin = 0;
my $logins   = 1;
if (defined($options{"l"})) {
    $setlogin = 1;
    if ($options{"l"} eq "login") {
	$logins = 1;
    }
    elsif ($options{"l"} eq "nologin") {
	$logins = 0;
    }
    else {
	usage();
    }
}

#
# Only root or admin types!
# 
if (($UID != 0) && (!TBAdmin($UID))) {
	die("Only root or TB administrators can control the web interface.\n");
}

if ($setmesg) {
    if ($message eq "") {
	print "Clearing Web Message of the Day\n";

    	DBQueryFatal("delete from loginmessage");
    }
    else {
	print "Setting Web Message of the Day to $message\n";

	DBQueryFatal("replace into loginmessage (valid, message) ".
				"values(1, '$message')");
    }
}

if ($setlogin) {
    if ($logins) {
	print "Enabling Web Interface logins\n";

    	DBQueryFatal("delete from nologins");
    }
    else {
	print "Disabling Web Interface logins\n";

	DBQueryFatal("replace into nologins (nologins) values(1)");

	#
	# Find all non admins and log them out.
	# 
	my $query_result =
	    DBQueryFatal("select users.uid from login ".
			 "left join users on login.uid=users.uid ".
			 "where users.admin=0");
	
	while (my @row = $query_result->fetchrow_array()) {
	    my $uid = $row[0];

	    DBQueryFatal("delete from login where uid='$uid'");
	}
    }
}

