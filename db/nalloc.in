#!/usr/local/bin/perl -w
use Mysql;
use English;

#
# Configure variables
#
my $TB     = "@prefix@/libexec";
my $DBNAME = "@TBDBNAME@";

my $dbh = Mysql->connect("localhost",$DBNAME,"script","none");

if ($#ARGV < 1) {die("Usage: nalloc <pid> <eid> <node> <node> <...>\n");}

my $consetup="$TB/console_setup";
my $error = 0;
my $pid = shift;
my $eid = shift;
my @node_names=@ARGV;
my @vals = ();
my @nodes= ();

my $cmd = "";
my $sth = "";

my $self = (getpwuid($UID))[0]
  || die "Cannot figure out who you are!\n";

$cmd = "select uid from proj_memb as pm left join experiments as e on ".
  "e.pid=pm.pid where e.eid='$eid' and uid='$self' and e.pid='$pid'";
$sth = $dbh->query($cmd);
if ( ($sth->numrows < 1) && ($UID != 0) && ($EUID != 0)) {	
  die("You are not a member of experiment '$eid' in project '$pid'.\n");
}
 
$cmd = "lock tables nodes read, reserved write";
$sth = $dbh->query($cmd) 
  || die("Locking error:\n$cmd\nError string is:".$dbh->errstr."\n");

foreach my $n (@node_names) { 
  $sth = $dbh->query("select * from reserved where node_id='$n'");
  if ($sth->numrows > 0) {
    $cmd="select * from reserved where node_id='$n' and eid='$eid' and pid='$pid'";
    $sth = $dbh->query($cmd);
    if ($sth->numrows > 0) {	
      print "You have already reserved node '$n'.\n";
      # Do not increment error code since that throws off tbprerun.
    } else {
      print "Someone else has already reserved node '$n'.\n";
      $error++;
    }
    next;
  } else {
    $sth = $dbh->query("select * from nodes where node_id='$n'");
    if ($sth->numrows < 1) {	
      print "Node '$n' does not exist.\n";
      $error++;
      next;
    } else {
      # No one has reserved it, and it exists, so add it to my list
      push(@vals,"('$n','$pid','$eid')");
      push(@nodes,"$n");
    }
  }
}

if (!$error && @vals) {
  print "Reserving nodes...";
  $cmd = "insert into reserved (node_id,pid,eid) values ".join(",",@vals);
  if ($sth = $dbh->query($cmd)) {
    print "Succeeded.\n";    
  } else { 
    print "Failed Command:\n$cmd\nError string is:".$dbh->errstr."\n";
    $error++;
  }
}

$cmd = "unlock tables";
$sth = $dbh->query($cmd) 
  || die("Locking error:\n$cmd\nError string is:".$dbh->errstr."\n");

if (!$error && @nodes) {
  foreach $n ( @nodes ) { 
    print "Setting up console for $n...\n";
    system("$consetup $n") == 0 or
      print STDERR "WARNING: $consetup $n failed!\n";
  }
}

print "Done.\n";

exit($error);
