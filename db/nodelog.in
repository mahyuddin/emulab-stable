#!/usr/bin/perl -wT
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2007 University of Utah and the Flux Group.
# All rights reserved.
#
use strict;
use English;
use Getopt::Std;

sub usage() {
    print STDOUT "Usage: nodelog [-t type] -m <message> node [node ...]\n";
    exit(-1);
}
my  $optlist = "t:m:";

# Configure variables
my $TB		= "@prefix@";
my $TBOPS       = "@TBOPSEMAIL@";

# un-taint path
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# Turn off line buffering on output
#
$| = 1; 

# Load the Testbed support stuff.
use lib "@prefix@/lib";
use libdb;
use libtestbed;
use User;
use Node;

if (!$UID) {
    die("*** $0:\n".
	"    Please do not run this script as root!\n");
}

my $errors = 0;
my $message;
my $type = "misc";

#
# Verify user.
#
my $this_user = User->ThisUser();
if (! defined($this_user)) {
    die("You ($UID) do not exist!\n");
}
if (! ($this_user->IsAdmin() || $this_user->IsOpsGuy())) {
    die("*** $0:\n".
	"    You must be a TB administrator to enter a log entry\n");
}

#
# Parse command arguments. Once we return from getopts, all that should be
# left are the required arguments.
#
my %options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV < 1) {
    usage();
}
if (defined($options{"m"})) {
    $message = $options{"m"};
}
else {
    usage();
}
if (defined($options{"t"})) {
    $type = $options{"t"};
}

#
# Grab nodes and insert.
#
foreach my $node_id ( @ARGV ) {
    my $node = Node->Lookup($node_id);
    if (!defined($node)) {
	die("*** $0:\n".
	    "    No such node: $node_id!\n");
    }
    if ($node->InsertNodeLogEntry($this_user, $type, $message) != 0) {
	print STDERR "*** Failed to insert entry for node $node\n";
	$errors++;
    }
}
exit($errors);
