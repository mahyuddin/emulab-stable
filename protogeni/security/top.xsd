<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xmlns:sig="http://www.w3.org/2000/09/xmldsig#">
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="sig.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--
    
    EMULAB-COPYRIGHT
    Copyright (c) 2005-2007 University of Utah and the Flux Group.
    All rights reserved.
    
  -->
  <!--
    
    Definition of common data structures used for representing topologies -
    shared between vtop (virtual topology) and ptop (physical topology)
    formats.
    
  -->
  <xs:element name="node_type">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="type_name" type="xs:string">
          <xs:annotation>
            <xs:documentation>Name of the type - will almost certainly not be unique</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:choice>
          <xs:element ref="type_slots"/>
          <xs:element ref="unlimited"/>
        </xs:choice>
        <xs:element minOccurs="0" ref="static"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="type_slots">
    <xs:simpleType>
      <xs:restriction base="xs:integer">
        <xs:minInclusive value="0"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="unlimited">
    <xs:complexType/>
  </xs:element>
  <xs:element name="static">
    <xs:complexType/>
  </xs:element>
  <xs:element name="node" type="NodeContents"/>
  <xs:group name="NodeSpec.NodeType">
    <xs:annotation>
      <xs:documentation>A node can (by default) have one or more types</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element maxOccurs="unbounded" ref="node_type"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="link_type">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="type_name" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="link" type="LinkContents"/>
  <xs:group name="LinkEndPoints">
    <xs:sequence>
      <xs:element ref="source_interface"/>
      <xs:element ref="destination_interface"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="source_interface" type="InterfaceSpec">
    <xs:annotation>
      <xs:documentation>First interface for this link</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="destination_interface" type="InterfaceSpec">
    <xs:annotation>
      <xs:documentation>Second interface for this link</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:group name="LinkCharacteristics">
    <xs:sequence>
      <xs:element ref="bandwidth"/>
      <xs:element ref="latency"/>
      <xs:element ref="packet_loss"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="bandwidth">
    <xs:annotation>
      <xs:documentation>Bandwidth of the link in kbps</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:float">
        <xs:minExclusive value="0.0"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="latency">
    <xs:annotation>
      <xs:documentation>Latency of the link in ms</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:float">
        <xs:minInclusive value="0.0"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="packet_loss">
    <xs:simpleType>
      <xs:restriction base="xs:float">
        <xs:minInclusive value="0.0"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:group name="LinkSpec.LinkType">
    <xs:annotation>
      <xs:documentation>A link can (by default) have zero or more types</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" ref="link_type"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="fd">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="fd_name"/>
        <xs:element ref="fd_weight"/>
        <xs:element minOccurs="0" name="violatable">
          <xs:complexType/>
        </xs:element>
        <xs:choice minOccurs="0">
          <xs:annotation>
            <xs:documentation>Type information expressed in features and desires</xs:documentation>
          </xs:annotation>
          <xs:element ref="global"/>
          <xs:element ref="local"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="fd_name" type="xs:string">
    <xs:annotation>
      <xs:documentation>Name of this feature or desire</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="fd_weight" type="xs:float">
    <xs:annotation>
      <xs:documentation>Weight assocated with the feature or desire</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="global">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="operator">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="OnceOnly"/>
              <xs:enumeration value="FirstFree"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="local">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="operator">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="+"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:group name="NodeFlagSpec">
    <xs:sequence>
      <xs:element minOccurs="0" ref="trivial_bandwidth"/>
      <xs:element minOccurs="0" ref="subnode_of"/>
      <xs:element minOccurs="0" ref="unique"/>
      <xs:element minOccurs="0" ref="disallow_trivial_mix"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="trivial_bandwidth" type="xs:integer"/>
  <xs:element name="subnode_of" type="xs:string"/>
  <xs:element name="unique">
    <xs:complexType/>
  </xs:element>
  <xs:element name="disallow_trivial_mix">
    <xs:complexType/>
  </xs:element>
  <xs:complexType name="InterfaceSpec">
    <xs:annotation>
      <xs:documentation>Interfaces</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="interface" type="InterfaceContents"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="property">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="property_name"/>
        <xs:element ref="property_value"/>
        <xs:element ref="property_penalty"/>
        <xs:element minOccurs="0" name="violatable">
          <xs:annotation>
            <xs:documentation>If this flag is present, not having the property is considered a violation</xs:documentation>
          </xs:annotation>
          <xs:complexType/>
        </xs:element>
        <xs:choice minOccurs="0">
          <xs:element ref="global"/>
          <xs:element ref="local"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="property_name" type="xs:string">
    <xs:annotation>
      <xs:documentation>Name of this property</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="property_value" type="xs:string"/>
  <xs:element name="property_penalty">
    <xs:annotation>
      <xs:documentation>The penalty associated with this property</xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:float">
        <xs:minInclusive value="0.0"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
</xs:schema>
