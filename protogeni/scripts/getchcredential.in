#!/usr/bin/perl -w
#
# GENIPUBLIC-COPYRIGHT
# Copyright (c) 2008-2011 University of Utah and the Flux Group.
# All rights reserved.
#
use strict;
use lib '@prefix@/lib';

# Do this early so that we talk to the right DB.
use vars qw($GENI_DBNAME);
BEGIN { $GENI_DBNAME = "geni"; }

use GeniCredential;
use GeniCertificate;
use GeniAuthority;
use GeniHRN;
use GeniResponse;
use GeniUser;
use GeniRegistry;

# Configure ...
my $TB		  = "@prefix@";
my $SACERT	  = "$TB/etc/genisa.pem";

#
# This script can be used grab a CH credential and dump it to stdout.
# The context is the SA (the CH is granting a credential to the SA).
#
sub usage()
{
    print STDERR "Usage: $0\n";
    exit(-1);
}
sub fatal($)
{
    my ($msg) = @_;

    die("*** $0:\n".
	"    $msg\n");
}
usage()
    if (@ARGV);

#
# Load the cert to act as caller context.
#
my $certificate = GeniCertificate->LoadFromFile($SACERT);
if (!defined($certificate)) {
    fatal("Could not load certificate from $SACERT\n");
}
Genixmlrpc->SetContext(Genixmlrpc->Context($certificate));

my $clrcredential = GeniRegistry::ClearingHouse->GetCredential();
if (!defined($clrcredential)) {
    fatal("Could not get clearinghouse credential\n");
}
print $clrcredential->asString();
