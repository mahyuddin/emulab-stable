<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:display="protogeni.display.*"
		  width="100%" >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.containers.TabNavigator;
			import mx.controls.Alert;
			
			import protogeni.resources.GeniManager;
			
			import spark.components.NavigatorContent;
			import spark.components.TextArea;
			
			[Bindable]
			private var gm:GeniManager = null;
			
			public function load(n:GeniManager):void
			{
				gm = n;
				topHgroupcolor.color = DisplayUtil.colorsDark[gm.colorIdx];
				hrnLabel.setStyle("color", DisplayUtil.colorsLight[gm.colorIdx]);
				switch(gm.Status) {
					case GeniManager.STATUS_FAILED:
						this.statusIcon.source = ImageUtil.flagRedIcon;
						this.statusIcon.toolTip = "Failed";
						break;
					case GeniManager.STATUS_INPROGRESS:
						this.statusIcon.source = ImageUtil.flagYellowIcon;
						this.statusIcon.toolTip = "In Progress";
						break;
					case GeniManager.STATUS_UNKOWN:
						this.statusIcon.source = ImageUtil.flagOrangeIcon;
						this.statusIcon.toolTip = "Unknown";
						break;
					case GeniManager.STATUS_VALID:
						this.statusIcon.source = ImageUtil.flagGreenIcon;
						this.statusIcon.toolTip = "Valid"
						break;
				}
				messageButton.visible = gm.errorDescription.length > 0;
				messageButton.includeInLayout = gm.errorDescription.length > 0;
				rpsecButton.visible = gm.Rspec != null;
				rpsecButton.includeInLayout = gm.Rspec != null;
				graphInfoButton.visible = gm.Rspec != null;
				graphInfoButton.includeInLayout = gm.Rspec != null;
				nodesButton.label = gm.availableNodes + "/" + gm.AllNodes.length.toString() + " (" + gm.percentageAvailable.toFixed() + "%) Nodes Available";
			}
			
			public function viewRspec():void {
				var rspecWindow:XmlWindow = new XmlWindow;
				rspecWindow.showWindow();
				rspecWindow.title = "Advertisement RSPEC from " + gm.Hrn;
				rspecWindow.loadXml(gm.Rspec);
			}
			
			public function viewMessage():void {
				Alert.show(gm.errorDescription);
			}
			
			public function openGraphInfo():void
			{
				Alert.show("Not currently supported");
				/*
				var cw:DefaultWindow = new DefaultWindow();
				cw.showWindow();
				cw.title = "Graph information for " + gm.Hrn;
				var tabContainer:TabNavigator = new TabNavigator();
				tabContainer.percentHeight = 100;
				tabContainer.percentWidth = 100;
				
				// Full DOT graph
				var dotTab:NavigatorContent = new NavigatorContent();
				dotTab.label = "Full DOT graph";
				var textd:TextArea = new TextArea();
				textd.percentHeight = 100;
				textd.percentWidth = 100;
				textd.text = gm.getDotGraph();
				dotTab.addElement(textd);
				tabContainer.addChild(dotTab);
				
				// Grouped DOT graph
				var dotGroupedTab:NavigatorContent = new NavigatorContent();
				dotGroupedTab.label = "Grouped DOT graph";
				var textgd:TextArea = new TextArea();
				textgd.percentHeight = 100;
				textgd.percentWidth = 100;
				textgd.text = gm.getDotGroupedGraph();
				dotGroupedTab.addElement(textgd);
				tabContainer.addChild(dotGroupedTab);
				
				// Grouped GraphML
				var groupedgraphmlTab:NavigatorContent = new NavigatorContent();
				groupedgraphmlTab.label = "Grouped GraphML";
				var textgg:TextArea = new TextArea();
				textgg.percentHeight = 100;
				textgg.percentWidth = 100;
				textgg.text = gm.getGroupedGraphML()
				groupedgraphmlTab.addElement(textgg);
				tabContainer.addChild(groupedgraphmlTab);
				
				// GraphML
				var graphmlTab:VBox = new VBox();
				graphmlTab.label = "GraphML";
				var textg:TextArea = new TextArea();
				textg.percentHeight = 100;
				textg.percentWidth = 100;
				textg.text = gm.getGraphML();
				graphmlTab.addChild(textg);
				tabContainer.addChild(graphmlTab);
				
				cw.addElement(tabContainer);
				*/
			}

		]]>
	</fx:Script>
	<s:Group width="100%">
		<s:Rect width="100%" height="100%">
			<s:fill><s:SolidColor id="topHgroupcolor" /></s:fill>
		</s:Rect>
		
		<s:HGroup width="100%" verticalAlign="middle" paddingLeft="2">
			<s:Image id="statusIcon" />
			<s:Label text="{gm.Hrn}" toolTip="{gm.Urn}" fontSize="17" fontWeight="bold" width="100%" id="hrnLabel" />
			<display:ImageButton id="urlButton"
								 icon="@Embed('../../../images/world.png')"
								 click="navigateToURL(new URLRequest(gm.VisitUrl()), '_blank');"
								 toolTip="Visit {gm.Url}" />
			<display:ImageButton id="consoleButton"
								 icon="{ImageUtil.consoleIcon}"
								 click="LogHandler.viewGroup(gm.Url);"
								 toolTip="View log messages in the console" />
			<display:ImageButton id="rpsecButton"
								 icon="@Embed('../../../images/page_white_code.png')"
								 click="viewRspec()"
								 toolTip="View Advertisement RSPEC" />
			<display:ImageButton id="graphInfoButton"
								 icon="@Embed('../../../images/chart_organisation.png')"
								 click="openGraphInfo()"
								 toolTip="View the graph information" />
			<display:ImageButton id="messageButton"
								 icon="{ImageUtil.flagRedIcon}"
								 click="viewMessage()"
								 toolTip="{gm.errorMessage}" />
		</s:HGroup>
		
	</s:Group>
	
	<s:Button id="nodesButton" height="24"
			  click="DisplayUtil.viewNodeCollection(new ArrayCollection(gm.AllNodesAsArray()));"/>
</s:VGroup>
