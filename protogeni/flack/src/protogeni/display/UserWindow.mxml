<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2011 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<components:DefaultWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
						xmlns:s="library://ns.adobe.com/flex/spark" 
						xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:display="protogeni.display.*"
						width="400" height="300"
						defaultButton="{okButton}"
						creationComplete="onCreationComplete()"
						title="User Information"
						close="closeWindow()" xmlns:components="protogeni.display.components.*">
	<components:layout>
		<s:VerticalLayout paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4" />
	</components:layout>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import protogeni.GeniEvent;
			import protogeni.resources.GeniUser;
			import protogeni.resources.Slice;
			
			[Bindable]
			private var user:GeniUser;
			
			public function onCreationComplete():void
			{
				user = Main.geniHandler.CurrentUser;
				refresh();
				Main.geniDispatcher.addEventListener(GeniEvent.USER_CHANGED, refresh);
				Main.geniDispatcher.addEventListener(GeniEvent.SLICE_CHANGED, refresh);
				Main.geniDispatcher.addEventListener(GeniEvent.SLICES_CHANGED, refresh);
			}
			
			public override function closeWindow(event:Event=null):void {
				Main.geniDispatcher.removeEventListener(GeniEvent.USER_CHANGED, refresh);
				Main.geniDispatcher.removeEventListener(GeniEvent.SLICE_CHANGED, refresh);
				Main.geniDispatcher.removeEventListener(GeniEvent.SLICES_CHANGED, refresh);
				super.closeWindow(event);
			}
			
			public function refresh(junk:* = null):void
			{
				this.credentialImage.visible = user.credential != null && user.credential.length > 0;
				this.keysImage.visible = user.keys != null && user.keys.length > 0;
				slices.removeAllElements();
				for each(var s:Slice in user.slices)
					slices.addElement(DisplayUtil.getSliceButton(s));
				if(sslPem != null)
					this.sslPem.text = FlackCache.userSslPem;
			}
			
			public function save():void
			{
				FlackCache.userSslPem = this.sslPem.text;
				FlackCache.saveBasic();
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%">
		<s:Label text="{user.uid} ({user.name})" toolTip="{user.urn.full}" fontSize="17" fontWeight="bold" width="100%" />
		<s:Image id="credentialImage" source="{ImageUtil.credentialIcon}" toolTip="Has credential" />
		<s:Image id="keysImage" source="{ImageUtil.sslIcon}" toolTip="Has SSL keys" />
	</s:HGroup>
	<mx:TabNavigator width="100%" height="100%" paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5">
		<s:NavigatorContent label="Basic" width="100%" height="100%">
			<s:VGroup width="100%" height="100%">
				<s:HGroup verticalAlign="middle">
					<s:Image source="{ImageUtil.authorityIcon}" toolTip="Authority" />
					<s:Label text="{user.authority.Name}" />
				</s:HGroup>
				<s:HGroup verticalAlign="middle">
					<s:Image source="{ImageUtil.passwordIcon}" toolTip="Password" />
					<s:Button label="Force delete password" click="FlackCache.userPassword = ''; FlackCache.saveBasic(); Alert.show('Password removed');" />
				</s:HGroup>
				<s:Label text="Slices" fontWeight="bold"/>
				<s:Scroller width="100%" height="100%">
					<s:VGroup width="100%" height="100%" id="slices" />
				</s:Scroller>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent height="100%" width="100%" label="SSL Certificate">
			<s:TextArea id="sslPem" text="{FlackCache.userSslPem}" width="100%" height="100%" />
		</s:NavigatorContent>
	</mx:TabNavigator>
	<components:controlBarContent>
		<s:Button id="okButton" label="OK" click="save(); closeWindow();" height="24" icon="{ImageUtil.availableIcon}" />
		<s:Button label="Cancel" click="refresh(); closeWindow();" height="24" icon="{ImageUtil.crossIcon}" />
	</components:controlBarContent>
</components:DefaultWindow>
