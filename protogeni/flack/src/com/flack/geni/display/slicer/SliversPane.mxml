<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:mx="library://ns.adobe.com/flex/mx"
			width="100%"
			height="100%"
			creationComplete="init()"
			remove="destroy()">
	<fx:Script>
		<![CDATA[
			import com.flack.geni.display.areas.SliceArea;
			import com.flack.geni.resources.virtual.Slice;
			import com.flack.geni.resources.virtual.Sliver;
			import com.flack.geni.resources.virtual.SliverCollection;
			import com.flack.shared.FlackEvent;
			import com.flack.shared.SharedMain;
			
			[Bindable]
			public var slice:Slice;
			
			[Bindable]
			public var host:SliceArea;
			
			public function init():void
			{
				SharedMain.sharedDispatcher.addEventListener(FlackEvent.CHANGED_SLICE, changedSlice);
				load();
			}
			
			public function destroy():void
			{
				SharedMain.sharedDispatcher.removeEventListener(FlackEvent.CHANGED_SLICE, changedSlice);
			}
			
			public function load():void
			{
				var viewSlivers:SliverCollection = slice.slivers.Clone;
				
				// Keep sliver infos for slivers we are already viewing
				for(var i:int = 0; i < sliversGroup.numElements; i++)
				{
					var sliverView:SliverInfoArea = sliversGroup.getElementAt(i) as SliverInfoArea;
					if(!viewSlivers.contains(sliverView.sliver))
					{
						sliversGroup.removeElementAt(i);
						i--;
					}
					else
						viewSlivers.remove(sliverView.sliver);
				}
				
				// Add sliver infos for new slivers
				for each(var sliver:Sliver in viewSlivers.collection)
				{
					var sliverArea:SliverInfoArea = new SliverInfoArea();
					sliverArea.sliver = sliver;
					sliverArea.host = host;
					sliversGroup.addElement(sliverArea);
				}
			}
			
			public function changedSlice(e:FlackEvent):void
			{
				if(e.changedObject == slice)
					load();
			}
			
			public function clear():void
			{
				sliversGroup.removeAllElements();
			}
			
		]]>
	</fx:Script>
	<s:VGroup height="100%" width="100%" id="sliversGroup" gap="2" />
</s:Scroller>
