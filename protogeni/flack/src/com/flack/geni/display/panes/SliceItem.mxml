<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  verticalAlign="middle"
		  width="100%"
		  gap="2"
		  creationComplete="init()"
		  remove="destroy()">
	<fx:Script>
		<![CDATA[
			import com.flack.geni.display.areas.SliceArea;
			import com.flack.geni.resources.virtual.Slice;
			import com.flack.geni.resources.virtual.Sliver;
			import com.flack.shared.FlackEvent;
			import com.flack.shared.SharedMain;
			
			import mx.core.FlexGlobals;
			
			import spark.components.CheckBox;
			import spark.components.RadioButtonGroup;
			
			[Bindable]
			public var slice:Slice;
			
			[Bindable]
			public var showCheckbox:CheckBox;
			
			[Bindable]
			public var radioGroup:RadioButtonGroup;
			
			public function init():void
			{
				SharedMain.sharedDispatcher.addEventListener(FlackEvent.CHANGED_SLICE, tryUpdate);
				update();
			}
			
			public function destroy():void
			{
				SharedMain.sharedDispatcher.removeEventListener(FlackEvent.CHANGED_SLICE, tryUpdate);
			}
			
			public function tryUpdate(e:FlackEvent):void
			{
				if(e.changedObject == slice)
					update();
			}
			
			public function update():void
			{
				var status:String = slice.Status;
				switch(status)
				{
					case Sliver.STATUS_READY:
					//case Sliver.EMULAB_ACTIVE:
						sliceSelect.styleName = "validStyle";
						break;
					case Sliver.STATUS_FAILED:
					//case Sliver.EMULAB_TERMINATED:
						sliceSelect.styleName = "failedStyle";
						break;
					case Sliver.STATUS_STOPPED:
					//case Sliver.EMULAB_SWAPPED:
						sliceSelect.styleName = "pausedStyle";
						break;
					case Sliver.STATUS_CHANGING:
					case Sliver.STATUS_NOTREADY:
					case Sliver.STATUS_MIXED:
					//case Sliver.EMULAB_ACTIVATING:
					//case Sliver.EMULAB_SWAPPING:
					//case Sliver.EMULAB_TESTING:
						sliceSelect.styleName = "inprogressStyle";
						break;
					case Sliver.STATUS_UNKNOWN:
					default:
						sliceSelect.styleName = "unknownStyle";
				}
				
				this.toolTip = status;
			}
			
			public function viewSlice():void
			{
				//DisplayUtil.viewSlice(slice);
				
				var sliceArea:SliceArea = new SliceArea();
				FlexGlobals.topLevelApplication.viewContent(sliceArea);
				sliceArea.validateDisplayList();
				sliceArea.slice = slice;
			}

		]]>
	</fx:Script>
	<s:RadioButton enabled="{showCheckbox.selected}"
				   id="sliceSelect"
				   toolTip="View only this slice on the map"
				   group="{radioGroup}"
				   value="{slice}"
				   fontSize="10" />
	<s:Button id="sliceButton"
			   height="24"
			   width="100%"
			   label="{slice.Name}"
			   click="viewSlice()" />
</s:HGroup>
