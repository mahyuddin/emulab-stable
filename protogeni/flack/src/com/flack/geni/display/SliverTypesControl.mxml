<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1)import com.geni.resources.DiskImage;
import com.geni.resources.SliverType;
import com.geni.resources.SliverTypeCollection;

import mx.collections.ArrayCollection;UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%"
		  height="126"
		  gap="2"
		  initialize="init()">
	<fx:Script>
		<![CDATA[
			import com.flack.geni.resources.DiskImage;
			import com.flack.geni.resources.SliverType;
			import com.flack.geni.resources.SliverTypeCollection;
			import com.flack.geni.resources.SliverTypes;
			
			import mx.collections.ArrayCollection;
			
			[Bindable]
			private var sliverTypes:ArrayCollection;
			[Bindable]
			private var diskImages:ArrayCollection;
			[Bindable]
			private var initScripts:ArrayCollection;
			[Bindable]
			private var datapathPorts:ArrayCollection;
			
			public function load(types:SliverTypeCollection):void
			{
				sliverTypes = new ArrayCollection();
				for each(var sliverType:SliverType in types.collection)
					sliverTypes.addItem(sliverType);
			}
			
			public function init():void
			{
				loadSliverType();
			}
			
			public function loadSliverType():void
			{
				var selectedSliverType:SliverType = sliverTypesList.selectedItem as SliverType;
				if(selectedSliverType != null && initialized)
				{
					switch(selectedSliverType.name)
					{
						case SliverTypes.OPENFLOW_SWITCH:
							datapathPorts = new ArrayCollection();
							/*
							if(selectedSliverType != null && selectedSliverType.openflowDatapath != null)
							{
								for each(var port:OpenflowPort in selectedSliverType.openflowDatapath.ports.collection)
									datapathPorts.addItem(port.name + " (#"+port.num+")");
							}
							*/
							sliverDetailsViewstack.selectedChild = openflowView;
							break;
						case SliverTypes.PLANETLAB_V1:
						case SliverTypes.PLANETLAB_V2:
							initScripts = new ArrayCollection();
							if(selectedSliverType != null)
							{
								for each(var initScript:String in selectedSliverType.planetLabInitscripts)
								initScripts.addItem(initScript);
							}
							sliverDetailsViewstack.selectedChild = planetlabView;
							break;
						default:
							diskImages = new ArrayCollection();
							if(selectedSliverType != null)
							{
								for each(var diskImage:DiskImage in selectedSliverType.diskImages.collection)
								diskImages.addItem(diskImage);
							}
							sliverDetailsViewstack.selectedChild = diskImageView;
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup height="100%"
			  gap="2">
		<s:Label text="Sliver Types" fontWeight="bold" />
		<s:List id="sliverTypesList"
				requireSelection="true"
				height="100%"
				labelField="name"
				dataProvider="{sliverTypes}"
				valueCommit="loadSliverType()" />
	</s:VGroup>
	<mx:ViewStack id="sliverDetailsViewstack"
				  width="100%"
				  height="100%">
		<s:NavigatorContent id="diskImageView"
							height="100%"
							width="100%">
			<s:VGroup width="100%"
					  height="100%"
					  gap="2">
				<s:Label text="Disk Images"
						 fontWeight="bold" />
				<s:DataGrid id="imageGrid"
							width="100%"
							height="100%"
							dataProvider="{diskImages}">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="OSID">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label text="{data.Osid}"
													 toolTip="{data.id.full}"
													 maxDisplayedLines="1"
													 left="10" right="5" paddingTop="10" paddingBottom="5"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
							<s:GridColumn headerText="Description" dataField="description">
								<s:itemRenderer>
									<fx:Component>
										<s:GridItemRenderer>
											<s:Label text="{data.description}"
													 toolTip="{data.os} {data.version} ({data.description})"
													 maxDisplayedLines="1"
													 left="10" right="5" paddingTop="10" paddingBottom="5"/>
										</s:GridItemRenderer>
									</fx:Component>
								</s:itemRenderer>
							</s:GridColumn>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent id="planetlabView"
							height="100%"
							width="100%">
			<s:VGroup width="100%"
					  height="100%"
					  gap="2">
				<s:Label text="Initscripts"
						 fontWeight="bold" />
				<s:List width="100%"
						height="100%"
						dataProvider="{initScripts}" />
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent id="openflowView"
							height="100%"
							width="100%">
			<s:VGroup width="100%"
					  height="100%"
					  gap="2">
				<s:Label text="Datapath Ports"
						 fontWeight="bold" />
				<s:List width="100%"
						height="100%"
						dataProvider="{datapathPorts}" />
			</s:VGroup>
		</s:NavigatorContent>
	</mx:ViewStack>
	
	
</s:HGroup>
