<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<areas1:AreaContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.flack.shared.display.components.*"
		  xmlns:display="com.flack.geni.display.*"
		  xmlns:areas="com.flack.geni.display.areas.*"
		  gap="0"
		  initialize="init()" xmlns:areas1="com.flack.shared.display.areas.*">
	<fx:Script>
		<![CDATA[
			import com.flack.shared.display.components.AdvancedTextArea;
			import com.flack.shared.utils.ImageUtil;
			
			import spark.components.NavigatorContent;
			import spark.layouts.VerticalLayout;
			
			private var list:Array = [];
			
			[Bindable]
			private var doc:String = "";
			public function addDocument(name:String, document:String):void
			{
				list.push({name:name, document:document});
				if(tabs != null)
					addDocumentTab(name, document);
			}
			
			private function addDocumentTab(name:String, document:String):void
			{
				var tab:NavigatorContent = new NavigatorContent();
				var vertLayout:VerticalLayout = new VerticalLayout();
				vertLayout.paddingBottom = 5;
				vertLayout.paddingLeft = 5;
				vertLayout.paddingRight = 5;
				tab.layout = vertLayout;
				tab.percentHeight = 100;
				tab.percentWidth = 100;
				tab.label = name;
				
				var reviewRspecText:AdvancedTextArea = new AdvancedTextArea();
				reviewRspecText.text = document;
				tab.addElement(reviewRspecText);
				tabs.addChild(tab);
			}
			
			public function init():void
			{
				if(tabs.numChildren == 0)
				{
					for each(var obj:Object in list)
						addDocumentTab(obj.name, obj.document);
				}
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%">
		<s:Rect width="100%" height="100%">
			<s:fill><s:SolidColor color="{backgroundColor}" /></s:fill>
		</s:Rect>
		
		<s:HGroup width="100%"
				  verticalAlign="middle"
				  paddingLeft="2"
				  paddingRight="2"
				  paddingTop="2"
				  paddingBottom="2"
				  gap="2">
			<s:Label text="{title}"
					 color="{titleColor}"
					 fontSize="17"
					 fontWeight="bold"
					 width="100%" />
			<components:ImageButton id="dockIcon"
									icon="{ImageUtil.windowIcon}"
									toolTip="Pop out to a window or in to the main window"
									click="host.Docked ? popOut() : dock()" />
			<components:ImageButton id="closeIcon"
									icon="{ImageUtil.crossIcon}"
									toolTip="Close"
									click="close()" />
		</s:HGroup>
	</s:Group>
	<mx:TabNavigator id="tabs" width="100%" height="100%" paddingTop="4" />
	
</areas1:AreaContent>
