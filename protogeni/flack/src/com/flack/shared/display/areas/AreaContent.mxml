<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.flack.shared.display.components.*"
		  xmlns:display="com.flack.geni.display.*"
		  width="100%"
		  height="100%"
		  added="initEvents()"
		  remove="removeEvents()"
		  gap="2">
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;

			[Bindable]
			public var title:String;
			[Bindable]
			public var backgroundColor:uint = 0xEEEEEE;
			[Bindable]
			public var titleColor:uint = 0x000000;
			[Bindable]
			public var host:Area;
			
			public function openNext(nextContentItem:AreaContent):void
			{
				host.loadNext(nextContentItem);
			}
			
			public function popOut():void
			{
				host.popOutContent();
			}
			
			public function dock():void
			{
				host.dockContent();
			}
			
			public function get PendingChanges():Boolean
			{
				return false;
			}
			
			public function close():void
			{
				confirmCanCloseAnd(host.closeContent);
			}
			
			public function confirmCanCloseAnd(callMe:Function, arg:* = null):void
			{
				if(PendingChanges)
				{
					Alert.show(
						"There are pending changes, continue and lose changes?",
						"Continue and lose changes?",
						Alert.YES|Alert.CANCEL,
						FlexGlobals.topLevelApplication as Sprite,
						function alertClosed(e:CloseEvent):void
						{
							if(e.detail == Alert.YES)
							{
								cancelPendingChanges();
								if(arg != null)
									callMe(arg);
								else
									callMe();
							}
						}
					);
				}
				else
				{
					if(arg != null)
						callMe(arg);
					else
						callMe();
				}
			}
			
			public function cancelPendingChanges():void
			{
				
			}
			
			public function removeEvents():void
			{
				
			}
			
			public function initEvents():void
			{
				
			}
			
		]]>
	</fx:Script>
</s:VGroup>
