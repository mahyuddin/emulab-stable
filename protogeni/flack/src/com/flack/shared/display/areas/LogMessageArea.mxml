<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<areas1:AreaContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.flack.shared.display.components.*"
		  xmlns:display="com.flack.geni.display.*"
		  xmlns:areas="com.flack.geni.display.areas.*"
		  creationComplete="init()" xmlns:areas1="com.flack.shared.display.areas.*">
	<fx:Script>
		<![CDATA[
			import com.flack.shared.logging.LogMessage;
			import com.flack.shared.resources.sites.FlackManager;
			import com.flack.shared.tasks.file.FileTask;
			import com.flack.shared.utils.ColorUtil;
			import com.flack.shared.utils.ImageUtil;
			import com.flack.shared.utils.NetUtil;
			
			[Bindable]
			private var message:LogMessage;
			public function set Message(log:LogMessage):void
			{
				message = log;
				title = message.Title;
				
				for each(var relatedTo:* in message.relatedTo)
				{
					if(relatedTo is FlackManager)
					{
						backgroundColor = ColorUtil.colorsDark[relatedTo.colorIdx];
						titleColor = ColorUtil.colorsLight[relatedTo.colorIdx];
					}
				}
				
				init();
			}
			
			public function init():void
			{
				if(typeImage != null && message != null)
				{
					if(message.level == LogMessage.LEVEL_WARNING)
						typeImage.source = ImageUtil.warningIcon;
					else if(message.level != LogMessage.LEVEL_INFO)
						typeImage.source = ImageUtil.errorIcon;
					
					time.text = message.timeStamp.toLocaleTimeString();
				}
			}
			
			private function saveFile(e:MouseEvent):void
			{
				var task:FileTask = new FileTask(message.toString());
				task.startOperation(e);
			}
			
		]]>
	</fx:Script>
	
	<s:Group width="100%">
		<s:Rect width="100%" height="100%">
			<s:fill><s:SolidColor color="{backgroundColor}" /></s:fill>
		</s:Rect>
		
		<s:HGroup width="100%"
				  verticalAlign="middle"
				  paddingLeft="2"
				  paddingRight="2"
				  paddingTop="2"
				  paddingBottom="2"
				  gap="2">
			<s:Image id="typeImage" />
			<s:Label text="{title}"
					 color="{titleColor}"
					 id="nameLabel"
					 fontSize="17"
					 fontWeight="bold"
					 width="100%" />
			<s:Button icon="{ImageUtil.emailIcon}"
									label="Email"
									toolTip="Open an email"
									click="System.setClipboard(message.toString()); NetUtil.openMail('mstrum@flux.utah.edu', message.Title, 'The message has already been copied into the clipboard, just paste here.\n\n')" />
			<s:Button icon="{ImageUtil.copyIcon}"
									label="Copy"
									toolTip="Copy to clipboard"
									click="System.setClipboard(message.toString())" />
			<s:Button icon="{ImageUtil.saveIcon}"
									label="Save"
									toolTip="Save to file"
									click="saveFile(event)" />
			<s:Button id="dockIcon"
									icon="{ImageUtil.windowIcon}"
									toolTip="Pop out to a window or in to the main window"
									click="host.Docked ? popOut() : dock()" />
		</s:HGroup>
		
	</s:Group>
	
	<s:VGroup width="100%"
			  paddingRight="2"
			  paddingLeft="2">
		<s:HGroup>
			<s:Label text="@" />
			<s:Label id="time"
					 fontWeight="bold" />
		</s:HGroup>
	</s:VGroup>
	
	<s:TextArea text="{message.message}"
				width="100%"
				height="100%"
				id="details"
				editable="false" />
	
</areas1:AreaContent>
