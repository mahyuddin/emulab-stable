/* GENIPUBLIC-COPYRIGHT
* Copyright (c) 2008-2012 University of Utah and the Flux Group.
* All rights reserved.
*
* Permission to use, copy, modify and distribute this software is hereby
* granted provided that (1) source code retains these copyright, permission,
* and disclaimer notices, and (2) redistributions including binaries
* reproduce the notices in supporting documentation.
*
* THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
* CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
* FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
*/

package com.flack.emulab.tasks.process
{
	import com.flack.emulab.resources.virtual.Experiment;
	import com.flack.emulab.resources.virtual.VirtualLink;
	import com.flack.emulab.resources.virtual.VirtualLinkCollection;
	import com.flack.emulab.resources.virtual.VirtualNode;
	import com.flack.emulab.resources.virtual.VirtualNodeCollection;
	import com.flack.shared.SharedMain;
	import com.flack.shared.tasks.Task;
	
	/**
	 * Generates a request NS document for the slice using the slice's settings
	 * 
	 * @author mstrum
	 * 
	 */
	public final class GenerateNsTask extends Task
	{
		public var experiment:Experiment;
		
		/**
		 * 
		 * @param newSliver Sliver to generare NS file for
		 * 
		 */
		public function GenerateNsTask(newExperiment:Experiment)
		{
			super(
				"Generate NS Document",
				"Generates a NS document for an experiment",
				"",
				null,
				0,
				0,
				false,
				[newExperiment]);
			experiment = newExperiment;
		}
		
		override protected function runStart():void
		{
			var nsDocument:String = "# Generated by Flack " + SharedMain.version + "\n\n";
			nsDocument += "source tb_compat.tcl\nset ns [new Simulator]\n\n\n\n";
			
			nsDocument += "# Nodes #\n\n";
			var nodes:VirtualNodeCollection = experiment.nodes;
			for each(var node:VirtualNode in nodes.collection)
			{
				
			}
			
			nsDocument += "\n# Links #\n\n";
			var links:VirtualLinkCollection = experiment.links;
			for each(var link:VirtualLink in links.collection)
			{
				
			}
			
			nsDocument += "\n\n# Experiment routing.\n$ns rtproto " + experiment.routing;
			nsDocument += "\n\n# Run the simulation\n$ns run";
			
			data = nsDocument;
				
			super.afterComplete(false);
		}
	}
}