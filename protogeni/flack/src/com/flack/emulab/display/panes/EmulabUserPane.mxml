<?xml version="1.0" encoding="utf-8"?>

<!--

GENIPUBLIC-COPYRIGHT
Copyright (c) 2008-2012 University of Utah and the Flux Group.
All rights reserved.

Permission to use, copy, modify and distribute this software is hereby
granted provided that (1) source code retains these copyright, permission,
and disclaimer notices, and (2) redistributions including binaries
reproduce the notices in supporting documentation.

THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.

-->

<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.flack.shared.display.components.*"
		  width="100%"
		  height="100%"
		  gap="2"
		  paddingLeft="2"
		  paddingRight="2"
		  creationComplete="init()"
		  remove="destroy()">
	
	<fx:Script>
		<![CDATA[
			import com.flack.emulab.EmulabMain;
			import com.flack.emulab.display.areas.EmulabUserArea;
			import com.flack.emulab.resources.virtual.Experiment;
			import com.flack.emulab.tasks.groups.GetUserTaskGroup;
			import com.flack.emulab.tasks.xmlrpc.experiment.EmulabExperimentGetListTask;
			import com.flack.emulab.tasks.xmlrpc.user.EmulabUserMembershipTask;
			import com.flack.shared.FlackEvent;
			import com.flack.shared.SharedMain;
			import com.flack.shared.display.components.ImageButton;
			import com.flack.shared.tasks.TaskCollection;
			import com.flack.shared.utils.ImageUtil;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			
			public function init():void
			{
				SharedMain.sharedDispatcher.addEventListener(FlackEvent.CHANGED_EXPERIMENTS, tryUpdateExperiments);
				SharedMain.sharedDispatcher.addEventListener(FlackEvent.CHANGED_EXPERIMENT, tryUpdateExperiments);
			}
			
			public function destroy():void
			{
				SharedMain.sharedDispatcher.removeEventListener(FlackEvent.CHANGED_EXPERIMENTS, tryUpdateExperiments);
				SharedMain.sharedDispatcher.removeEventListener(FlackEvent.CHANGED_EXPERIMENT, tryUpdateExperiments);
			}
			
			public function openUser():void
			{
				FlexGlobals.topLevelApplication.viewContent(new EmulabUserArea());
			}
			
			public function tryUpdateExperiments(e:FlackEvent):void
			{
				userItems.removeAllElements();
				
				for each(var exp:Experiment in EmulabMain.user.experiments.collection)
				{
					var newSliceItem:ExperimentItem = new ExperimentItem();
					newSliceItem.experiment = exp;
					userItems.addElement(newSliceItem);
				}
				
				/*
				if(e.changedObject != null
					&& e.changedObject is Experiment
					&& e.action == FlackEvent.ACTION_NEW)
				{
					var sliceArea:SliceArea = new SliceArea();
					FlexGlobals.topLevelApplication.viewContent(sliceArea);
					sliceArea.slice = e.changedObject as Slice;
					//DisplayUtil.viewSlice(e.changedObject as Slice);
				}
				*/
			}
			
			public function tryReloadUser():void
			{
				var runningTasks:TaskCollection = SharedMain.tasker.tasks.AllNotFinished;
				if(runningTasks.getOfClass(EmulabUserMembershipTask).length > 0 || runningTasks.getOfClass(EmulabExperimentGetListTask).length > 0)
				{
					Alert.show("There is already a task running or waiting to run to load user information");
					return;
				}
				
				SharedMain.tasker.add(new GetUserTaskGroup());
			}
			
		]]>
	</fx:Script>
	<s:Button id="userButton"
			  icon="{ImageUtil.userIcon}"
			  label="{SharedMain.user.name}"
			  width="100%"
			  click="openUser()" />
	<s:HGroup width="100%"
			  verticalAlign="middle"
			  gap="2">
		<components:ImageButton icon="{ImageUtil.refreshIcon}"
								toolTip="Reload user information and experiments"
								click="tryReloadUser()" />
		<s:Label text="Experiments"
				 fontSize="14"
				 fontWeight="bold" />
	</s:HGroup>
	<s:Scroller height="100%" width="100%">
		<s:VGroup width="100%"
				  id="userItems"
				  gap="2" />
	</s:Scroller>
	
</s:VGroup>
