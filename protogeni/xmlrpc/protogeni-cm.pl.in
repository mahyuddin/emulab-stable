#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2008 University of Utah and the Flux Group.
# All rights reserved.
#

#
# Simple CGI interfce to the GENI xmlrpc interface. This script is invoked
# from the web server. The certificate information is in the environment
# set up by apache.
#
use strict;
use English;
use Frontier::Responder;

# Testbed libraries.
use lib '@prefix@/lib';
use User;
use Protogeni;
use GeniCM;
use libaudit;

# Geniuser.
my $user  = "geniuser";
my $group = "GeniSlices";

#
# Turn off line buffering on output
#
$| = 1;

#
# Untaint the path
#
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

#
# In the prototype, we accept certificate signed by trusted roots
# (CA certs we have locally cached). This script runs as "geniuser"
# so that there is an emulab user context, or many of the scripts we
# invoke will complain and croak. 
#
my $unix_uid = getpwnam("$user") or
    die("*** $0:\n".
	"    No such user $user\n");
my $unix_gid = getgrnam("$group") or
    die("*** $0:\n".
	"    No such group $group\n");

# Flip to user and never go back
$GID            = $unix_gid;
$EGID           = "$unix_gid $unix_gid";
$EUID = $UID    = $unix_uid;
$ENV{'USER'}    = $user;
$ENV{'LOGNAME'} = $user;

#
# Use libaudit to capture any output from libraries and programs.
# Send that to tbops so they can be fixed.
#
LogStart(0);

my $responder = Frontier::Responder->new( "methods" => {
    "SA::Lookup"            => \&Protogeni::SA::Lookup,
    "SA::RegisterUser"      => \&Protogeni::SA::RegisterUser,
    "SA::RegisterSlice"     => \&Protogeni::SA::RegisterSlice,
    "SA::DiscoverResources" => \&Protogeni::SA::DiscoverResources,
    "CM::GetTicket"         => \&GeniCM::GetTicket,
    "CM::CreateSliver"      => \&GeniCM::CreateSliver,
    "add"                   => \&Protogeni::add,
   },
);

my $response = $responder->answer();

#
# Terminate the log capture so that we can print the response to STDOUT
# for the web server.
#
LogEnd();

print $response;

