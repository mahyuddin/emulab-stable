#!/usr/bin/perl -wT
#
# GENIPUBLIC-COPYRIGHT
# Copyright (c) 2008-2010 University of Utah and the Flux Group.
# All rights reserved.
#
package GeniAM;

#
# The server side of the CM interface on remote sites. Also communicates
# with the GMC interface at Geni Central as a client.
#
use strict;
use Exporter;
use vars qw(@ISA @EXPORT);

@ISA    = "Exporter";
@EXPORT = qw ( );

# Must come after package declaration!
use lib '@prefix@/lib';
use GeniCMV2;
use GeniResponse;

my $API_VERSION = 1;

#
# Tell the client what API revision we support.  The correspondence
# between revision numbers and API features is to be specified elsewhere.
# No credentials are required.
#
sub GetVersion()
{
    my $blob = {
	"geni_api" => $API_VERSION
    };

    return GeniResponse->Create( GENIRESPONSE_SUCCESS, $blob );
}

# List this aggregates resources. Invokes DiscoverResources.
# Still need to handle the slice
sub ListResources()
{
    my ($argref) = @_;
    my $credentials = $argref->{'credentials'};
    my $options = $argref->{'options'};

    my $available = $options->{'geni_available'} || 0;
    my $compress = $options->{'geni_compress'} || 0;
    my $slice_urn = $options->{'geni_slice_urn'};

    # If $slice_urn is defined, this turns into a Resolve call.  We
    # need to resolve twice: once to get the sliver urn from the
    # slice, then to get the resources associated with the sliver (a
    # manifest rspec).

    my $discover_args = {
        'credentials' => $credentials,
        'available' => $available,
        'compress' => $compress
    };
    return GeniCMV2::DiscoverResources($discover_args);
}

# _Always_ make sure that this 1 is at the end of the file...
1;
