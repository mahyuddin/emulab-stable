<?xml version="1.0" encoding="utf-8"?>
<pgmap:DefaultWindow
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:pgmap="pgmap.*"
	title="Slice">
	
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.scrollClasses.ScrollThumb;
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var slice:Slice;
			
			[Bindable]
			private var cms:Array;
			
			[Bindable]
			public var nodes:ArrayCollection;
			
			public function loadNodes():void {
				var cm:ComponentManager = Common.Main().pgHandler.ComponentManagers[selectCm.selectedIndex] as ComponentManager;
				if(this.hideUnavailableCheckBox.selected)
				{
					nodes = cm.getAvailableNodes();
					for each(var sn:SliceNode in this.sliceCanvas.allNodes)
					{
						if(sn.node.manager == cm && nodes.getItemIndex(sn.node) > -1)
							nodes.removeItemAt(nodes.getItemIndex(sn.node));
					}
				}
				else
					nodes = cm.AllNodes;
				
				var nameSort:Sort = new Sort();
				var dataSortField:SortField = new SortField();
				dataSortField.name = "name";
				nameSort.fields = [dataSortField];
				
				nodes.sort = nameSort;
				nodes.refresh();
			}
			
			public function loadSlice(s:Slice):void
			{
				sliceCanvas.load(s);
				
				cms = new Array();
				for each(var cm:ComponentManager in Common.Main().pgHandler.ComponentManagers)
				{
					cms.push(cm.Hrn);
				}
				selectCm.selectedIndex = 0;
				loadNodes();
			}
			
			private function assignAvailableIcon(item:Object):Class {
				var node:PhysicalNode = item as PhysicalNode;
				if(!this.hideUnavailableCheckBox.selected)
				{
					for each(var sn:SliceNode in this.sliceCanvas.allNodes)
					{
						if(!sn.node.isVirtual && sn.node.physicalNode == node)
							return Common.notAvailableIcon;
					}
				}
				return Common.assignAvailabilityIcon(item as PhysicalNode);
			}

		]]>
	</mx:Script>
	<mx:HBox width="100%">
		<mx:Label text="{slice.hrn}" fontSize="17" fontWeight="bold"/>
		<mx:Spacer width="100%"/>
		<mx:Label text="{slice.urn}"/>
	</mx:HBox>
	<mx:HBox width="100%">
		<mx:Button label="Embed"/>
		<mx:Label text="Slivers"/>
		<mx:Button label="Create"/>
		<mx:Button label="Boot"/>
		<mx:Button label="Delete"/>
	</mx:HBox>
	<mx:HDividedBox width="100%" height="100%">
		<mx:VBox height="100%">
			<mx:ComboBox id="selectCm" width="100%" dataProvider="{cms}" change="loadNodes()"></mx:ComboBox>
			<mx:CheckBox label="Hide unavailable" selected="true" id="hideUnavailableCheckBox" click="loadNodes()"/>
			<mx:List width="100%" height="100%" id="listNodes"
					 dataProvider="{nodes}"
					 labelField="name" dragEnabled="true"
					 iconFunction="assignAvailableIcon">
			</mx:List>
			<mx:HBox width="100%">
				<mx:Button label="Exclusive"/>
				<mx:Button label="Shared"/>
			</mx:HBox>
		</mx:VBox>
			<pgmap:SliceCanvas id="sliceCanvas" hostWindow="{this}">
			</pgmap:SliceCanvas>
	</mx:HDividedBox>
	
</pgmap:DefaultWindow>
