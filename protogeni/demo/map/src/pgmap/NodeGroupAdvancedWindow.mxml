<?xml version="1.0" encoding="utf-8"?>
<ResizeWindow xmlns="pgmap.*" xmlns:mx="http://www.adobe.com/2006/mxml"
	width="700" height="400" showCloseButton="true" layout="vertical"
	borderAlpha=".9" borderColor="#D2E1F0"
	resizable="true"
	title="Node Group Information"
	close="PopUpManager.removePopUp(this)">
	
	<mx:Script>
		<![CDATA[
			import com.google.maps.View;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			public var nodes:ArrayCollection;
			
			[Bindable]
			public var node:Node = null;
			
			[Bindable]
			public var linkedNodes:ArrayCollection = new ArrayCollection();
			
			public var main:pgmap;
			
			public function loadCollection(group:ArrayCollection):void {
				nodes = group;
				
				if(nodes.length > 1) {
					listNodes.selectedIndex = 0;
					title += " Group";
				} else {
					listNodes.visible = false;
					listNodes.includeInLayout = false;
					nodeInfoHolder.percentWidth = 100;
					title = "Node Information";
				}

				loadNode(nodes[0]);
			}
			
			public function loadGroup(group:NodeGroup):void {
				if(group.city.length > 0)
					title = group.city + " Node";
				loadCollection(group.collection);
			}
			
			public function loadNode(n:Node):void {
				node = n;
				
				imgAvailable.source = assignIcon(n.available);
				imgExclusive.source = assignIcon(n.exclusive);
				
				linkedNodes = new ArrayCollection();
				
				for each(var i:NodeInterface in n.interfaces.collection) {
					for each(var l:Link in i.links) {
						var ns:String;
						var ins:String;
						if(l.interface1 == i) {
							ns = l.interface2.owner.name;
							ins = l.interface1.id;
						} else {
							ns = l.interface1.owner.name;
							ins = l.interface2.id;
						}
						linkedNodes.addItem({name: ns + " on " + ins, link: l});
					}
				}
			}
			
			public function viewLink(l:Link):void {
				var lgWindow:LinkGroupAdvancedWindow = new LinkGroupAdvancedWindow();
		    	lgWindow.main = main;
		    	PopUpManager.addPopUp(lgWindow, main, false);
	       		PopUpManager.centerPopUp(lgWindow);
	       		
	       		var ac:ArrayCollection = new ArrayCollection();
	       		ac.addItem(l);
	       		lgWindow.loadCollection(ac);
	       		lgWindow.title = node.name + "'s Links";
			}
			
			public function viewLinks():void {
				var lgWindow:LinkGroupAdvancedWindow = new LinkGroupAdvancedWindow();
		    	lgWindow.main = main;
		    	PopUpManager.addPopUp(lgWindow, main, false);
	       		PopUpManager.centerPopUp(lgWindow);
	       		
	       		lgWindow.loadCollection(node.GetLinks());
			}
			
			public function viewRspec():void {
				var rspecView:XmlWindow = new XmlWindow();
				PopUpManager.addPopUp(rspecView, main, false);
       			PopUpManager.centerPopUp(rspecView);
       			rspecView.loadXml(node.rspec);
			}
			
			[Bindable]
            [Embed(source="../../images/tick.png")]
            public var availableIcon:Class;

            [Bindable]
            [Embed(source="../../images/cross.png")]
            public var notAvailableIcon:Class;

            private function assignAvailableIcon(item:Object):Class {
                return assignIcon(item.available);
            }

			private function assignIcon(val:Boolean):Class {
                if (val)
                    return availableIcon;
                else
                    return notAvailableIcon;
            }
		]]>
	</mx:Script>
	<mx:HDividedBox width="100%" height="100%">
		<mx:List width="25%" height="100%" id="listNodes"
			dataProvider="{nodes}"
			labelField="name" change="loadNode(event.target.selectedItem)"
			iconFunction="assignAvailableIcon"></mx:List>
		<mx:VBox height="100%" width="75%" verticalGap="0" paddingTop="0" paddingRight="0" paddingLeft="0" paddingBottom="0" horizontalGap="0" id="nodeInfoHolder">
			<mx:Grid width="100%" height="100%" verticalGap="2" horizontalGap="2">
				<mx:GridRow width="100%">
					<mx:GridItem rowSpan="2">
						<mx:Button label="RSPEC" width="100%" height="100%" click="viewRspec()"/>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:Label text="{node.name}" fontSize="17" fontWeight="bold"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem width="100%">
						<mx:Label text="Exclusive" fontWeight="bold"/>
						<mx:Image id="imgExclusive"/>
						<mx:VRule height="16"/>
						<mx:Label text="Available" fontWeight="bold"/>
						<mx:Image id="imgAvailable"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem>
						<mx:Label text="UUID" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:Label text="{node.uuid}"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%">
					<mx:GridItem>
						<mx:Label text="Manager" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:Label text="{node.manager}"/>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%" height="100%">
					<mx:GridItem>
						<mx:Label text="Types" fontWeight="bold"/>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:DataGrid width="100%" height="100%" id="gridTypes" dataProvider="{node.types}">
							<mx:columns>
								<mx:DataGridColumn headerText="Name" dataField="name"/>
								<mx:DataGridColumn headerText="Slots" dataField="slots"/>
								<mx:DataGridColumn headerText="Static" dataField="isStatic"/>
							</mx:columns>
						</mx:DataGrid>
					</mx:GridItem>
				</mx:GridRow>
				<mx:GridRow width="100%" height="100%">
					<mx:GridItem>
					<mx:VBox horizontalAlign="right">
						<mx:Label text="Links to" fontWeight="bold"/>
						<mx:Button label="All" click="viewLinks();" width="100%"/>
					</mx:VBox>
					</mx:GridItem>
					<mx:GridItem width="100%">
						<mx:List width="100%" height="100%" id="listInterfaces" dataProvider="{linkedNodes}" labelField="name" change="viewLink(listInterfaces.selectedItem.link);"></mx:List>
					</mx:GridItem>
				</mx:GridRow>
			</mx:Grid>
		</mx:VBox>
	</mx:HDividedBox>
</ResizeWindow>
