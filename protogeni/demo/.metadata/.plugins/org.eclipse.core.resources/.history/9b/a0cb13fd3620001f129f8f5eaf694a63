/* GENIPUBLIC-COPYRIGHT
 * Copyright (c) 2009 University of Utah and the Flux Group.
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation.
 *
 * THE UNIVERSITY OF UTAH ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  THE UNIVERSITY OF UTAH DISCLAIMS ANY LIABILITY OF ANY KIND
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 */
 
 package pgmap
{
	import flash.events.StatusEvent;
	import flash.net.LocalConnection;
	
	import mx.controls.Alert;
	
	import merapi.*;
	
	// Handles communication with the flash client
	public class ConnectionHandler
	{
		private var onlyReciever:Boolean = true;
		private var sender:LocalConnection;
		private var reciever:LocalConnection;
		private var javaMessage:JavaMessage;
		private var 
		public function ConnectionHandler()
		{
			javaMessage = new JavaMessage();
			javaMessage.helloText = "Hey!!!!!";
			sender = new LocalConnection();
			sender.allowDomain("*");
			sender.addEventListener(StatusEvent.STATUS, onConnectionStatus);
			reciever = new LocalConnection();
			reciever.allowDomain("*");
			try
			{
				reciever.connect("protogeni-flashtomap");
				reciever.client = this;
				reciever.addEventListener(StatusEvent.STATUS, onConnectionStatus);
			} catch (err:Error)
			{
				Alert.show("Only one map instance can listen to messages from the flash client.  If you need that functionality, return to the first instance.");
				onlyReciever = false;
			}
		}
		
		public function RequestNode(urn:String, cm:String):void
		{
			sender.send("protogeni-maptoflash", "addnode", urn, cm);
		}
		
		public function updatestatus(status:String):void
		{
			Alert.show(status);
		}
		
		public function onConnectionStatus(statusEvent:StatusEvent):void
		{
			if(statusEvent.level == "error")
			{
				Alert.show("ERROR ON MAP CONNECTION STATUS");
			}
		}
	}
}