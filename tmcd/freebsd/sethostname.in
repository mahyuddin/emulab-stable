#!/usr/bin/perl -wT
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2004 University of Utah and the Flux Group.
# All rights reserved.
#
use English;

#
# Configure variables
#
my $USEPNAME	= "@DISABLE_NAMED_SETUP@";

#
# Set the hostname for the node according to the current experiment.
# Run from /etc/dhclient-exit-hooks.
#
#	usage: sethostname [domain]
#
# We get the domain from dhclient script setup, and pass it through.
# Otherwise, we have no safe way to determine the domain.
# 

# Drag in path stuff so we can find emulab stuff.
BEGIN { require "/etc/emulab/paths.pm"; import emulabpaths; }

#
# Turn off line buffering on output
#
$| = 1;

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use libsetup;
use libtmcc;

#
# Check to see if hostname actually set yet. The dhclient exit hook gets
# invoked no matter what, and typically the first or second DHCP fails,
# and then this script runs tmcc, which fails and prints an annoying
# warning.
#
my $curname = `hostname -s`;
if (! ($curname =~ /.+/)) {
    exit 0;
}

#
# We assume that we are in the same domain as our boss node
#
my $bossname = tmccbossname();
if ($bossname =~ /^[^\.]+\.(.*)$/) {
    $domain = ".$1";
}
else {
    $domain = ".foo.net";
}

#
# If testbed is not maintaining DNS aliases, we had better not
# use the nickname for the hostname as it will not resolve.
#
my $nickname;
if ($USEPNAME) {
    chomp($curname);
    $nickname = $curname;
} else {
    $nickname = whatsmynickname();
}
if (! $nickname) {
    print STDERR "No Testbed nickname available!\n";
    exit(0);
}
$nickname = lc($nickname);

print STDERR "Resetting hostname to ${nickname}${domain} ... ";

if (system("hostname", "${nickname}${domain}")) {
    print STDERR "*** FAILED!\n";
    exit 1;
}

print STDERR "Done!\n";
exit 0;
