#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2006 University of Utah and the Flux Group.
# All rights reserved.
#
use English;
use Getopt::Std;

sub usage()
{
    print "Usage: rc.delayagent [-j <vnodeid>] start | stop\n";
    exit(1);
}
my $optlist	= "j:";
my $vnodeid;
my $action      = "start";

# Turn off line buffering on output
$| = 1;

# Drag in path stuff so we can find emulab stuff.
BEGIN { require "/etc/emulab/paths.pm"; import emulabpaths; }

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use libsetup;
use libtmcc;

#
# Parse command arguments. Once we return from getopts, all that should be
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (defined($options{"j"})) {
    $vnodeid = $options{"j"};
    libsetup_setvnodeid($vnodeid);
}
if (@ARGV) {
    $action = $ARGV[0];

    usage()
	if ($action ne "start" and $action ne "stop");
}
# Must do this *after* setting vnode id.
my $MAPFILE = TMDELMAP();
my $KEYFILE = TMEVENTKEY();
my $logfile;
my $pidfile;
my $vnodearg = "";

if (defined($vnodeid)) {
    $logfile = CONFDIR() . "/delayagent.debug";
    $pidfile = CONFDIR() . "/delayagent.pid";
    $vnodearg = "-j $vnodeid";
}
else {
    $logfile = "$LOGDIR/delayagent.debug";
    $pidfile = "/var/run/delayagent.pid";
}

# Stop.
if ($action eq "stop") {
    if (-e $pidfile) {
	my $pidno = `cat $pidfile`;
	chomp($pidno);
	print "$pidno\n";
	# The delay agent will not die properly for some reason. 
	system("kill -9 $pidno");
	unlink($pidfile);
    }
    exit(0);
}

# Start.
if (! -s $MAPFILE) {
    exit(0);
}

print "Starting Delay Agent ...\n";

#
# Need the pid/eid. 
# 
my ($pid, $eid, $vname) = check_nickname();

#
# The agent always talks to the local elvind, which talks to boss. 
#
my $elvind = "localhost";

system("delay-agent -s $elvind -E $pid/$eid $vnodearg ".
       "-f $MAPFILE -l $logfile -i $pidfile -k $KEYFILE &");
exit($? >> 0);
