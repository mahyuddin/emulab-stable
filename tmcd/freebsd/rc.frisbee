#!/bin/sh
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2004 University of Utah and the Flux Group.
# All rights reserved.
#

if [ -r /etc/emulab/paths.sh ]; then
	. /etc/emulab/paths.sh
else
	BINDIR=/etc/testbed
	BOOTDIR=/etc/testbed
fi

$BINDIR/tmcc state RELOADSETUP

BOSSINFO=`$BINDIR/tmcc bossinfo`
LOADINFO=`$BINDIR/tmcc loadinfo`

# For testing purposes.
#BOSSINFO='boss.emulab.net 155.101.128.70'
#LOADINFO='ADDR=234.5.6.69:4444'

BOSSIP=`echo $BOSSINFO | awk '{ print $2 }'`

# XXX should be part of loadinfo
LOADIP="-S $BOSSIP"

if [ -x /usr/sbin/ntpdate ]; then
	/usr/sbin/ntpdate -b $BOSSIP >/dev/null 2>&1
fi

ADDRESS=`echo $LOADINFO | awk -F= '{ printf $2 }' | awk -F' ' '{ print $1 }'`
PARTITION=`echo $LOADINFO | awk -F= '{ printf $3 }' | awk -F' ' '{ print $1 }'`
PARTITION=${PARTITION:-'0'}
PARTOS=`echo $LOADINFO | awk -F= '{ printf $4 }' | awk -F' ' '{ print $1 }'`
DISK=`echo $LOADINFO | awk -F= '{ printf $5 }' | awk -F' ' '{ print $1 }'`
DISK=${DISK:-'ad0'}

if [ "$PARTITION" != "0" ]; then
	SLICE="-s $PARTITION";
	case $PARTOS in
	FreeBSD)
		SLICE="$SLICE -D 165"
		PTYPE=165
		;;
	OpenBSD)
		SLICE="$SLICE -D 166"
		PTYPE=166
		;;
	Linux)
		SLICE="$SLICE -D 131"
		PTYPE=131
		;;
	*)
		;;
	esac
fi

# Enable IPoD
if [ -r $BINDIR/rc.ipod ]; then
	. $BINDIR/rc.ipod
fi

#
# set memory limits:
#	allow 16MB for non-frisbee stuff
#	split remaining memory (at least 2MB) between network/disk buffering
#	in frisbee
#
HOSTMEM=`sysctl -n hw.usermem`
HOSTMEM=`expr $HOSTMEM / 1024`
if [ $HOSTMEM -ge 26624 ]; then
	HOSTMEM=`expr $HOSTMEM - 24576`
	ulimit -v $HOSTMEM
	HOSTMEM=`expr $HOSTMEM / 1024`

	## For GaTech we use more memory for disks since the disks are so slow
	#NETMEM=`expr $HOSTMEM \* 1 / 3`
	#DISKMEM=`expr $HOSTMEM \* 2 / 3`
	#MEMARGS="-C $NETMEM -W $DISKMEM"

	# For Utah, we let the client split up the memory
	# (50/50, but no more chunk buffers than there are chunks in the image)
	MEMARGS="-M $HOSTMEM"
fi

if [ x"$ADDRESS" != x ]; then
        PORT=`echo $ADDRESS | awk -F: '{ printf $2 }'`;
	MCAST=`echo $ADDRESS | awk -F: '{ printf $1 }'`;
	if [ -e $BOOTDIR/myip ]; then
		MCASTIF="-i `cat $BOOTDIR/myip`"
	else
		MCASTIF=""
	fi
	MCASTADDR="-m $MCAST -p $PORT";

	echo "Running $BINDIR/frisbee $LOADIP $MEMARGS $SLICE $MCASTIF $MCASTADDR /dev/$DISK at `date`";
	$BINDIR/tmcc state RELOADING;

	$BINDIR/frisbee $LOADIP $MEMARGS $SLICE $MCASTIF $MCASTADDR /dev/$DISK;
	case $? in
	0)
		echo "Frisbee run finished";
		echo "Resizing final disk partition";
		$BINDIR/growdisk -vW /dev/$DISK;
		#
		# XXX limit the use of slicefix for now to just
		# those machines with "ad4" as their root disk
		#
		if [ -x $BINDIR/slicefix -a "$DISK" = "ad4" ]; then
			echo "Adjusting slice-related files";
			$BINDIR/slicefix $PARTITION $DISK
		fi
		echo "Image load complete, rebooting ...";
		$BINDIR/tmcc state RELOADDONE;
		/sbin/reboot;
		sleep 100;
		;;
	*)
		echo "Frisbee run failed, status $?"
		;;
	esac
else
	echo "Unable to get address for loading image"
fi
echo "Failed to load disk, dropping to login prompt"
