#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2005, 2008 University of Utah and the Flux Group.
# All rights reserved.
#
use English;
use Getopt::Std;

sub usage()
{
    print "Usage: rc.linktest start | stop\n";
    exit(1);
}
my $optlist	= "";
my $action      = "start";

# Turn off line buffering on output
$| = 1;

# Drag in path stuff so we can find emulab stuff.
BEGIN { require "/etc/emulab/paths.pm"; import emulabpaths; }

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use libsetup;
use libtmcc;

# XXX this only works if called after linkdelay setup as is the case here
sub LINKDELAYHOST() { if (-e TMLINKDELAY()) { return 1; } else { return 0; } }

#
# Exit if not a valid node to run linktest on.
# 
exit(0)
    if (MFS() || REMOTE() || SIMHOST() || JAILHOST() ||
	(DELAYHOST() && !LINKDELAYHOST()));

#
# Parse command arguments. Once we return from getopts, all that should be
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV) {
    $action = $ARGV[0];

    usage()
	if ($action ne "start" and $action ne "stop");
}

my $logfile = "$LOGDIR/linktest.debug";
my $pidfile = "/var/run/linktest.pid";
my $swapper = `cat $BOOTDIR/swapper`;

# Stop.
if ($action eq "stop") {
    if (-e $pidfile) {
	system("kill `cat $pidfile`");
	# Does not unlink its own pidfile!
	unlink($pidfile);
    }
    exit(0);
}

#
# Need the keyfile. We talk to the elvind on boss, not locally.
#
my $keyfile = TMEVENTKEY();

#
# Need the pid/eid. 
# 
my ($pid, $eid, $vname) = check_nickname();

#
# Start the daemon.
#
print("Starting linktest daemon\n");

my $server = getlocalevserver();
system("linktest -e $pid/$eid ".
       "-s $server -l $logfile -i $pidfile -k $keyfile -u $swapper");
exit($? >> 0);
