#!/usr/bin/perl -w
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2003 University of Utah and the Flux Group.
# All rights reserved.
#
use English;
use Getopt::Std;

sub usage()
{
    print "Usage: rc.progagent start | stop\n";
    exit(1);
}
my $optlist	= "";
my $action      = "start";

# Drag in path stuff so we can find emulab stuff.
BEGIN { require "/etc/emulab/paths.pm"; import emulabpaths; }

#
# Prototypes.
#
sub fatal($);

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use libsetup;

#
# Parse command arguments. Once we return from getopts, all that should be
# left are the required arguments.
#
%options = ();
if (! getopts($optlist, \%options)) {
    usage();
}
if (@ARGV) {
    $action = $ARGV[0];

    usage()
	if ($action ne "start" and $action ne "stop");
}

my $logfile = "$LOGDIR/progagent.debug";
my $pidfile = "/var/run/progagent.pid";

# Stop.
if ($action eq "stop") {
    if (-e $pidfile) {
	system("kill `cat $pidfile`");
	unlink($pidfile);
    }
    exit(0);
}

# Start.
if (! -s TMPROGAGENTS) {
    exit(0);
}

#
# The progagent always talks to the local elvind on FreeBSD, which
# talks to boss. Otherwise, it talks to boss directly. 
#
my $bossname;
if ($OSNAME eq "freebsd") {
    $bossname = "localhost";    
}
else {
    ($bossname) = split(" ", `tmcc bossinfo`);
}

#
# Open up the command file, which tells us what to do.
#
open(CMD, TMPROGAGENTS) or
    fatal("Could not open " . TMPROGAGENTS . ": $!");

my @agents;
my $login;

while (<CMD>) {
    if ($_ =~ /^UID=([-\w]+)$/) {
	$login  = $1;
    }
    elsif ($_ =~ /^AGENT=([-\w]+)$/) {
	push (@agents, $1);
    }
}

if (! @agents || !defined($login)) {
    fatal(TMPROGAGENTS . " not in proper format!");
}

#
# Need the pid/eid. 
# 
my ($pid, $eid, $vname) = check_nickname();

#
# Start the program agent. It will become the user. It must be started
# as root of course to do this. 
#
my $agentlist = join(" -a ", @agents);

print "Starting Program Agent ($login, @agents) ...\n";

system("program-agent -e $pid/$eid -s $bossname -u $login -l $logfile ".
       "-a $agentlist -i $pidfile &");
exit($? >> 0);

sub fatal($)
{
    my($mesg) = $_[0];

    die("*** $0:\n".
	"    $mesg\n");
}

