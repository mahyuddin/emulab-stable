#!/usr/bin/perl -wT
#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2002 University of Utah and the Flux Group.
# All rights reserved.
#

use English;

#
# Set the hostname for the node according to the current experiment.
#
# In Linux, this gets invoked directly from the "pump" configuration
# program. See /etc/pump.conf. Who came up that name? Anyway, the
# first argument to the script is a token, one of up, renewal, or
# release. We set the hostname on either of the first two.
#
# If no args supplied at all (which means being run by hand, then do it).
#
# We don't need to worry about the domainname on Linux. Its set via a
# different mechanism, so changing the hostname will not effect the
# domain suffix. 
#

#
# Untaint path
#
$ENV{'PATH'} = '/bin:/sbin:/usr/bin:/usr/local/bin:/etc/rc.d/testbed';
delete @ENV{'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};

# Turn off line buffering on output
$| = 1;

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use lib "/etc/rc.d/testbed";
use libsetup;

if (@ARGV) {
    my $token = shift;

    if ($token ne "up" && $token ne "renewal") {
	exit 0;
    }
}

my $domain = `dnsdomainname`;
chomp($domain);
if ($domain =~ /[\w\.]+/) {
    $domain = ".$domain";
}
else {
    $domain = ".foo.net";
}

my $nickname = whatsmynickname();
if (! $nickname) {
    print STDOUT "No Testbed nickname available!\n";
    exit(0);
}
$nickname = lc($nickname);

print STDOUT "Resetting hostname to ${nickname}${domain} ... ";

if (system("hostname", "${nickname}${domain}")) {
    print STDOUT "*** FAILED!\n";
    exit 1;
}

print STDOUT "Done!\n";
exit 0;
