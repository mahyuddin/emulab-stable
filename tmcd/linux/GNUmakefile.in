#
# EMULAB-COPYRIGHT
# Copyright (c) 2000-2004 University of Utah and the Flux Group.
# All rights reserved.
#

#
# XXX ONLY RUN THIS INSTALL ON A LINUX TESTBED NODE!
#
# Trivial. These things just need to be installed into the right place
# on a testbed node before cutting an image.
#
#
SRCDIR		= @srcdir@
TESTBED_SRCDIR	= @top_srcdir@
OBJDIR		= ../..
SUBDIR		= tmcd/linux

include $(OBJDIR)/Makeconf

SCRIPTS		= sethostname sethostname.dhclient

#
# Force dependencies on the scripts so that they will be rerun through
# configure if the .in file is changed.
# 
all:	pump.conf supfile $(SCRIPTS)

include $(TESTBED_SRCDIR)/GNUmakerules

DESTDIR		=
SYSETCDIR	= $(DESTDIR)/etc
ETCDIR		= $(DESTDIR)$(CLIENT_ETCDIR)
BINDIR		= $(DESTDIR)$(CLIENT_BINDIR)
VARDIR		= $(DESTDIR)$(CLIENT_VARDIR)
RCDIR		= $(SYSETCDIR)/rc.d
INSTALL		= /usr/bin/install -c 
COMMON		= $(SRCDIR)/../common

install:	common-install etc-install \
			sup-install script-install bin-install
	@echo "Remember to install the PEM files if necessary"

simple-install:	common-install script-install bin-install

dir-install:
	$(INSTALL) -m 755 -o root -g wheel -d $(ETCDIR)
	$(INSTALL) -m 755 -o root -g wheel -d $(BINDIR)
	$(INSTALL) -m 755 -o root -g wheel -d $(RCDIR)
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)/db
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)/jails
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)/logs
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)/sup
	$(INSTALL) -m 755 -o root -g wheel -d $(VARDIR)/boot
	-rm -rf $(DESTDIR)/etc/testbed
	ln -s emulab $(DESTDIR)/etc/testbed
	-rm -rf $(DESTDIR)/usr/local/etc/testbed
	ln -s emulab $(DESTDIR)/usr/local/etc/testbed

common-install:	dir-install
	(cd ../common; $(MAKE) local-install)

sup-install:	dir-install
	$(INSTALL) -m 755 ./supfile $(ETCDIR)/supfile
	$(INSTALL) -m 750 -o root -g wheel -d $(DESTDIR)/root/.cvsup
	$(INSTALL) -m 600 $(SRCDIR)/cvsup.auth $(DESTDIR)/root/.cvsup/auth

bin-install:	dir-install
	$(INSTALL) -m 755 -s ../tmcc-nossl $(BINDIR)/tmcc.bin
	$(INSTALL) -m 755 -s ../findif $(BINDIR)/findif

etc-install:	dir-install sysetc-remove sysetc-install
	$(INSTALL) -m 644 $(SRCDIR)/group $(ETCDIR)/group
	$(INSTALL) -m 644 $(SRCDIR)/passwd $(ETCDIR)/passwd
	$(INSTALL) -m 600 $(SRCDIR)/shadow $(ETCDIR)/shadow
	$(INSTALL) -m 600 $(SRCDIR)/gshadow $(ETCDIR)/gshadow
	$(INSTALL) -m 644 $(SRCDIR)/hosts $(ETCDIR)/hosts

sysetc-install:	dir-install
	$(INSTALL) -m 644 ./pump.conf $(SYSETCDIR)/pump.conf
	$(INSTALL) -m 755 $(SRCDIR)/dhclient-exit-hooks \
				$(SYSETCDIR)/dhclient-exit-hooks
	$(INSTALL) -m 644 $(SRCDIR)/modules.conf $(SYSETCDIR)/modules.conf
	$(INSTALL) -m 755 $(SRCDIR)/ifcfg-eth0 \
			$(SYSETCDIR)/sysconfig/network-scripts/ifcfg-eth0
	$(INSTALL) -m 755 $(SRCDIR)/ifcfg-eth1 \
			$(SYSETCDIR)/sysconfig/network-scripts/ifcfg-eth1
	$(INSTALL) -m 755 $(SRCDIR)/ifcfg-eth2 \
			$(SYSETCDIR)/sysconfig/network-scripts/ifcfg-eth2
	$(INSTALL) -m 755 $(SRCDIR)/ifcfg-eth3 \
			$(SYSETCDIR)/sysconfig/network-scripts/ifcfg-eth3
	$(INSTALL) -m 755 $(SRCDIR)/ifcfg-eth4 \
			$(SYSETCDIR)/sysconfig/network-scripts/ifcfg-eth4
	$(INSTALL) -m 755 $(SRCDIR)/ntpd.sh $(RCDIR)/init.d/ntpd
	$(INSTALL) -m 755 $(SRCDIR)/testbed $(RCDIR)/init.d/testbed
	-ln -sf $(RCDIR)/init.d/testbed $(RCDIR)/rc3.d/S96testbed
	-ln -sf $(RCDIR)/init.d/testbed $(RCDIR)/rc1.d/K12testbed
	-ln -sf $(RCDIR)/init.d/testbed $(RCDIR)/rc6.d/K12testbed
	$(INSTALL) -m 755 -o root -g wheel -d $(SYSETCDIR)/cron.pend
	if [ -e $(SYSETCDIR)/cron.daily/slocate.cron ]; then \
		mv -f $(SYSETCDIR)/cron.daily/slocate.cron \
				$(SYSETCDIR)/cron.pend; \
	fi
	if [ -e $(SYSETCDIR)/cron.daily/makewhatis.cron ]; then \
		mv -f $(SYSETCDIR)/cron.daily/makewhatis.cron \
				$(SYSETCDIR)/cron.pend; \
	fi
	$(INSTALL) -m 755 $(SRCDIR)/elvin.sh $(RCDIR)/init.d/elvin
	-ln -sf $(RCDIR)/init.d/elvin $(RCDIR)/rc3.d/S96elvin
	-ln -sf $(RCDIR)/init.d/elvin $(RCDIR)/rc1.d/K12elvin
	-ln -sf $(RCDIR)/init.d/elvin $(RCDIR)/rc6.d/K12elvin
	$(INSTALL) -m 755 $(SRCDIR)/rc.local $(RCDIR)/rc.local
	-ln -sf $(RCDIR)/rc.local $(SYSETCDIR)/rc.local

sysetc-remove:
	-rm -f $(RCDIR)/*/S95anacron $(RCDIR)/*/K05anacron 

script-install:	dir-install $(SCRIPTS)
	$(INSTALL) -m 755 $(SRCDIR)/liblocsetup.pm $(BINDIR)/liblocsetup.pm
	$(INSTALL) -m 755 $(SRCDIR)/rc.linux $(BINDIR)/rc/rc.linux
	$(INSTALL) -m 755 $(SRCDIR)/rc.ipod $(BINDIR)/rc/rc.ipod
	$(INSTALL) -m 755 $(SRCDIR)/prepare $(BINDIR)/prepare
	$(INSTALL) -m 755 $(SRCDIR)/ixpboot $(BINDIR)/ixpboot
	$(INSTALL) -m 755 $(SRCDIR)/rc.ixp $(BINDIR)/rc/rc.ixp
	$(INSTALL) -m 755 ./sethostname $(BINDIR)/sethostname
	$(INSTALL) -m 755 ./sethostname.dhclient $(BINDIR)/sethostname.dhclient
	$(INSTALL) -m 755 $(SRCDIR)/rc.healthd $(BINDIR)/rc/rc.healthd
	$(INSTALL) -m 755 $(SRCDIR)/healthd.conf $(BINDIR)/healthd.conf
	$(INSTALL) -m 755 $(SRCDIR)/chipset.awk $(BINDIR)/chipset.awk
	$(INSTALL) -m 755 $(SRCDIR)/cpuspeed.awk $(BINDIR)/cpuspeed.awk
	$(INSTALL) -m 755 $(SRCDIR)/delaysetup $(BINDIR)/delaysetup
	$(INSTALL) -m 755 $(SRCDIR)/nodetype $(BINDIR)/nodetype
	$(INSTALL) -m 755 $(SRCDIR)/mkextrafs.pl $(BINDIR)/mkextrafs.pl
	$(INSTALL) -m 755 $(SRCDIR)/control_interface \
				$(BINDIR)/control_interface

sfs-install:
	$(INSTALL) -m 755 -o root -g wheel -d $(DESTDIR)/etc/sfs
	$(INSTALL) -m 755 $(SRCDIR)/sfs.sh $(RCDIR)/init.d/sfs
	-ln -sf $(RCDIR)/init.d/nfs $(RCDIR)/rc3.d/S20nfs
	-ln -sf $(RCDIR)/init.d/sfs $(RCDIR)/rc6.d/K19sfs
	$(INSTALL) -m 644 $(SRCDIR)/exports $(ETCDIR)/exports
	$(INSTALL) -m 644 $(SRCDIR)/sfsrwsd_config $(ETCDIR)/sfs/sfsrwsd_config
	$(INSTALL) -m 644 $(SRCDIR)/sfssd_config $(ETCDIR)/sfs/sfssd_config
	$(INSTALL) -m 755 -o sfs -g sfs -d $(DESTDIR)/var/sfs
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/root
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/var
	$(INSTALL) -m 775 -o sfs -g sfs -d $(DESTDIR)/var/sfs/usr
