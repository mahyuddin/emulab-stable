#! /bin/bash
#
# Copyright (c) 2013 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

if [ -z "$BINDIR" ] ; then
    if [ -r /etc/emulab/paths.sh ] ; then
	source /etc/emulab/paths.sh
    else
	BINDIR=/usr/local/etc/emulab
	LOGDIR=/var/tmp
    fi
fi
PROJDIR=/proj/emulab-ops

source checkutils.sh

INVDIR=${PROJDIR}/nodecheck

gatherinv_main() {
    echo -n '  Gathering Inventory..'
    
    # create this file to hold the results we gather    
    $(cp /dev/null /tmp/nodecheck.log.tb)

    checks="disk cpu mem nic"
    for i in $checks ; do
	bash $BINDIR/${i}check $LOGDIR/nodecheck.log /tmp/nodecheck.log.tb
    done

    # read in the newly found info
    readtmcinfo /tmp/nodecheck.log.tb

    # print it back out for the database
    { printtmcinfo
} > /tmp/nodecheck.log.tb.new # .new not necessary should reuse old name
    # note what kernel we are running
    printf "#KERNEL %s\n" "$(uname -svr)" >> /tmp/nodecheck.log.tb.new


    # print full locally found inventory
    { printhwinv
} > /tmp/nodecheck.log.inv
    printf "#KERNEL %s\n" "$(uname -svr)" >> /tmp/nodecheck.log.inv

    host=$($BINDIR/tmcc nodeid)
    # make sure proj got mounted
    if [ ! -d $PROJDIR ] ; then
	echo "OHhh all this work for nothing"
	echo "$PROJDIR not mounted can't save info"
	exit 1
    fi

    # start XXX
    # decided to change names again, rename if old names -- XXX remove this after all node have run the new code
    if [ -d ${INVDIR}/$host ] ; then
	owd=$PWD
	cd ${INVDIR}/$host
	[[ -d full ]] && ( mv full .full ; rm -f $host.full )
	[[ -d diff ]] && ( mv diff .diff ; rm -f $host.diff )
	[[ -d tbdb ]] && ( mv tbdb .tbdb ; rm -f $host )
	cd $owd
    fi
    # end XXX

    # have needed dirs ?
    [[ ! -d ${INVDIR}/$host ]] && ( mkdir -p ${INVDIR}/$host ; chmod g+x ${INVDIR}/$host )
    [[ ! -d ${INVDIR}/$host/.tbdb ]] && ( mkdir -p ${INVDIR}/$host/.tbdb ; chmod g+x ${INVDIR}/$host/.tbdb )
    [[ ! -d ${INVDIR}/$host/.full ]] && ( mkdir -p ${INVDIR}/$host/.full ; chmod g+x ${INVDIR}/$host/.full )
    [[ ! -d ${INVDIR}/$host/.diff ]] && ( mkdir -p ${INVDIR}/$host/.diff ; chmod g+x ${INVDIR}/$host/.diff )
    [[ ! -d ${INVDIR}/$host/.tmcc ]] && ( mkdir -p ${INVDIR}/$host/.tmcc ; chmod g+x ${INVDIR}/$host/.tmcc )

    # copy over the files including timestamps
    timestamp=$(date +%y%m%d%H%M%S)
    cp /tmp/nodecheck.log.tb.new ${INVDIR}/$host/.tbdb/$timestamp
    cp /tmp/nodecheck.log.inv ${INVDIR}/$host/.full/$timestamp
    # save what tmcc says right now
    $($BINDIR/tmcc hwinfo > ${INVDIR}/$host/.tmcc/$timestamp)

    # remove old symlinks and make new ones
    owd=$PWD
    cd ${INVDIR}/$host
    [[ -L $host ]] && rm $host #this should be a symlink
    [[ -L node ]] && rm node #this should be a symlink
    [[ -L full ]] && rm -f full #another symlink
    [[ -L tmcc ]] && rm -f tmcc #another symlink
    ln -s .tbdb/${timestamp} ${INVDIR}/$host/$host
    ln -s .tbdb/${timestamp} ${INVDIR}/$host/node
    ln -s .full/$timestamp ${INVDIR}/$host/full
    ln -s .tmcc/$timestamp ${INVDIR}/$host/tmcc
    cd $owd

    # Test what was found locally against what is in the database
    readtmcinfo # info from tmcc.bin hwinv
        # if testing can do something like    readtmcinfo ${INVDIR}/test
    copytmcinfo # copy into hwinvcopy
    readtmcinfo /tmp/nodecheck.log.inv # read full listing of locally found into hwinv, diff for local stuff not in tbdb
    comparetmcinfo /tmp/nodecheck.diff # file for output

    # if we ended up with a diff file handle it
    if [ -s /tmp/nodecheck.diff ] ; then
# show it at runtime??	cat /tmp/nodecheck.diff
	cp /tmp/nodecheck.diff ${INVDIR}/$host/.diff/${timestamp}
	cd  ${INVDIR}/$host
	[[ -L diff ]] && rm -f diff
	ln -s .diff/${timestamp} ${INVDIR}/${host}/diff
    else
	# no diff maybe it got better, put a marker out
	# cp /dev/null ${INVDIR}/${host}/.diff/${timestamp}
	cd  ${INVDIR}/$host
	[[ -L diff ]] && rm -f diff
    fi
	
    # make sure no sudo is needed for read
    chmod g+r ${INVDIR}/$host/.*/${timestamp}

    rm -f /tmp/nodecheck.log.tb /tmp/nodecheck.log.inv
    rm -f /tmp/nodecheck.log.tb.new /tmp/nodecheck.diff
}

gatherinv_main $0





