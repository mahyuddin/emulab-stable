#! /bin/sh
#
# Copyright (c) 2013 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#

#
# This is a shell script instead of a perl script since we want to use this
# in the FreeBSD-based frisbee MFS which does not include perl. It also uses
# only "basic" sh syntax, where the other shell scripts require bash.
#

if [ -r /etc/emulab/paths.sh ]; then
        . /etc/emulab/paths.sh
else
        BINDIR=/etc/testbed
fi
PROJDIR=/proj/emulab-ops

mode="check"
checks="disk cpu mem time nic"
if [ $# -gt 1 -a "$2" = "gather" ]; then
    mode="gather"
    # do not run timecheck for MFS hw gather mode
    checks="disk cpu mem nic gather"
fi

host=`$BINDIR/tmcc nodeid`

# XXX MFSes don't have all the apps we need, so mount an extra directory
if [ -f "$ETCDIR/ismfs" ] ; then
    # XXX only support gather in the MFS
    if [ $mode != "gather" ]; then
	echo '*** nodecheck skipped in MFS'
	exit 0
    fi
    if [ ! -d "$PROJDIR" ] ; then
	mkdir $PROJDIR
    fi
    mounted=0
    if [ ! -d "$PROJDIR/nodecheck" ] ; then
	mount -o soft,intr,bg fs:$PROJDIR $PROJDIR
	if [ $? -ne 0 ]; then
	    echo '*** Could not mount $PROJDIR, nodecheck not done'
	    exit 0
	fi
	mounted=1
    fi
    os=`uname -s`
    export PATH="/usr/local/bin:$PROJDIR/nodecheck/$os/bin:$PATH"

    echo 'Running Hardware Inventory Gather'
    bash $BINDIR/gatherinv
    echo 'Done Running Hardware Inventory'

    if [ $mounted -ne 0 ]; then
	umount $PROJDIR
    fi
    exit 0
fi

#
# XXX see if hwinfo returns anything. If not, assume node checks are not
# supported and don't bother with the rest.
#
hwinfo=`$BINDIR/tmcc hwinfo`
if [ -z "$hwinfo" ]; then
    echo "Skipping nodechecks"
    exit 0
fi

echo "Running nodechecks"
# truncate file at boot time
if [ "$1" = "boot" ] ; then
    echo "-- Start boot_time_node_check --" > $LOGDIR/nodecheck.log
    cp /dev/null /tmp/nodecheck.log.tb
    for i in $checks
    do
	bash $BINDIR/${i}check $LOGDIR/nodecheck.log /tmp/nodecheck.log.tb
    done
    echo "-- Finish boot_time_node_check --" >> $LOGDIR/nodecheck.log
    if [ -f /tmp/nodecheck.log.tb ] ; then
	cp /tmp/nodecheck.log.tb $PROJDIR/nodecheck/$host
	cp /tmp/nodecheck.log.inv $PROJDIR/nodecheck/$host.full
	chmod a+r $PROJDIR/nodecheck/$host*
    fi
else
    rm -f /tmp/nodecheck.log.tb
    for i in $checks
    do
	bash $BINDIR/${i}check $LOGDIR/nodecheck.log
    done
fi

echo "Done with nodechecks"

exit 0
