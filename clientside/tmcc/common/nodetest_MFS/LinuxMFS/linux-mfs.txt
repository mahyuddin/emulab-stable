1. The Linux MFS

The Linux MFS for Emulab is based on busybox. There is actually only a single
MFS that is invoke differently for newnode, admin or frisbee. The root
directories are (on boss):

    /tftpboot/newnode_linux
    /tftpboot/admin_linux
    /tftpboot/frisbee_linux

If you look in those directories you will see grub.cfg files which reference
the common directory (right now: /tftpboot/linux_mfs_64_3.2.7) but invoke
linux with a different elab_mode option for each.

So to make your own, copy the common directory to say /tftpboot/linux_mfs_mine
and then either make your own copies of the stub newnode/admin/frisbee
directories, or just drop a grub.cfg in your copy of the common directory
and modify it accordingly to be a linux or admin MFS depending on what you
are doing.

The actual MFS is initramfs.lzma in the common directory. It is a compressed
cpio archive of a filesystem. To modify it, use the extract_initramfs script
in that directory. It will unpack everything to extracted_initramfs and then
you can go in there and tweak stuff. When you are done, use compress_initramfs
to cpio it all up again.

If you don't need to modify binaries, life is easy. Just tweak whatever scripts
you need, add/remove stuff, etc. However, if you need to rebuild a binary or
install a package, then you need a cross-build environment. Probably talk to
Kirk about that.

2. Tweaking the Emulab DB to use your MFS.

First you have to create an OSID for your MFS. To do that, take this little
xml snippit: 

<osid>
 <attribute name="OS"><value>Linux</value></attribute>
 <attribute name="description"><value>Linux admin MFS</value></attribute>
 <attribute name="features"><value>ping,ssh,ipod,isup</value></attribute>
 <attribute name="magic"><value></value></attribute>
 <attribute name="mfs"><value>1</value></attribute>
 <attribute name="mustclean"><value>1</value></attribute>
 <attribute name="op_mode"><value>PXEFBSD</value></attribute>
 <attribute name="osname"><value>ADMIN-LINUX</value></attribute>
 <attribute name="path"><value>/tftpboot/admin_linux</value></attribute>
 <attribute name="pid"><value>emulab-ops</value></attribute>
 <attribute name="reboot_waittime"><value>120</value></attribute>
 <attribute name="shared"><value>1</value></attribute>
 <attribute name="version"><value>2.6.27.8</value></attribute>
</osid>

stick it in a file and change the osname and path attributes. Then you
can re-import it into the database using load-descriptor:

    wap load-descriptors <filename>

It will print out the name and numeric OSID that it used. Remember that OSID!

Now, to use this OSID on a node. You can set the default MFSes at either the
node_type or node level. For the former you change node_type_attributes and
for the latter node_attributes.

To set it for a node, allocate a node to an experiment. Then go to the Modify
Node Attributes page for the node:

    https://www.emulab.net/modnodeattributes_form.php3?node_id=pc599

You will need to either change or add "adminmfs_osid" and "diskloadmfs_osid"
which serve the obvious purposes. For the value, plug in the OSID you
generated.

3. Ryan's build environment:

Ryan had an UBUNTU10-64-STD node (pc527) on which he had his build environment.

I copied off the /z/local stuff he had on that machine to
ops:/proj/emulab-ops/linux-mfs-z-fs.

I created a custom image as well: emulab-ops/LINUX-MFS-BUILD.

4. Kirk's busybox build environment.

Talk to Kirk.
