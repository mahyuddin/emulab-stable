#!/bin/sh

SMARTCTL="smartctl"
DISKSPEEDTEST="perl ./disktest.pl"
#DISKSPEEDTEST="echo -n "

gettype(){
    aid=`$SMARTCTL --tolerance=verypermissive -i $1 | grep Device | head -1`
    aid=${aid//[/}; aid=${aid//]/}; aid=${aid// /}
    if [ ${aid} != ${aid//WD/} ] ; then
	echo -n "WD"
    elif [ $aid != ${aid//ST/} ] ; then
	if [ $aid != ${aid//SEAGATE/} ] ; then
	    echo -n "SG"
	else
	    echo -n "ST"
	fi
    elif [ $aid != ${aid//Clip/} ]; then
	echo -n "CL"
    else
	echo -n "NA"
    fi
}
getmodel(){
    case $2 in
	WD)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Model | cut -d' ' -f 8)
	    ;;
	SG)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep SEAGATE | cut -d' ' -f 4)
	    ;;
	ST)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Model | cut -d' ' -f 7)
	    ;;
	CL)
	    echo -n "Imation Clip"
	    ;;
	*)
	    echo -n UNSUP
	    ;;
    esac
}
getserial(){
    case $2 in
	WD)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Serial | cut -d' ' -f 6)
	    ;;
	SG)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Serial | cut -d' ' -f 3)
	    ;;
	ST)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Serial | cut -d' ' -f 6)
	    ;;
	CL)
	    echo -n NA
	    ;;
	*)
	    echo -n UNSUP
	    ;;
    esac
}
getfw(){
    case $2 in
	WD)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Firmware | cut -d' ' -f 3)
	    ;;
	SG)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep SEAGATE | cut -d' ' -f 11)
	    ;;
	ST)
	    echo -n $($SMARTCTL --tolerance=verypermissive -i $1 | grep Firmware | cut -d' ' -f 3)
	    ;;
	CL)
	    echo -n PMAP
	    ;;
	*)
	    echo -n UNSUP
	    ;;
    esac
}
gettemp(){
    case $2 in
	WD)
	    tmp=$($SMARTCTL --tolerance=verypermissive -A $1 | grep '^194' | cut -d' ' -f 41)
	    echo -n ${tmp%\)}C
	    ;;
	SG)
	    echo -n $($SMARTCTL --tolerance=verypermissive -A $1 | grep Current | cut -d' ' -f 8)C
	    ;;
	ST)
	    echo -n $($SMARTCTL --tolerance=verypermissive -A $1 | grep '^194'| cut -c 88-89)C
	    ;;
	CL)
	    echo -n NA
	    ;;
	*)
	    echo -n UNSUP
	    ;;
    esac
	    
}

host=`hostname`
if [ -e "/var/emulab/boot/realname" ]; then
    host=`cat /var/emulab/boot/realname`
fi
case "$host" in
    boss*|ops*|bas*|*.flux.utah.edu|pc489*|pc599*|pc465*)
        echo "No way am I going to run this on $host!"
	exit 1
	;;
    # these are temporarily server machines
    pc432*|pc436*|pc439*)
	echo "$host: skipping temporary server machine"
	exit 0
	;;
    pc*)
	;;
esac

os=`uname`
disk=""
disk2=""
usbstick=""

if [ $os = "FreeBSD" ]; then
    if [ -e "/dev/da1" ]; then
	disk="/dev/da1"
    fi
elif [ $os = "Linux" ]; then
    if [ -e "/dev/sda" ] ; then
	if [ `gettype /dev/sda $os` == "CL" ]; then
	    if [ -e "/dev/sda4" ]; then
		usbstick="/dev/sda4"
	    else
		usbstick="/dev/sda"
	    fi
	    disk="/dev/sdb1"
	else
	    disk="/dev/sda1"
	    disk2="/dev/sdb"
	fi
    fi
    list="c d e f"
    for drive in $list ; do
	if [ -e /dev/sd$drive ]; then
	    disk2="$disk2 /dev/sd$drive"
	fi
    done
fi

#tack first drive on front
disk2="$disk $disk2"

#echo os=$os disk=$disk usbstick=$usbstick
#echo disk2=:$disk2:

if [ -z "$disk" ]; then
    echo "$host: no disk ????"
    exit 1
fi

mkdir -p ./disktest.log

{
    if [ -n "$usbstick" ]; then
	scid=`gettype $usbstick $os`
	echo -n "$host: $usbstick ("
	echo -n "read: "
	$DISKSPEEDTEST -q -f -i $usbstick
	echo -n Serial:; getserial $usbstick $scid $os
	echo -n " Model:"; getmodel $usbstick $scid $os 
	echo -n " Firmware:"; getfw $usbstick $scid $os
	echo -n "): "
	echo -n 
	echo ""
    fi
    
    for i in $disk2 ; do
	scid=`gettype $i $os`
	echo -n "$host: $i "
	echo -n "Temp:" ; gettemp $i $scid $os
	echo -n " "
	echo -n "read: "; $DISKSPEEDTEST -q -f -i $i
	echo -n "write:"; $DISKSPEEDTEST -q -f -o $i
	echo -n " "
	echo -n "(Serial:"; getserial $i $scid $os 
	echo -n " Model:"; getmodel $i $scid $os 
	echo -n " Firmware:"; getfw $i $scid $os 
	echo -n ")"
	echo ""
    done
} >./disktest.log/$host.log 2>&1
cat ./disktest.log/$host.log

exit 0


