#! /bin/bash

# find the number of disks
# find the size of each disk

# first arg is the log output file, if not set then /tmp/...

SMARTCTL=""
failed=""

# setup logging
if [ $1 ] ; then
    logfile=$1
else
    logfile="/tmp/nodecheck.log"
fi
tmplog=/tmp/.$$.log
cat /dev/null > ${tmplog}

set +x
#exit on unbound var
#set -u

#need to make sure smartcrl is installed - not by default on our linux images
{
    SMARTCTL=$(which smartctl)
    if [ -z ${SMARTCTL} ] ; then
	if [ -e "/usr/sbin/smartctl" ]; then
	    SMARTCTL="/usr/sbin/smartctl"
	else	    
	    apt-get install smartmontools
	fi
    fi
    SMARTCTL=$(which smartctl)
    if [ -z ${SMARTCTL} ] ; then
	if [ -e "/usr/sbin/smartctl" ]; then
	    SMARTCTL="/usr/sbin/smartctl"
	else	    
	    echo "smartmontools is missing and install failed"
	    failed="FAIL"
	fi
    fi
    
} >> ${tmplog} 2>&1

# needed ?
os=`uname`

# index into dirveinv array
name=0; driver=1; type=2; size=3; temp=4; model=5;

# put smartctl --scan into drive array
unset -v scan ; declare -a scan=($($SMARTCTL --scan))
unset -v drive ; declare -a drivescan=()
y=0
for elm in ${scan[@]} ; do
    drivescan[$y]="${drivescan[$y]} ${elm}"
    [[ "${elm}" == "device" ]] && ((++y))
done

# collect info into driveinv array
unset -v driveinv ; declare -a driveinv=()
for ((idx=0; idx<${#drivescan[*]}; idx++)) ; do
    unset -v d ; declare -a d=(${drivescan[$idx]})
    lend=${#d[*]} ; x=$((lend - 2))

    #name
    cnt=${#driveinv[$idx]}
    driveinv[$idx]="${d[0]}"
    [[ ${#driveinv[*]} -eq $cnt ]] && driveinv[$idx]="NA"
    driveinv[$idx]+=" "

    #driver
    cnt=${#driveinv[$idx]}
    driveinv[$idx]+="${d[2]}"
    [[ ${#driveinv[idx]} -eq $cnt ]] && driveinv[$idx]+="NA"
    driveinv[$idx]+=" "

    #type
    cnt=${#driveinv[$idx]}
    driveinv[$idx]+="${d[$x]}"
    [[ ${#driveinv[idx]} -eq $cnt ]] && driveinv[$idx]+="NA"
    driveinv[$idx]+=" "

    #size
    cnt=${#driveinv[$idx]}
    driveinv[$idx]+="$($SMARTCTL  -i ${d[0]} | grep -i "capacity" | awk '{print $5$6}' | sed s/[][]//g)"
    [[ ${#driveinv[idx]} -eq $cnt ]] && driveinv[$idx]+="NA"
    driveinv[$idx]+=" "

    #temp
    cnt=${#driveinv[$idx]}
    #type 1
    driveinv[$idx]+="$($SMARTCTL  -l scttempsts ${d[0]} | grep "Current Temperature:" | awk '{print $3}')"
    if [ ${#driveinv[idx]} -eq $cnt ] ; then
        #type 2
	driveinv[$idx]+="$($SMARTCTL  -a ${d[0]} | grep "Current Drive Temperature:" | awk '{print $4}')"
    fi
    [[ ${#driveinv[idx]} -eq $cnt ]] && driveinv[$idx]+="NA"
    driveinv[$idx]+=" "

    #vendor product
    cnt=${#driveinv[$idx]}
    #type 1
    driveinv[$idx]+="$($SMARTCTL  -i ${d[0]} | grep "Device Model:" | awk '{print $3$4}')"
    if [ ${#driveinv[idx]} -eq $cnt ] ; then
        #type 2
	driveinv[$idx]+="$($SMARTCTL  -i ${d[0]} | grep -i "Product:" | awk '{print $2}')"
    fi
    [[ ${#driveinv[idx]} -eq $cnt ]] && driveinv[$idx]+="NA"
    driveinv[$idx]+=" "
done


#output to log file - then quit
#{
echo -e "name\t\tdriver\t\ttype\tsize\ttemp\tmodel"
for ((idx=0; idx<${#driveinv[*]}; idx++)) ; do
    unset -v d ; declare -a d=(${driveinv[$idx]})
    echo -e "${d[$name]}\t${d[$driver]}\t\t${d[$type]}\t${d[$size]}\t${d[$temp]}\t${d[$model]}"
done
#} >> ${tmplog} 2>&1

echo "disktest `date`" >> ${logfile}
cat ${tmplog} >> ${logfile} 

if [ -n ${failed} ]
then
    echo ". . . disktest OK"
else
    echo ". . . disktest FAILED"
fi
echo -n ""

exit 0


