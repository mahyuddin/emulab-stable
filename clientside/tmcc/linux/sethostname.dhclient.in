#!/usr/bin/perl -wT
#
# Copyright (c) 2000-2005 University of Utah and the Flux Group.
# 
# {{{EMULAB-LICENSE
# 
# This file is part of the Emulab network testbed software.
# 
# This file is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.
# 
# This file is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this file.  If not, see <http://www.gnu.org/licenses/>.
# 
# }}}
#
use English;

#
# Configure variables
#
my $USEPNAME	= "@DISABLE_NAMED_SETUP@";

#
# Set the hostname for the node according to the current experiment.
# Run from /etc/dhclient-exit-hooks.
#
#	usage: sethostname
#
# A note about Linux. Redhat 9.0 appears to use dhclient instead of pump.
# We maintain/install both variants though to make life easier. 
# 

# Drag in path stuff so we can find emulab stuff.
BEGIN { require "/etc/emulab/paths.pm"; import emulabpaths; }

#
# Turn off line buffering on output
#
$| = 1;

#
# Load the OS independent support library. It will load the OS dependent
# library and initialize itself. 
# 
use libsetup;
use libtmcc;

#
# We assume that we are in the same domain as our boss node
#
my $bossname = tmccbossname();
$bossname = "UNKNOWN"
    if (!defined($bossname));
if ($bossname =~ /^[^\.]+\.(.*)$/) {
    $domain = ".$1";
} else {
    $domain = ".foo.net";
}

#
# If testbed is not maintaining DNS aliases, we had better not
# use the nickname for the hostname as it will not resolve.
#
my $nickname;
if ($USEPNAME) {
    $nickname = `hostname -s`;
    chomp($nickname);
} else {
    $nickname = whatsmynickname();
}
if (! $nickname) {
    print STDERR "No Testbed nickname available!\n";
    exit(0);
}
$nickname = lc($nickname);

# Taint check to make perl happy
if ($nickname =~ /^([-\w\.]+)$/) {
    $nickname = $1; 
}
else {
    die("Bad data in nickname: '$nickname'\n");
}
if ($domain =~ /^([-\w\.]+)$/) {
    $domain = $1;
}
else {
    die("Bad data in nickname: '$domain'\n");
}

#
# Set hostname. This output is redirected to log file by caller. 
#
print STDERR "Resetting hostname to ${nickname}${domain} ... ";

system("/bin/hostname ${nickname}${domain}");
if ($?) {
    print STDERR "*** FAILED!\n";
    exit 1;
}

print STDERR "Done!\n";
exit 0;
