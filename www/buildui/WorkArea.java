import java.awt.*;
import java.util.*;

public class WorkArea {
    private Vector thingees;
    private Vector linkThingees;
    private Vector iFaceThingees;

    public WorkArea() {
	thingees = new Vector();
	linkThingees = new Vector();
	iFaceThingees = new Vector();
	//Thingee foo = new Thingee( "Some Node" );
	//foo.move( 100, 100 );
	//thingees.addElement( foo  );
    }


    public String toNS() {
	Dictionary lanConnections = new Hashtable();
	String r = "";
	
	r += "#generated by Netbuild\n";
	r += "set ns [new Simulator]\n";
	r += "source tb_compat.tcl\n\n";
	
	Enumeration e;

	String s;
	String n;

	e = thingees.elements();
	while ( e.hasMoreElements()) {
	    Thingee t = (Thingee)e.nextElement();
	    if (t instanceof NodeThingee) {
		n = t.getName();
		r += "set " + n + " [$ns node]\n";
		s = t.getProperty( "osid", "" );
		if (0 != s.compareTo("<auto>") &&
		    0 != s.compareTo("")) {
		    r += "tb-set-node-os $" + n + " " + s + "\n";
		}
	    }
	}	

	r += "\n";

	e = linkThingees.elements();
	while (e.hasMoreElements()) {
	    Thingee t1 = (Thingee)e.nextElement();
	    if (!(t1 instanceof LanLinkThingee)) {
		LinkThingee t = (LinkThingee)t1;
		n = t.getName();
		String a = t.getA().getName();
		String b = t.getB().getName();
		String bandwidth = t.getProperty( "bandwidth", "100" ) + "Mb";
		String latency = t.getProperty( "latency", "0" ) + "ms";
		r += "set " + n + " [$ns duplex-link $" + a + " $" + b +
		    " " + bandwidth + " " + latency + " DropTail]\n";
	    } else {
		// it's a lan link
		LinkThingee t = (LanLinkThingee)t1;
		Thingee node,lan;
		if (t.getA() instanceof LanThingee) {
		    lan = t.getA();
		    node = t.getB();
		} else {
		    lan = t.getB();
		    node = t.getA();
		}
		Vector v = (Vector)lanConnections.get( lan.getName() );
		if (v == null) {
		    v = new Vector();
		    lanConnections.put( lan.getName(), v );
		}
		v.addElement( node );
	    }
	}
	
	r += "\n";

	e = iFaceThingees.elements();

	while (e.hasMoreElements()) {
	    Thingee t1 = (Thingee)e.nextElement();
	    if (t1 instanceof IFaceThingee) {
		IFaceThingee t = (IFaceThingee)t1;
		LinkThingee lt = null;
		NodeThingee nt = null; 
		if ( t.getA() instanceof LinkThingee ) {
		    lt = (LinkThingee)t.getA();
		    nt = (NodeThingee)t.getB();
		} else if (t.getB() instanceof LinkThingee ) {
		    lt = (LinkThingee)t.getB();
		    nt = (NodeThingee)t.getA();
		}

		if (lt != null && !(lt instanceof LanLinkThingee)) {
		    s = t.getProperty( "ip", "<auto>" );
		    if (0 != s.compareTo("<auto>") &&
			0 != s.compareTo("")) {
			r += "tb-set-ip-link $" + nt.getName() + 
			    " $" + lt.getName() + " " + s + "\n";
		    }
		}		    
	    }
	}

	r += "\n";

	e = thingees.elements();
	while ( e.hasMoreElements()) {
	    Thingee t = (Thingee)e.nextElement();
	    if (t instanceof LanThingee) {
		Vector v = (Vector)lanConnections.get( t.getName() );
		if (v != null) {
		    r += "set " + t.getName() + " [$ns make-lan \"";
		    Enumeration ce = v.elements();
		    while (ce.hasMoreElements()) {
			Thingee cet = (Thingee)ce.nextElement();
			r += cet.getName() + " ";
		    }
		    String bandwidth = t.getProperty( "bandwidth", "100" ) 
			+ "Mb";
		    String latency = t.getProperty( "latency", "0" ) + "ms";
		    r += "\" " + bandwidth + " " + latency + "]\n";
		}
	    }
	}

	r += "\n";

	e = iFaceThingees.elements();

	while (e.hasMoreElements()) {
	    Thingee t1 = (Thingee)e.nextElement();
	    if (t1 instanceof IFaceThingee) {
		IFaceThingee t = (IFaceThingee)t1;
		LinkThingee lt = null;
		NodeThingee nt = null; 
		if ( t.getA() instanceof LinkThingee ) {
		    lt = (LinkThingee)t.getA();
		    nt = (NodeThingee)t.getB();
		} else if (t.getB() instanceof LinkThingee ) {
		    lt = (LinkThingee)t.getB();
		    nt = (NodeThingee)t.getA();
		}

		if (lt != null && (lt instanceof LanLinkThingee)) {
		    LanLinkThingee llt = (LanLinkThingee)lt;
		    LanThingee lant;
		    if (llt.getA() instanceof LanThingee) {
			lant = (LanThingee)llt.getA();
		    } else {
			lant = (LanThingee)llt.getB();
		    }	       
		    s = t.getProperty( "ip", "<auto>" );
		    if (0 != s.compareTo("<auto>") &&
			0 != s.compareTo("")) {
			r += "tb-set-ip-lan $" + nt.getName() + 
			    " $" + lant.getName() + " " + s + "\n";
		    }
		}		    
	    }
	}

	r += "\n$ns run\n";
	
	return r;
	
	// #generated by Netbuild
	// set ns [new Simulator]
	// source tb_compat.tcl
	// 
	// set NodeA [$ns node]
	// set NodeB [$ns node]
	//
	// tb-set-node-os $NodeA FBSD-STD
	//
	// set LinkA [$ns duplex-link $NodeA $NodeB 100Mb 50ms DropTail]
	// set LinkB [$ns duplex-link $NodeA $NodeB 100Mb .1ms DropTail]
	// tb-set-link-loss $LinkA 0.05
	// tb-set-ip-link $NodeB $linkA 192.168.42.42
	//
	// set lan0 [$ns make-lan "$node0 $node1" 100Mb .1ms]
	// tb-set-lan-loss $Lan1 0.3
	//
	// tb-set-ip-lan $NodeB $lan1 123.4.5.6
	// tb-set-node-lan-delay     $lan0 $node0 40ms
	// tb-set-node-lan-bandwidth $lan0 $node0 20Mb
	// tb-set-node-lan-loss      $lan0 $node0 0.2
        //
	// $ns run
	
    }

    private void selectOneInRectangle( Rectangle r, Thingee t, boolean xor ) {
	int xDiff = t.getX() - r.x;
	int yDiff = t.getY() - r.y;
	if (xDiff > 0 && xDiff < r.width &&
	    yDiff > 0 && yDiff < r.height) {
	    if (!xor || !t.isSelected()) {
		t.select();
	    } else {
		t.deselect();
	    }
	}
    }

    public void selectRectangle( Rectangle r, boolean xor ) {
	Enumeration linkThingeeEnum = linkThingees.elements();

	while ( linkThingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)linkThingeeEnum.nextElement();
	    selectOneInRectangle( r, t, xor );
	}

	Enumeration thingeeEnum = thingees.elements();

	while ( thingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)thingeeEnum.nextElement();
	    selectOneInRectangle( r, t, xor );
	}

	Enumeration iFaceThingeeEnum = iFaceThingees.elements();

	while ( iFaceThingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)iFaceThingeeEnum.nextElement();
	    selectOneInRectangle( r, t, xor );
        }
    }

    public void paint( Graphics g ) {
	Enumeration linkThingeeEnum = linkThingees.elements();

	while ( linkThingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)linkThingeeEnum.nextElement();
	    t.draw( g );
	}

	Enumeration thingeeEnum = thingees.elements();

	while ( thingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)thingeeEnum.nextElement();
	    t.draw( g );
	}

	Enumeration iFaceThingeeEnum = iFaceThingees.elements();

	while ( iFaceThingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)iFaceThingeeEnum.nextElement();
	    t.draw( g );
	}
    }

    public Thingee clicked( int x, int y ) {
      	Enumeration thingeeEnum = iFaceThingees.elements();

	while ( thingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)thingeeEnum.nextElement();
	    if (t.clicked(x, y)) { return t; }
	}

      	thingeeEnum = thingees.elements();

	while ( thingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)thingeeEnum.nextElement();
	    if (t.clicked(x, y)) { return t; }
	}

      	thingeeEnum = linkThingees.elements();

	while ( thingeeEnum.hasMoreElements()) {
	    Thingee t = (Thingee)thingeeEnum.nextElement();
	    if (t.clicked(x, y)) { return t; }
	}
	return null;
    }

    public void remove( Thingee t ) {
	if (t instanceof IFaceThingee) {
	    iFaceThingees.removeElement( t );
	} else if (t instanceof LinkThingee) {
	    boolean done = false;
	    while (!done) {
		done = true;
		Enumeration e = iFaceThingees.elements();
		while (e.hasMoreElements() && done) {
		    IFaceThingee i = (IFaceThingee)e.nextElement();
		    if (i.isConnectedTo(t)) {
			remove( i );
			done = false;
		    }
		}
	    }
	    linkThingees.removeElement( t );
	} else {
	    boolean done = false; // stupid hack.
	    while (!done) {
		done = true;
		Enumeration thingeeEnum = linkThingees.elements();
		while ( thingeeEnum.hasMoreElements() && done) {
		    LinkThingee u = (LinkThingee)thingeeEnum.nextElement();
		    if (u.isConnectedTo(t)) { 
			remove( u );
			done = false;
		    }
		}
	    }
	    thingees.removeElement( t );
	}
    }

    public void add( Thingee t ) {
	if (t instanceof LinkThingee) {
	    linkThingees.addElement( t );
	} else if (t instanceof IFaceThingee) {
	    iFaceThingees.addElement( t );
	} else {
	    thingees.addElement( t );
	}
    }
};
