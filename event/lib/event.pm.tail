#
# CODE PAST THIS POINT WAS NOT AUTOMATICALLY GENERATED BY SWIG
#
# For now, this has to get cat'ed onto the end of event.pm, since it
# doesn't seem possible to get SWIG to just pass it through into the
# output file
#

#
# Stash away the given callback and data, and call the C event_subscribe
# function that uses a stub callback
#
sub event_subscribe($$$;$) {
	my ($handle,$function,$tuple,$data) = @_;
	$event::callback = $function;
	$event::callback_data = $data;
	return stub_event_subscribe($handle,$tuple);
}

#
# Clear $callback_ready, call the C event_poll function, and see if the
# C callback got called (as evidenced by $callback_ready getting set) If it
# did, call the perl callback function.
#
sub event_poll($) {
	my $handle = shift;

	$event::callback_ready = 0;

	my $rv = c_event_poll($handle);
	if ($rv) {
		die "Trouble in event_poll - returned $rv\h";
	}

	if ($event::callback_ready) {
		&$event::callback($handle,$event::callback_notification,
				$event::callback_data);
		event_notification_free($handle,$event::callback_notification);
	}

	return 0;
}

push @EXPORT, qw(event_subscribe event_poll);
1;

