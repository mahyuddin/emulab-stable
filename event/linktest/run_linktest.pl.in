#!/usr/bin/perl -w
#
# wrapper for running linktest that includes
# an extra event for reporting completion.

use strict;
use Getopt::Std;
use English;

# security
$ENV{'PATH'} = '/bin:/usr/bin:/usr/local/bin';

sub usage {
    my $msg = "Usage: run_linktest.pl [-s server] [-p port] [-k keyfile] -e pid/eid [-q]\n";
    $msg .= "\t-q\tquick termination mode\n";
    $msg .= "\t-d n\tdebug level n (development only)\n";
    warn $msg;
    return 1;
}

#
# This script should be run as a real person!
#
if (! $EUID) {
    die("*** $0:\n".
	"    This script should not be run as root!\n");
}

# signal handler in case the process is killed.
$SIG{INT} = sub {
    print "Aborted. Linktest continues on nodes.\n";
    exit(1);
};

my $server;
my $port;
my %opt = ();
getopts("s:e:d:qp:k:",\%opt);
if ($opt{s}) { $server = $opt{s}; } else { $server = "boss"; }
if ($opt{p}) { $port = $opt{p}; }
exit &usage unless ($opt{e});
my ($pid,$eid) = split(/\//,$opt{e});

my $linktest_path; # path to linktest data.
$linktest_path = "/proj/" . $pid . "/exp/" . $eid . "/tbdata/linktest";

# send the startup event.
my $args = &starter;
# event arguments
$args .=  " -x START";
if(defined($opt{q})) {
    $args .= " STARTAT=1 STOPAT=3";
}
if(defined($opt{d})) {
    $args .= " DEBUG=" . $opt{d};
}
&my_system($args);

print "Linktest in progress...\n";
print "Quick termination requested.\n" if defined($opt{q});
print "Debug mode requested.\n" if defined($opt{d});

# wait for the shutdown event.
$args = &starter;
$args .= " -w STOP";
&my_system($args);


# analyze results of the run
exit &analyze;

sub analyze {
    my @dir_contents;
    opendir (DIR,$linktest_path) || die "cannot open Linktest directory.";
    @dir_contents = grep(/\.fatal$|\.error$/, readdir(DIR));
    closedir(DIR);

    foreach my $file (@dir_contents)
    {
	&my_system("/bin/cat","$linktest_path/$file");
	
    }
    if(@dir_contents) {
	return 1;
    } else {
	print "No errors\n";
	return 0;
    }
}

sub my_system {
    if(my $pid = fork) {
	waitpid($pid,0);
    } else {
	my @arg_array = split(/\s+/,"@_");
	exec(@arg_array);
    }

}

sub starter {
    my $cmd = "@CLIENT_BINDIR@/ltevent -s $server -e $pid/$eid";
    if(defined ($opt{p})){
	$cmd .= " -p " . $opt{p};
    }
    if(defined($opt{k})) {
	$cmd .= " -k " . $opt{k};
    }
    return $cmd
}
